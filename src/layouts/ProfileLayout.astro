---
// src/layouts/ProfileLayout.astro - SINGLETON VERSION
import "../styles/global.css";
import Logo from "../components/ui/Logo.astro";
import NotificationBell from "../components/ui/NotificationBell.astro";
import FeedbackWidget from "../components/ui/FeedbackWidget.astro";

export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />

    <script is:inline>
      const savedTheme = localStorage.getItem("theme");
      const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)"
      ).matches;
      const theme = savedTheme || (prefersDark ? "dark" : "light");

      if (theme === "dark") {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      localStorage.setItem("theme", theme);
    </script>
  </head>

  <body class="h-full">
    <!-- Loading Overlay -->
    <div class="auth-loading" id="auth-loading">
      <div class="loading-content">
        <div class="loading-spinner"></div>
        <p>Checking authentication...</p>
      </div>
    </div>

    <!-- Main App -->
    <div class="main-app" id="main-app" style="display: none;">
      <!-- Navigation -->
      <nav class="top-nav">
        <div class="nav-container">
          <Logo size="default" />

          <div class="nav-secondary">
            <div class="user-menu">
              <!-- Profile Avatar as Clickable Element -->
              <button class="user-avatar-btn" id="user-menu" type="button">
                <img
                  id="nav-avatar"
                  src="/images/avatars/preset-1.svg"
                  alt="User Avatar"
                  class="nav-avatar"
                />
                <i class="fas fa-chevron-down avatar-dropdown-arrow"></i>
              </button>

              <div class="user-dropdown" id="user-dropdown">
                <div class="dropdown-header">
                  <img
                    id="dropdown-avatar"
                    src="/images/avatars/preset-1.svg"
                    alt="User Avatar"
                  />
                  <div class="user-info">
                    <span class="user-name" id="dropdown-name">Loading...</span>
                    <span class="user-email" id="dropdown-email"
                      >user@example.com</span
                    >
                  </div>
                </div>
                <div class="dropdown-divider"></div>
                <a href="/profile" class="dropdown-item">
                  <i class="fas fa-user"></i> My Profile
                </a>
                <a href="/profile/account" class="dropdown-item">
                  <i class="fas fa-cog"></i> Account
                </a>
                <div class="dropdown-divider"></div>
                <button
                  class="dropdown-item logout-btn"
                  id="logout-btn"
                  type="button"
                >
                  <i class="fas fa-sign-out-alt"></i> Sign out
                </button>
              </div>
            </div>
            <NotificationBell />
          </div>
        </div>
      </nav>

      <!-- Mobile Profile Navigation -->
      <div class="profile-nav-container">
        <div class="profile-nav">
          <!-- Mobile Menu Toggle -->
          <button class="mobile-nav-toggle" id="mobile-nav-toggle">
            <i class="fas fa-bars"></i>
            <span>Menu</span>
          </button>

          <!-- Navigation Items -->
          <div class="nav-items" id="nav-items">
            <a href="/profile" class="profile-nav-item">My Profile</a>
            <a href="/profile/following" class="profile-nav-item">Following</a>
            <a href="/profile/account" class="profile-nav-item">Account</a>
            <a href="/profile/preferences" class="profile-nav-item"
              >Preferences</a
            >
          </div>

          <!-- Premium Button -->
          <div class="nav-premium">
            <a href="/profile/premium" class="premium-btn">
              <i class="fas fa-star"></i>
              <span class="premium-text">Premium</span>
            </a>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <main class="main-content">
        <div class="content-wrapper">
          <slot />
        </div>
      </main>

      <!-- Footer -->
      <footer class="profile-footer">
        <div class="footer-container">
          <div class="footer-content">
            <div class="footer-brand">
              <Logo size="small" />
              <p>&copy; 2025 TinkByte. Built for builders, by builders.</p>
            </div>

            <div class="footer-links">
              <div class="footer-section">
                <h4>Connect</h4>
                <div class="social-links">
                  <a
                    href="https://twitter.com/tinkbytehq"
                    target="_blank"
                    rel="noopener"
                    class="social-link"
                  >
                    <i class="fab fa-twitter"></i>
                  </a>
                  <a
                    href="https://linkedin.com/company/tinkbytehq"
                    target="_blank"
                    rel="noopener"
                    class="social-link"
                  >
                    <i class="fab fa-linkedin"></i>
                  </a>
                  <a
                    href="https://youtube.com/@tinkbytehq"
                    target="_blank"
                    rel="noopener"
                    class="social-link"
                  >
                    <i class="fab fa-youtube"></i>
                  </a>
                  <a
                    href="https://instagram.com/tinkbytehq"
                    target="_blank"
                    rel="noopener"
                    class="social-link"
                  >
                    <i class="fab fa-instagram"></i>
                  </a>
                  <a href="/rss.xml" class="social-link">
                    <i class="fas fa-rss"></i>
                  </a>
                </div>
              </div>

              <div class="footer-section">
                <h4>Legal</h4>
                <a href="/contact">Contact</a>
                <a href="/terms">Terms</a>
              </div>
            </div>

            <div class="footer-theme">
              <h4>Theme</h4>
              <div class="theme-dropdown">
                <button class="theme-toggle" id="theme-toggle">
                  <i class="fas fa-desktop theme-icon"></i>
                  <span class="theme-text">System</span>
                  <i class="fas fa-chevron-down theme-arrow"></i>
                </button>
                <div class="theme-options" id="theme-options">
                  <button class="theme-option" data-theme="light">
                    <i class="fas fa-sun"></i>
                    <span>Light</span>
                  </button>
                  <button class="theme-option" data-theme="dark">
                    <i class="fas fa-moon"></i>
                    <span>Dark</span>
                  </button>
                  <button class="theme-option" data-theme="system">
                    <i class="fas fa-desktop"></i>
                    <span>System</span>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
    <FeedbackWidget
      position="bottom-right"
      theme="auto"
      hideOnPages={["/admin"]}
    />
  </body>
</html>

<style is:global>
  /* Mobile-First Base Styles */
  * {
    box-sizing: border-box;
  }

  html {
    font-family:
      "Space Grotesk",
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      sans-serif;
  }

  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    background: white;
    color: #1e293b;
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
  }

  html.dark body {
    background: #0f172a;
    color: #f8fafc;
  }
  /* Auth Loading Overlay - SQUARE SPINNER */
  .loading-spinner {
    width: 32px;
    height: 32px;
    border: 3px solid #e2e8f0;
    border-top: 3px solid #243788;
    border-radius: 0; /* SQUARE - not round */
    animation: spin 1s linear infinite;
  }

  html.dark .loading-spinner {
    border-color: #334155;
    border-top-color: #b4bce1;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  /* Auth Loading Overlay */
  .auth-loading {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: white;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
  }

  html.dark .auth-loading {
    background: #0f172a;
  }

  .loading-content {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  .loading-spinner {
    width: 32px;
    height: 32px;
    border: 3px solid #e2e8f0;
    border-top: 3px solid #243788;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  html.dark .loading-spinner {
    border-color: #334155;
    border-top-color: #b4bce1;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  .loading-content p {
    color: #64748b;
    font-size: 0.875rem;
    margin: 0;
  }

  html.dark .loading-content p {
    color: #94a3b8;
  }

  /* Main App */
  .main-app {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }

  /* Top Navigation - Mobile First */
  .top-nav {
    position: sticky;
    top: 0;
    z-index: 1000;
    background: white;
    border-bottom: 2px solid #e2e8f0;
    backdrop-filter: blur(10px);
  }

  html.dark .top-nav {
    background: #0f172a;
    border-bottom-color: #334155;
  }

  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 4rem;
  }

  .nav-secondary {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  /* User Menu - Mobile Optimized */ /* User Menu - Avatar-Based */
  .user-menu {
    position: relative;
  }

  .user-avatar-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    padding: 0.25rem;
    border: 2px solid transparent;
    background: transparent;
    font-family: inherit;
    color: inherit;
    transition: all 0.3s ease;
    border-radius: 0;
    position: relative;
  }

  .user-avatar-btn:hover {
    border-color: #243788;
    background: rgba(36, 55, 136, 0.05);
  }

  html.dark .user-avatar-btn:hover {
    border-color: #b4bce1;
    background: rgba(180, 188, 225, 0.05);
  }

  /* Square Navigation Avatar */
  .nav-avatar {
    width: 40px;
    height: 40px;
    border: 2px solid #e2e8f0;
    object-fit: cover;
    display: block;
    border-radius: 0; /* Square avatar */
    transition: all 0.3s ease;
  }

  html.dark .nav-avatar {
    border-color: #334155;
  }

  .user-avatar-btn:hover .nav-avatar {
    border-color: #243788;
    transform: translateY(-1px);
  }

  html.dark .user-avatar-btn:hover .nav-avatar {
    border-color: #b4bce1;
  }

  /* Small Dropdown Arrow on Avatar */
  .avatar-dropdown-arrow {
    position: absolute;
    bottom: -2px;
    right: -2px;
    font-size: 0.625rem;
    color: #64748b;
    background: white;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #e2e8f0;
    transition: all 0.2s ease;
    border-radius: 0;
  }

  html.dark .avatar-dropdown-arrow {
    background: #1e293b;
    color: #94a3b8;
    border-color: #334155;
  }

  .user-avatar-btn:hover .avatar-dropdown-arrow {
    transform: rotate(180deg);
    background: #243788;
    color: white;
    border-color: #243788;
  }

  html.dark .user-avatar-btn:hover .avatar-dropdown-arrow {
    background: #b4bce1;
    color: #0f172a;
    border-color: #b4bce1;
  }

  /* Dropdown - Improved for Avatar Menu */
  .user-dropdown {
    position: absolute;
    top: calc(100% + 0.75rem);
    right: 0;
    background: white;
    border: 2px solid #243788;
    min-width: 280px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
    z-index: 1001;
    border-radius: 0;
  }

  html.dark .user-dropdown {
    background: #0f172a;
    border-color: #475569;
  }

  .user-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .dropdown-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.25rem;
    border-bottom: 2px solid #e2e8f0;
  }

  html.dark .dropdown-header {
    border-bottom-color: #334155;
  }

  /* Square Dropdown Avatar */
  .dropdown-header img {
    width: 48px;
    height: 48px;
    border-radius: 0; /* Square avatar */
    object-fit: cover;
    border: 2px solid #e2e8f0;
  }

  html.dark .dropdown-header img {
    border-color: #334155;
  }

  .user-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    flex: 1;
  }

  .user-name {
    font-weight: 600;
    color: #1e293b;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  html.dark .user-name {
    color: #f8fafc;
  }

  .user-email {
    font-size: 0.75rem;
    color: #64748b;
    word-break: break-all;
  }

  html.dark .user-email {
    color: #94a3b8;
  }

  .dropdown-divider {
    height: 2px;
    background: #e2e8f0;
    margin: 0.5rem 0;
  }

  html.dark .dropdown-divider {
    background: #334155;
  }

  .dropdown-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.875rem 1.25rem;
    color: #1e293b;
    text-decoration: none;
    transition: all 0.3s ease;
    border: none;
    background: none;
    width: 100%;
    text-align: left;
    cursor: pointer;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border-left: 3px solid transparent;
    font-family: inherit;
  }

  .dropdown-item:hover {
    background: #f8fafc;
    border-left-color: #243788;
    color: #243788;
    transform: translateX(4px);
  }

  html.dark .dropdown-item {
    color: #e2e8f0;
  }

  html.dark .dropdown-item:hover {
    background: #334155;
    border-left-color: #b4bce1;
    color: #b4bce1;
  }

  .logout-btn:hover {
    background: rgba(239, 68, 68, 0.1);
    border-left-color: #ef4444;
    color: #ef4444;
  }

  /* Mobile Responsive for Avatar Menu */
  @media (max-width: 768px) {
    .nav-avatar {
      width: 36px;
      height: 36px;
    }

    .avatar-dropdown-arrow {
      width: 14px;
      height: 14px;
      font-size: 0.5rem;
    }

    .user-dropdown {
      min-width: 260px;
      right: -1rem;
    }

    .dropdown-header {
      padding: 1rem;
    }

    .dropdown-header img {
      width: 40px;
      height: 40px;
    }

    .dropdown-item {
      padding: 0.75rem 1rem;
      font-size: 0.8125rem;
    }
  }

  .dropdown-item:hover {
    background: #f8fafc;
    border-left-color: #243788;
    color: #243788;
    transform: translateX(4px);
  }

  html.dark .dropdown-item {
    color: #e2e8f0;
  }

  html.dark .dropdown-item:hover {
    background: #334155;
    border-left-color: #b4bce1;
    color: #b4bce1;
  }

  .logout-btn:hover {
    background: rgba(239, 68, 68, 0.1);
    border-left-color: #ef4444;
    color: #ef4444;
  }

  /* Profile Navigation - Mobile First */
  .profile-nav-container {
    background: white;
    border-bottom: 2px solid #e2e8f0;
    position: sticky;
    top: 4rem;
    z-index: 999;
  }

  html.dark .profile-nav-container {
    background: #1e293b;
    border-bottom-color: #334155;
  }

  .profile-nav {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: 3.5rem;
  }

  /* Mobile Navigation Toggle */
  .mobile-nav-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem;
    background: transparent;
    border: 2px solid transparent;
    color: #64748b;
    font-family: inherit;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: 0;
  }

  .mobile-nav-toggle:hover {
    background: #f8fafc;
    border-color: #243788;
    color: #243788;
  }

  html.dark .mobile-nav-toggle {
    color: #94a3b8;
  }

  html.dark .mobile-nav-toggle:hover {
    background: rgba(180, 188, 225, 0.05);
    border-color: #b4bce1;
    color: #b4bce1;
  }

  /* Navigation Items - Mobile First */
  .nav-items {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border-top: 2px solid #e2e8f0;
    border-bottom: 2px solid #e2e8f0;
    z-index: 998;
  }

  html.dark .nav-items {
    background: #1e293b;
    border-color: #334155;
  }

  .nav-items.show {
    display: flex;
    flex-direction: column;
  }

  .profile-nav-item {
    display: flex;
    align-items: center;
    padding: 1rem 1.5rem;
    color: #64748b;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border-bottom: 1px solid #e2e8f0;
    border-left: 3px solid transparent;
    transition: all 0.3s ease;
    white-space: nowrap;
  }

  .profile-nav-item:last-child {
    border-bottom: none;
  }

  .profile-nav-item:hover {
    color: #243788;
    background: rgba(36, 55, 136, 0.05);
    border-left-color: #243788;
    transform: translateX(4px);
  }

  .profile-nav-item.active {
    color: #243788;
    background: rgba(36, 55, 136, 0.05);
    border-left-color: #243788;
  }

  html.dark .profile-nav-item {
    color: #94a3b8;
    border-bottom-color: #334155;
  }

  html.dark .profile-nav-item:hover,
  html.dark .profile-nav-item.active {
    color: #b4bce1;
    background: rgba(180, 188, 225, 0.05);
    border-left-color: #b4bce1;
  }

  /* Premium Button - Mobile First */
  .nav-premium {
    flex-shrink: 0;
  }

  .premium-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: linear-gradient(135deg, #243788 0%, #1e2f6b 100%);
    color: white;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.8125rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    transition: all 0.3s ease;
    border: 2px solid #243788;
    white-space: nowrap;
  }

  .premium-btn:hover {
    background: linear-gradient(135deg, #1e2f6b 0%, #243788 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(36, 55, 136, 0.3);
  }

  .premium-btn i {
    color: #fbbf24;
    font-size: 0.875rem;
  }

  .premium-text {
    display: none;
  }

  /* Main Content - Mobile First */
  .main-content {
    flex: 1;
    padding: 1rem 0;
    min-height: calc(100vh - 200px);
    background: white;
  }

  html.dark .main-content {
    background: #0f172a;
  }

  .content-wrapper {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  /* Footer - Mobile First */
  .profile-footer {
    background: #0f172a;
    border-top: 2px solid #1e293b;
    margin-top: 2rem;
    padding: 2rem 0 1rem 0;
  }

  .footer-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .footer-content {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    align-items: start;
  }

  .footer-brand {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
  }

  .footer-brand p {
    color: #64748b;
    font-size: 0.875rem;
    margin: 0;
  }

  .footer-links {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    width: 100%;
  }

  .footer-section {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .footer-section h4 {
    color: #f8fafc;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    margin: 0 0 0.75rem 0;
  }

  .footer-section a {
    color: #94a3b8;
    text-decoration: none;
    font-size: 0.8125rem;
    transition: color 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .footer-section a:hover {
    color: #b4bce1;
  }

  /* Social Links - Mobile First */
  .social-links {
    display: flex;
    gap: 0.75rem;
    margin-top: 0.5rem;
    flex-wrap: wrap;
  }

  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background: #1e293b;
    color: #94a3b8;
    text-decoration: none;
    transition: all 0.3s ease;
    border: 1px solid #334155;
  }

  .social-link:hover {
    background: #243788;
    color: white;
    transform: translateY(-2px);
    border-color: #243788;
    box-shadow: 0 4px 12px rgba(36, 55, 136, 0.3);
  }

  .social-link i {
    font-size: 1rem;
  }

  /* Theme Dropdown - Mobile First */
  .footer-theme h4 {
    color: #f8fafc;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    margin: 0 0 0.75rem 0;
  }

  .theme-dropdown {
    position: relative;
    width: 100%;
  }

  .theme-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: #1e293b;
    border: 2px solid #334155;
    color: #94a3b8;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.8125rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    font-family: inherit;
    width: 100%;
  }

  .theme-toggle:hover {
    border-color: #b4bce1;
    color: #b4bce1;
    background: rgba(180, 188, 225, 0.05);
  }

  .theme-arrow {
    margin-left: auto;
    font-size: 0.75rem;
    transition: transform 0.2s ease;
  }

  .theme-dropdown.open .theme-arrow {
    transform: rotate(180deg);
  }

  .theme-options {
    position: absolute;
    bottom: 100%;
    left: 0;
    right: 0;
    background: #0f172a;
    border: 2px solid #334155;
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: all 0.2s ease;
    z-index: 1000;
    margin-bottom: 0.5rem;
  }

  .theme-options.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .theme-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: transparent;
    border: none;
    color: #94a3b8;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.8125rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    font-family: inherit;
    width: 100%;
    text-align: left;
    border-left: 3px solid transparent;
  }

  .theme-option:hover {
    background: rgba(180, 188, 225, 0.05);
    color: #b4bce1;
    border-left-color: #b4bce1;
    transform: translateX(4px);
  }

  .theme-option.active {
    color: #b4bce1;
    background: rgba(180, 188, 225, 0.1);
    border-left-color: #b4bce1;
  }

  /* Tablet Styles (768px and up) */
  @media (min-width: 768px) {
    .nav-container {
      height: 4.5rem;
      padding: 0 1.5rem;
    }

    .nav-secondary {
      gap: 1.5rem;
    }

    .username {
      display: block;
      font-size: 0.875rem;
    }

    .user-display {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }

    .dropdown-header img {
      width: 48px;
      height: 48px;
    }

    .mobile-nav-toggle {
      display: none;
    }

    .nav-items {
      display: flex;
      position: static;
      background: transparent;
      border: none;
      flex-direction: row;
      gap: 0;
      flex: 1;
    }

    .profile-nav-item {
      border-bottom: 3px solid transparent;
      border-left: none;
      padding: 1rem 1.5rem;
      transform: none;
    }

    .profile-nav-item:hover {
      transform: none;
      border-left: none;
      border-bottom-color: #243788;
    }

    .profile-nav-item.active {
      border-left: none;
      border-bottom-color: #243788;
    }

    html.dark .profile-nav-item:hover,
    html.dark .profile-nav-item.active {
      border-left: none;
      border-bottom-color: #b4bce1;
    }

    .nav-premium {
      margin-left: auto;
      padding-left: 2rem;
    }

    .premium-btn {
      padding: 0.75rem 1.5rem;
      font-size: 0.875rem;
    }

    .premium-text {
      display: inline;
    }

    .main-content {
      padding: 2rem 0;
    }

    .content-wrapper {
      padding: 0 1.5rem;
    }

    .profile-footer {
      margin-top: 3rem;
      padding: 3rem 0 2rem 0;
    }

    .footer-content {
      display: grid;
      grid-template-columns: 2fr 1fr auto;
      gap: 3rem;
      align-items: start;
    }

    .footer-brand {
      width: auto;
    }

    .footer-links {
      display: flex;
      flex-direction: row;
      gap: 3rem;
      width: auto;
    }

    .theme-dropdown {
      width: 140px;
    }

    .theme-toggle {
      width: 100%;
    }

    .social-link i {
      font-size: 1.125rem;
    }
  }

  /* Desktop Styles (1024px and up) */
  @media (min-width: 1024px) {
    .nav-container {
      padding: 0 2rem;
    }

    .content-wrapper {
      padding: 0 2rem;
    }

    .footer-container {
      padding: 0 2rem;
    }

    .profile-footer {
      margin-top: 4rem;
    }
  }
</style>

<script>
  import { authManager } from "../lib/auth.js";

  class ProfileLayoutManager {
    private initialized = false;
    private authManager = authManager;
    private unsubscribeAuth: (() => void) | null = null;

    constructor() {
      this.init();
    }

    async init() {
      if (this.initialized) return;

      try {
        console.log("🚀 ProfileLayout: Starting initialization...");

        // Skip auth check for signin page
        if (window.location.pathname === "/auth/signin") {
          this.showMainApp();
          this.setupOtherElements();
          return;
        }

        // Initialize auth manager
        await this.authManager.initialize();

        // Check authentication
        if (!(await this.authManager.isAuthenticated())) {
          console.log("❌ Not authenticated, redirecting to signin");
          window.location.href = "/auth/signin";
          return;
        }

        // Get user data
        const user = this.authManager.getUser();
        const profile = this.authManager.getProfile();

        console.log("✅ User authenticated:", user?.email);

        // Show app and update UI
        this.showMainApp();
        this.updateUI(user, profile);
        this.setupEventListeners();
        this.setupOtherElements();

        // Listen for auth changes
        this.unsubscribeAuth = this.authManager.onAuthChange(
          (user, profile) => {
            if (!user) {
              console.log("🔄 User signed out, redirecting...");
              window.location.href = "/auth/signin";
            } else {
              this.updateUI(user, profile);
            }
          }
        );

        this.initialized = true;
        console.log("✅ ProfileLayout: Initialization complete");
      } catch (error) {
        console.error("❌ ProfileLayout: Initialization failed:", error);
        this.showMainApp(); // Show app anyway to prevent blank screen
        this.setupOtherElements();
      }
    }

    private showMainApp() {
      const authLoading = document.getElementById("auth-loading");
      const mainApp = document.getElementById("main-app");

      if (authLoading) authLoading.style.display = "none";
      if (mainApp) mainApp.style.display = "flex";
    }

    private updateUI(user: any, profile: any) {
      try {
        const displayName = this.authManager.getDisplayName();
        const avatarUrl = this.authManager.getAvatarUrl();

        // Update navigation elements
        const navAvatar = document.getElementById(
          "nav-avatar"
        ) as HTMLImageElement;
        const dropdownName = document.getElementById("dropdown-name");
        const dropdownEmail = document.getElementById("dropdown-email");
        const dropdownAvatar = document.getElementById(
          "dropdown-avatar"
        ) as HTMLImageElement;

        if (navAvatar) navAvatar.src = avatarUrl;
        if (dropdownName) dropdownName.textContent = displayName;
        if (dropdownEmail) dropdownEmail.textContent = user?.email || "";
        if (dropdownAvatar) dropdownAvatar.src = avatarUrl;

        console.log("✅ ProfileLayout: UI updated for", displayName);
      } catch (error) {
        console.error("❌ ProfileLayout: UI update failed:", error);
      }
    }

    private setupEventListeners() {
      this.setupLogout();
      this.setupUserMenu();
      this.setupMobileNav();
      this.setupThemeDropdown();
      this.setActiveNavItem();
      this.setupProfileUpdateListener();
    }

    private async setupLogout() {
      const logoutBtn = document.getElementById(
        "logout-btn"
      ) as HTMLButtonElement;

      if (logoutBtn) {
        logoutBtn.addEventListener("click", async (e) => {
          e.preventDefault();

          if (confirm("Are you sure you want to sign out?")) {
            try {
              // Store original content BEFORE modifying
              const originalContent = logoutBtn.innerHTML;

              logoutBtn.innerHTML =
                '<i class="fas fa-spinner fa-spin"></i> Signing out...';
              logoutBtn.disabled = true;

              // Use singleton auth manager
              await this.authManager.signOut();

              // Redirect will happen automatically via auth change listener
              window.location.href = "/";
            } catch (error) {
              console.error("❌ ProfileLayout: Signout error:", error);

              // Restore button state using the stored original content
              const originalContent = logoutBtn.innerHTML.includes(
                "Signing out"
              )
                ? '<i class="fas fa-sign-out-alt"></i> Sign out'
                : logoutBtn.innerHTML;

              logoutBtn.innerHTML = originalContent;
              logoutBtn.disabled = false;

              // Force redirect anyway
              window.location.href = "/";
            }
          }
        });
      }
    }

    private setupUserMenu() {
      const userMenu = document.getElementById(
        "user-menu"
      ) as HTMLButtonElement;
      const userDropdown = document.getElementById(
        "user-dropdown"
      ) as HTMLElement;

      if (userMenu && userDropdown) {
        userMenu.addEventListener("click", (e) => {
          e.stopPropagation();
          userDropdown.classList.toggle("show");
        });

        // Close dropdown when clicking outside
        document.addEventListener("click", (event) => {
          if (
            !userMenu.contains(event.target as Node) &&
            !userDropdown.contains(event.target as Node)
          ) {
            userDropdown.classList.remove("show");
          }
        });

        // Prevent dropdown from closing when clicking inside it
        userDropdown.addEventListener("click", (e) => {
          e.stopPropagation();
        });
      }
    }

    private setupMobileNav() {
      const mobileNavToggle = document.getElementById(
        "mobile-nav-toggle"
      ) as HTMLButtonElement;
      const navItems = document.getElementById("nav-items") as HTMLElement;

      if (mobileNavToggle && navItems) {
        mobileNavToggle.addEventListener("click", (e) => {
          e.stopPropagation();
          navItems.classList.toggle("show");

          const icon = mobileNavToggle.querySelector("i");
          if (icon) {
            if (navItems.classList.contains("show")) {
              icon.className = "fas fa-times";
            } else {
              icon.className = "fas fa-bars";
            }
          }
        });

        document.addEventListener("click", () => {
          navItems.classList.remove("show");
          const icon = mobileNavToggle.querySelector("i");
          if (icon) {
            icon.className = "fas fa-bars";
          }
        });

        navItems.addEventListener("click", (e) => {
          e.stopPropagation();
        });
      }
    }

    private setupThemeDropdown() {
      const themeToggle = document.getElementById(
        "theme-toggle"
      ) as HTMLButtonElement;
      const themeOptions = document.getElementById(
        "theme-options"
      ) as HTMLElement;
      const themeDropdown = themeToggle?.parentElement;
      const themeOptionButtons = document.querySelectorAll(
        ".theme-option"
      ) as NodeListOf<HTMLButtonElement>;
      const themeIcon = document.querySelector(".theme-icon") as HTMLElement;
      const themeText = document.querySelector(".theme-text") as HTMLElement;

      const currentTheme = localStorage.getItem("theme") || "system";
      this.updateThemeDisplay(currentTheme, themeIcon, themeText);

      if (themeToggle && themeOptions && themeDropdown) {
        themeToggle.addEventListener("click", (e) => {
          e.stopPropagation();
          themeDropdown.classList.toggle("open");
          themeOptions.classList.toggle("show");
        });

        document.addEventListener("click", () => {
          themeDropdown.classList.remove("open");
          themeOptions.classList.remove("show");
        });

        themeOptionButtons.forEach((option) => {
          const theme = option.getAttribute("data-theme");
          if (theme === currentTheme) {
            option.classList.add("active");
          }

          option.addEventListener("click", () => {
            themeOptionButtons.forEach((opt) => opt.classList.remove("active"));
            option.classList.add("active");

            if (theme === "dark") {
              document.documentElement.classList.add("dark");
              localStorage.setItem("theme", "dark");
            } else if (theme === "light") {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("theme", "light");
            } else {
              const prefersDark = window.matchMedia(
                "(prefers-color-scheme: dark)"
              ).matches;
              if (prefersDark) {
                document.documentElement.classList.add("dark");
              } else {
                document.documentElement.classList.remove("dark");
              }
              localStorage.setItem("theme", "system");
            }

            this.updateThemeDisplay(theme || "system", themeIcon, themeText);
            themeDropdown.classList.remove("open");
            themeOptions.classList.remove("show");
          });
        });
      }
    }

    private updateThemeDisplay(
      theme: string,
      themeIcon: HTMLElement,
      themeText: HTMLElement
    ) {
      if (!themeIcon || !themeText) return;

      switch (theme) {
        case "light":
          themeIcon.className = "fas fa-sun theme-icon";
          themeText.textContent = "Light";
          break;
        case "dark":
          themeIcon.className = "fas fa-moon theme-icon";
          themeText.textContent = "Dark";
          break;
        default:
          themeIcon.className = "fas fa-desktop theme-icon";
          themeText.textContent = "System";
      }
    }

    private setActiveNavItem() {
      const currentPath = window.location.pathname;
      const navItems = document.querySelectorAll(
        ".profile-nav-item"
      ) as NodeListOf<HTMLAnchorElement>;

      navItems.forEach((item) => {
        const href = item.getAttribute("href");
        item.classList.remove("active");

        if (
          href &&
          (href === currentPath ||
            (currentPath.startsWith(href) && href !== "/profile") ||
            (currentPath === "/profile" && href === "/profile"))
        ) {
          item.classList.add("active");
        }
      });
    }

    private setupProfileUpdateListener() {
      window.addEventListener("profile-updated", (event: any) => {
        console.log("🔄 ProfileLayout: Profile updated, refreshing UI");
        const user = this.authManager.getUser();
        const profile = this.authManager.getProfile();
        this.updateUI(user, profile);
      });
    }

    private setupOtherElements() {
      // Setup any other elements that don't require authentication
      this.setupThemeDropdown();
      this.setActiveNavItem();
    }

    // Cleanup method
    destroy() {
      if (this.unsubscribeAuth) {
        this.unsubscribeAuth();
        this.unsubscribeAuth = null;
      }
      this.initialized = false;
    }
  }

  // Initialize when DOM is ready
  document.addEventListener("DOMContentLoaded", () => {
    new ProfileLayoutManager();
  });

  // Cleanup on page unload
  window.addEventListener("beforeunload", () => {
    // Any cleanup if needed
  });
</script>
