---
// src/layouts/BlogPost.astro
import Layout from "./Layout.astro";
import { Image } from "astro:assets";
import ShareButtons from "../components/ui/ShareButtons.astro";
import RelatedPosts from "../components/blog/RelatedPosts.astro";
import AudioPlayer from "../components/ui/AudioPlayer.astro";
import AuthorBio from "../components/blog/AuthorBio.astro";
import ReactionBar from "../components/blog/ReactionBar.astro";
import { SITE } from "../config/site";
import { getCollection } from "astro:content";
import MDXProvider from "../components/MDXProvider.astro";
import TinkByteCommentSection from "../components/comments/TinkByteCommentSection.astro";
import FeedbackWidget from "../components/ui/FeedbackWidget.astro";

// Import TinaCMS components properly
import ImageBlock from "../components/tina/ImageBlock.astro";
import VideoBlock from "../components/tina/VideoBlock.astro";
import CalloutBox from "../components/tina/CalloutBox.astro";
import ButtonBlock from "../components/tina/ButtonBlock.astro";
import CodeBlock from "../components/tina/CodeBlock.astro";
import Quote from "../components/tina/Quote.astro";
import TableBlock from "../components/tina/TableBlock.astro";
import ImageGallery from "../components/tina/ImageGallery.astro";
import TwoColumnLayout from "../components/tina/TwoColumnLayout.astro";
import Newsletter from "../components/tina/Newsletter.astro";

export interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  excerpt?: string;
  date: string | Date;
  updatedDate?: string | Date;
  readTime?: string;
  tags: string[];
  category?: string;
  authorInfo?: {
    name: string;
    bio?: string;
    avatar?: string;
    role?: string;
    social?: {
      twitter?: string;
      linkedin?: string;
      github?: string;
      website?: string;
    };
  };
  author?: string;
  heroImage?: {
    imageType: "upload" | "url";
    uploadedImage?: string;
    externalUrl?: string;
    alt: string;
    caption?: string;
  };
  image?: string;
  imageAlt?: string;
  audioUrl?: string;
  audioDuration?: string;
  slug?: string;
  featured?: boolean;
  trending?: boolean;
  navigationContext?: any;
  analyticsData?: any;
  seoTitle?: string;
  seoDescription?: string;
  canonicalUrl?: string;
  headings?: any[];
  renderError?: any;
  showReadingProgress?: boolean;
}

const {
  title,
  subtitle,
  description,
  excerpt,
  date,
  readTime,
  tags = [],
  category,
  authorInfo,
  author,
  heroImage,
  image,
  imageAlt,
  audioUrl,
  audioDuration,
  slug,
  showReadingProgress = true,
} = Astro.props;

// Enhanced slug resolution with multiple fallbacks
const resolveArticleId = () => {
  if (slug && slug.trim()) {
    return slug.trim();
  }

  if (Astro.params.slug && Astro.params.slug.trim()) {
    return Astro.params.slug.trim();
  }

  const pathname = Astro.url.pathname;
  const pathSegments = pathname
    .split("/")
    .filter((segment) => segment.length > 0);
  if (pathSegments.length > 0) {
    const lastSegment = pathSegments[pathSegments.length - 1];
    if (lastSegment && lastSegment !== "blog" && lastSegment.length > 0) {
      return lastSegment;
    }
  }

  if (title && title.trim()) {
    return title
      .toLowerCase()
      .replace(/[^\w\s-]/g, "")
      .replace(/\s+/g, "-")
      .replace(/-+/g, "-")
      .trim();
  }

  return `article-${Date.now()}`;
};

const articleId = resolveArticleId();

// Robust author data handling
const getAuthorData = () => {
  if (authorInfo && authorInfo.name) {
    return {
      name: authorInfo.name,
      bio: authorInfo.bio || null,
      avatar: authorInfo.avatar || null,
      role: authorInfo.role || null,
      social: authorInfo.social || null,
    };
  }

  if (author) {
    return {
      name: author,
      bio: null,
      avatar: null,
      role: null,
      social: null,
    };
  }

  return {
    name: "TinkByte Team",
    bio: null,
    avatar: null,
    role: null,
    social: null,
  };
};

const authorData = getAuthorData();

const getImageSrc = () => {
  if (heroImage) {
    if (heroImage.imageType === "upload" && heroImage.uploadedImage) {
      return heroImage.uploadedImage;
    }
    if (heroImage.imageType === "url" && heroImage.externalUrl) {
      return heroImage.externalUrl;
    }
  }

  if (image) {
    return image;
  }

  return null;
};

const imageSrc = getImageSrc();
const finalImageAlt = heroImage?.alt || imageAlt || title;
const imageCaption = heroImage?.caption;

const postDescription = description || excerpt || "";
const publishedTime = new Date(date).toISOString();
const formattedDate = new Date(date).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

// Get all posts for navigation
const allPosts = await getCollection("blog", ({ data }) => !data.draft);
const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

const currentIndex = sortedPosts.findIndex((post) => post.slug === articleId);
const previousPost =
  currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;
const nextPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;

// Category color mapping
const getCategoryColor = (cat: string | undefined): string => {
  if (!cat) return "#6b7280";
  const colors: Record<string, string> = {
    "build-thinking": "#1A73E8",
    "learning-by-doing": "#EA4335",
    "product-lessons": "#10B981",
    "startup-insight": "#EF4444",
    "product-strategy": "#F59E0B",
    "fail-iterate-ship": "#FF6B35",
    "ai-evolution": "#8B5CF6",
    "developer-tools": "#06B6D4",
    "research-bites": "#EC4899",
    "global-perspective": "#9C27B0",
    "community-innovation": "#10B981",
    "tech-culture": "#EC4899",
    "system-thinking": "#059669",
    "the-interface": "#3B82F6",
    "career-stacks": "#DC2626",
    "future-stacks": "#7C3AED",
    "creator-economy": "#F472B6",
    "business-models": "#6366F1",
    "business-models-monetization": "#6366F1",
    "consumer-behavior": "#0891B2",
    "consumer-behavior-attention": "#0891B2",
    "market-maps": "#059669",
    "ecosystem-shifts-market-maps": "#059669",
    "people-systems": "#EA580C",
    "no-fluff-coverage": "#FF9800",
    "research-backed": "#FBBC04",
    "build-loop": "#FF6B35",
  };

  const normalizedCat = cat
    ?.toLowerCase()
    .replace(/\s+/g, "-")
    .replace(/[^\w-]/g, "");
  return colors[normalizedCat] || "#6b7280";
};

const categoryColor = getCategoryColor(category);
const formatCategory = (cat: string | undefined): string => {
  if (!cat) return "ARTICLE";
  return cat.replace(/-/g, " ").toUpperCase();
};

const getAuthorName = (postData: any): string => {
  try {
    if (postData?.data?.authorInfo?.name) {
      return postData.data.authorInfo.name;
    }
    if (postData?.data?.author) {
      return postData.data.author;
    }
    return "TinkByte Team";
  } catch (error) {
    //console.warn("Error getting author name:", error);
    return "TinkByte Team";
  }
};

// Make TinaCMS components available for MDX
if (typeof globalThis !== "undefined") {
  globalThis.ImageBlock = ImageBlock;
  globalThis.VideoBlock = VideoBlock;
  globalThis.Callout = CalloutBox;
  globalThis.ButtonBlock = ButtonBlock;
  globalThis.CodeBlock = CodeBlock;
  globalThis.Quote = Quote;
  globalThis.TableBlock = TableBlock;
  globalThis.ImageGallery = ImageGallery;
  globalThis.Newsletter = Newsletter;
  globalThis.TwoColumnLayout = TwoColumnLayout;
}
---

<Layout
  title={title}
  description={postDescription}
  type="article"
  publishedTime={publishedTime}
  author={authorData.name}
  tags={tags}
  image={imageSrc || undefined}
>
  <!-- Reading Progress Bar -->
  {
    showReadingProgress && (
      <div id="reading-progress" class="reading-progress">
        <div class="reading-progress-bar" />
      </div>
    )
  }

  <script>
    // Suppress ad blocker console errors
    window.addEventListener("error", function (e) {
      if (
        e.message &&
        (e.message.includes("doubleclick") || e.message.includes("googleads"))
      ) {
        e.preventDefault();
        return false;
      }
    });
  </script>

  <MDXProvider>
    <article
      class="magazine-article theme-bg-primary"
      data-article-id={articleId}
      data-article-title={title}
    >
      <!-- Article Header -->
      <header class="article-header">
        <div
          class="absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 opacity-5"
        >
        </div>

        <div class="max-w-7xl mx-auto px-4 py-8 relative z-10">
          <!-- Category and Meta -->
          <div class="article-meta-top">
            <div class="flex items-center gap-4">
              <span
                class="category-tag-enhanced"
                style={`background: ${categoryColor}15; color: ${categoryColor}; border-color: ${categoryColor}30`}
                data-tina-field="category"
              >
                <i class="fas fa-tag mr-2"></i>
                {formatCategory(category)}
              </span>
              {
                audioUrl && (
                  <span class="audio-badge" data-tina-field="audioUrl">
                    <i class="fas fa-headphones mr-2" />
                    AUDIO AVAILABLE
                  </span>
                )
              }
            </div>
            <time
              datetime={publishedTime}
              class="article-date-enhanced"
              data-tina-field="pubDate"
            >
              {formattedDate}
            </time>
          </div>

          <!-- Title Section -->
          <div class="article-header-content">
            <h1 class="article-title-enhanced" data-tina-field="title">
              {title}
            </h1>
            {
              subtitle && (
                <h2
                  class="article-subtitle-enhanced"
                  data-tina-field="subtitle"
                >
                  {subtitle}
                </h2>
              )
            }
            {
              postDescription && (
                <p
                  class="article-description-enhanced"
                  data-tina-field="excerpt"
                >
                  {postDescription}
                </p>
              )
            }
          </div>

          <!-- Author and Reading Time -->
          <div class="article-byline-enhanced">
            <div class="author-info-enhanced" data-tina-field="authorInfo">
              {
                authorData.avatar && (
                  <Image
                    src={authorData.avatar}
                    alt={`${authorData.name} profile picture`}
                    width={56}
                    height={56}
                    class="author-avatar-enhanced"
                    format="webp"
                    loading="eager"
                  />
                )
              }

              <div class="author-details-enhanced">
                <span class="author-name-enhanced">By {authorData.name}</span>
                {
                  authorData.role && (
                    <span class="author-role-enhanced">{authorData.role}</span>
                  )
                }
              </div>
            </div>

            <div class="reading-meta">
              {
                readTime && (
                  <span class="read-time-enhanced" data-tina-field="readTime">
                    {readTime}
                  </span>
                )
              }
              <div class="share-preview">
                <span class="share-label">Share</span>
                <div class="share-icons-preview">
                  <button class="share-icon" data-platform="twitter">
                    <i class="fab fa-twitter"></i>
                  </button>
                  <button class="share-icon" data-platform="linkedin">
                    <i class="fab fa-linkedin"></i>
                  </button>
                  <button class="share-icon" data-platform="copy">
                    <i class="fas fa-link"></i>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      <!-- Featured Image -->
      {
        imageSrc && (
          <div class="article-image-container-optimized">
            <div class="max-w-7xl mx-auto px-4">
              <div class="image-wrapper-optimized">
                <Image
                  src={imageSrc}
                  alt={finalImageAlt}
                  width={1200}
                  height={600}
                  class="article-image-optimized"
                  format="webp"
                  loading="eager"
                  sizes="(max-width: 768px) 100vw, (max-width: 1200px) 90vw, 1200px"
                />
                <div class="image-overlay">
                  {imageCaption ? (
                    <div class="image-credit">{imageCaption}</div>
                  ) : (
                    <div class="image-credit">Photo by TinkByte Team</div>
                  )}
                </div>
              </div>
            </div>
          </div>
        )
      }

      <!-- Audio Player Section -->
      {
        audioUrl ? (
          <div class="audio-section-enhanced">
            <div class="max-w-7xl mx-auto px-4">
              <div class="audio-container">
                <div class="audio-header">
                  <h3 class="audio-title">
                    <i class="fas fa-headphones mr-3" />
                    Listen to this article
                  </h3>
                  <p class="audio-subtitle">
                    Perfect for multitasking or commuting
                  </p>
                </div>
                <AudioPlayer
                  audioUrl={audioUrl}
                  title={title}
                  duration={audioDuration}
                />
              </div>
            </div>
          </div>
        ) : (
          <div class="no-audio-section-enhanced">
            <div class="max-w-7xl mx-auto px-4">
              <div class="no-audio-placeholder-enhanced">
                <div class="no-audio-content">
                  <svg
                    class="audio-icon-enhanced"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"
                    />
                  </svg>
                  <div>
                    <span class="no-audio-text-enhanced">
                      Audio version coming soon
                    </span>
                    <p class="no-audio-subtitle-enhanced">
                      Reading time: {readTime || "5 min"}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )
      }

      <!-- Article Content Grid -->
      <div class="article-content-wrapper-enhanced">
        <div class="max-w-7xl mx-auto px-4">
          <div class="content-grid-enhanced">
            <!-- Main Content -->
            <div class="content-main-enhanced" data-tina-field="body">
              <slot />
            </div>

            <!-- Enhanced Sidebar -->
            <aside class="content-sidebar-enhanced">
              <!-- Table of Contents -->
              <div
                class="sidebar-section-enhanced"
                id="toc-section"
                style="display: none;"
              >
                <h4 class="sidebar-title-enhanced">
                  <i class="fas fa-list mr-2"></i>
                  Contents
                </h4>
                <div id="table-of-contents" class="toc-container-enhanced">
                  <!-- TOC will be generated here by JavaScript -->
                </div>
              </div>

              <!-- Share buttons -->
              <div class="sidebar-section-enhanced">
                <h4 class="sidebar-title-enhanced">
                  <i class="fas fa-share-alt mr-2"></i>
                  Share Article
                </h4>
                <ShareButtons
                  title={title}
                  url={`${SITE.url}/blog/${articleId}`}
                />
              </div>

              <!-- Author Bio Section -->
              {
                authorData && authorData.name && (
                  <div class="sidebar-section-enhanced">
                    <h4 class="sidebar-title-enhanced">
                      <i class="fas fa-user mr-2" />
                      About the Author
                    </h4>
                    <AuthorBio author={authorData} />
                  </div>
                )
              }

              <!-- Tags -->
              {
                tags && tags.length > 0 && (
                  <div class="sidebar-section-enhanced">
                    <h4 class="sidebar-title-enhanced">
                      <i class="fas fa-tags mr-2" />
                      Topics
                    </h4>
                    <div class="tag-list-enhanced">
                      {tags.map((tag) => (
                        <a
                          href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, "-")}`}
                          class="tag-link-enhanced"
                        >
                          #{tag}
                        </a>
                      ))}
                    </div>
                  </div>
                )
              }

              <!-- Reading Progress Indicator -->
              <div class="sidebar-section-enhanced">
                <h4 class="sidebar-title-enhanced">
                  <i class="fas fa-book-reader mr-2"></i>
                  Reading Progress
                </h4>
                <div class="progress-indicator">
                  <div class="progress-circle">
                    <svg class="progress-ring" width="60" height="60">
                      <circle
                        class="progress-ring-circle"
                        stroke="currentColor"
                        stroke-width="4"
                        fill="transparent"
                        r="26"
                        cx="30"
                        cy="30"
                        style="stroke-dasharray: 163.36; stroke-dashoffset: 163.36;"
                      ></circle>
                    </svg>
                    <div class="progress-text">0%</div>
                  </div>
                </div>
              </div>
            </aside>
          </div>
        </div>

        <!-- Floating Reaction Bar -->
        <ReactionBar postSlug={articleId} postTitle={title} />

        <!-- Navigation -->
        <div class="post-navigation-enhanced">
          <div class="max-w-7xl mx-auto px-4 py-12">
            <div class="nav-header">
              <h3 class="nav-section-title">Continue Reading</h3>
              <p class="nav-section-subtitle">
                Explore more insights from TinkByte
              </p>
            </div>

            <!-- Add before closing body tag -->
            <FeedbackWidget
              position="bottom-right"
              theme="auto"
              hideOnPages={["/admin"]}
            />

            <div class="nav-grid-enhanced">
              {
                previousPost ? (
                  <a
                    href={`/blog/${previousPost.slug}`}
                    class="nav-link-enhanced nav-previous-enhanced"
                  >
                    <div class="nav-direction-enhanced">
                      <i class="fas fa-arrow-left mr-2" />
                      Previous Article
                    </div>
                    <div class="nav-title-enhanced">
                      {previousPost.data.title}
                    </div>
                    <div class="nav-meta-enhanced">
                      By {getAuthorName(previousPost)}
                    </div>
                  </a>
                ) : (
                  <div class="nav-placeholder-enhanced">
                    <div class="nav-placeholder-content">
                      <i class="fas fa-home text-2xl mb-2" />
                      <span>You've reached the beginning</span>
                      <a href="/blog" class="nav-home-link">
                        Browse All Articles
                      </a>
                    </div>
                  </div>
                )
              }

              {
                nextPost ? (
                  <a
                    href={`/blog/${nextPost.slug}`}
                    class="nav-link-enhanced nav-next-enhanced"
                  >
                    <div class="nav-direction-enhanced">
                      Next Article
                      <i class="fas fa-arrow-right ml-2" />
                    </div>
                    <div class="nav-title-enhanced">{nextPost.data.title}</div>
                    <div class="nav-meta-enhanced">
                      By {getAuthorName(nextPost)}
                    </div>
                  </a>
                ) : (
                  <div class="nav-placeholder-enhanced">
                    <div class="nav-placeholder-content">
                      <i class="fas fa-flag-checkered text-2xl mb-2" />
                      <span>You've read it all!</span>
                      <a href="/blog" class="nav-home-link">
                        Browse All Articles
                      </a>
                    </div>
                  </div>
                )
              }
            </div>

            <!-- Enhanced Comments Section -->
            <div class="comments-section-wrapper">
              <div class="comments-container-enhanced">
                <TinkByteCommentSection
                  articleId={articleId}
                  postSlug={articleId}
                  postTitle={title}
                />
              </div>
            </div>
          </div>
        </div>

        <!-- Related Posts -->
        <div class="related-section-enhanced">
          <div class="max-w-7xl mx-auto px-4 py-12">
            <div class="related-header">
              <h3 class="related-title">More from TinkByte</h3>
              <p class="related-subtitle">
                Discover more insights that matter to builders
              </p>
            </div>
            <RelatedPosts currentSlug={articleId} />
          </div>
        </div>
      </div>
    </article>
  </MDXProvider>
</Layout>

<style>
  /* CSS Custom Properties for Consistent Design */
  :root {
    --tinkbyte-radius: 0px;
    --tinkbyte-radius-sm: 0px;
    --tinkbyte-radius-md: 0px;
    --tinkbyte-radius-lg: 0px;
    --tinkbyte-radius-card: 0px;
    --tinkbyte-radius-button: 0px;
  }

  /* Reading Progress Bar Styles */
  .reading-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: rgba(0, 0, 0, 0.05);
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .reading-progress.visible {
    opacity: 1;
  }

  .reading-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #2563eb, #0891b2);
    width: 0%;
    transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 0 8px rgba(37, 99, 235, 0.2);
  }

  @media (prefers-reduced-motion: reduce) {
    .reading-progress {
      transition: none;
    }
    .reading-progress-bar {
      transition: none;
    }
  }

  @media (max-width: 768px) {
    .reading-progress {
      height: 2px;
    }
  }

  /* Base transitions for all elements */
  :global(*),
  :global(*::before),
  :global(*::after) {
    transition:
      background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
      color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
      border-color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
      stroke 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Enhanced Magazine Design System */
  .magazine-article {
    background: white;
    min-height: 100vh;
  }

  .theme-bg-primary {
    background-color: var(--color-bg-primary) !important;
  }

  :global(.dark) .magazine-article {
    background: rgb(17, 24, 39);
  }

  /* Article Header */
  .article-header {
    position: relative;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-bottom: 1px solid #e2e8f0;
    padding: 2rem 0;
  }

  :global(.dark) .article-header {
    background: linear-gradient(
      135deg,
      rgb(15, 23, 42) 0%,
      rgb(30, 41, 59) 100%
    );
    border-bottom-color: rgb(51, 65, 85);
  }

  .article-meta-top {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .category-tag-enhanced {
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    padding: 0.75rem 1.5rem;
    border: 2px solid;
    border-radius: var(--tinkbyte-radius-button);
    text-decoration: none;
    background: white;
    display: flex;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  :global(.dark) .category-tag-enhanced {
    background: rgb(17, 24, 39);
  }

  .audio-badge {
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding: 0.5rem 1rem;
    background: linear-gradient(135deg, #10b981, #059669);
    color: white;
    border-radius: var(--tinkbyte-radius-button);
    display: flex;
    align-items: center;
    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);
  }

  .article-date-enhanced {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 500;
  }

  :global(.dark) .article-date-enhanced {
    color: rgb(148, 163, 184);
  }

  .article-header-content {
    margin-bottom: 2.5rem;
  }

  .article-title-enhanced {
    font-family: "Space Grotesk", sans-serif;
    font-size: clamp(2rem, 5vw, 3.5rem);
    font-weight: 800;
    line-height: 1.2;
    color: rgb(15, 23, 42);
    margin-bottom: 1.5rem;
    max-width: 100%;
    background: linear-gradient(
      135deg,
      rgb(15, 23, 42) 0%,
      rgb(30, 58, 138) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  :global(.dark) .article-title-enhanced {
    background: linear-gradient(
      135deg,
      rgb(248, 250, 252) 0%,
      rgb(147, 197, 253) 100%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .article-subtitle-enhanced {
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.4;
    color: #475569;
    margin-bottom: 1.5rem;
    max-width: 100%;
  }

  :global(.dark) .article-subtitle-enhanced {
    color: rgb(148, 163, 184);
  }

  .article-description-enhanced {
    font-size: 1.25rem;
    line-height: 1.6;
    color: #64748b;
    margin-bottom: 0;
    max-width: 100%;
  }

  :global(.dark) .article-description-enhanced {
    color: rgb(156, 163, 175);
  }

  .article-byline-enhanced {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem 0 0 0;
    border-top: 2px solid #e2e8f0;
    margin-top: 2rem;
    flex-wrap: wrap;
    gap: 1.5rem;
  }

  :global(.dark) .article-byline-enhanced {
    border-top-color: rgb(51, 65, 85);
  }

  .author-info-enhanced {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .author-avatar-enhanced {
    width: 56px;
    height: 56px;
    border-radius: var(--tinkbyte-radius-card);
    object-fit: cover;
    border: 3px solid #e2e8f0;
  }

  :global(.dark) .author-avatar-enhanced {
    border-color: rgb(51, 65, 85);
  }

  .author-name-enhanced {
    font-weight: 700;
    color: #0f172a;
    font-size: 1rem;
  }

  :global(.dark) .author-name-enhanced {
    color: rgb(248, 250, 252);
  }

  .author-role-enhanced {
    font-size: 0.875rem;
    color: #64748b;
    display: block;
    font-weight: 500;
  }

  :global(.dark) .author-role-enhanced {
    color: rgb(148, 163, 184);
  }

  .reading-meta {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .read-time-enhanced {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 600;
  }

  :global(.dark) .read-time-enhanced {
    color: rgb(148, 163, 184);
  }

  .share-preview {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .share-label {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 600;
  }

  .share-icons-preview {
    display: flex;
    gap: 0.5rem;
  }

  .share-icon {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: var(--tinkbyte-radius-sm);
    transition: all 0.2s ease;
  }

  .share-icons-preview i {
    color: #94a3b8;
    font-size: 1rem;
  }

  .share-icon:hover i {
    color: rgb(59, 130, 246);
  }

  /* Image Container */
  .article-image-container-optimized {
    margin: 2rem 0;
    max-height: 60vh;
  }

  .image-wrapper-optimized {
    position: relative;
    border-radius: var(--tinkbyte-radius-card);
    overflow: hidden;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    aspect-ratio: 2/1;
  }

  .article-image-optimized {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    display: block;
  }

  .image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
    padding: 1.5rem;
  }

  .image-credit {
    color: white;
    font-size: 0.875rem;
    font-weight: 500;
  }

  /* Audio Section */
  .audio-section-enhanced {
    margin: 3rem 0;
  }

  .audio-container {
    background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
    border: 2px solid #0ea5e9;
    border-radius: var(--tinkbyte-radius-card);
    padding: 2rem;
  }

  :global(.dark) .audio-container {
    background: linear-gradient(
      135deg,
      rgb(12, 74, 110) 0%,
      rgb(15, 118, 110) 100%
    );
    border-color: rgb(34, 197, 94);
  }

  .audio-header {
    margin-bottom: 1.5rem;
  }

  .audio-title {
    font-size: 1.25rem;
    font-weight: 700;
    color: #0c4a6e;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
  }

  :global(.dark) .audio-title {
    color: rgb(125, 211, 252);
  }

  .audio-subtitle {
    color: #0369a1;
    font-size: 0.875rem;
  }

  :global(.dark) .audio-subtitle {
    color: rgb(186, 230, 253);
  }

  /* No Audio Section */
  .no-audio-section-enhanced {
    margin: 3rem 0;
  }

  .no-audio-placeholder-enhanced {
    background: #f8fafc;
    border: 2px dashed #cbd5e1;
    border-radius: var(--tinkbyte-radius-card);
    padding: 2rem;
  }

  :global(.dark) .no-audio-placeholder-enhanced {
    background: rgb(30, 41, 59);
    border-color: rgb(71, 85, 105);
  }

  .no-audio-content {
    display: flex;
    align-items: center;
    gap: 1rem;
    justify-content: center;
    text-align: center;
  }

  .audio-icon-enhanced {
    width: 2.5rem;
    height: 2.5rem;
    color: #94a3b8;
  }

  :global(.dark) .audio-icon-enhanced {
    color: rgb(100, 116, 139);
  }

  .no-audio-text-enhanced {
    font-size: 1rem;
    font-weight: 600;
    color: #475569;
  }

  :global(.dark) .no-audio-text-enhanced {
    color: rgb(148, 163, 184);
  }

  .no-audio-subtitle-enhanced {
    font-size: 0.875rem;
    color: #64748b;
    margin: 0.5rem 0 0 0;
  }

  :global(.dark) .no-audio-subtitle-enhanced {
    color: rgb(100, 116, 139);
  }

  /* Content Grid */
  .article-content-wrapper-enhanced {
    padding: 4rem 0;
  }

  .content-grid-enhanced {
    display: grid;
    grid-template-columns: 1fr 350px;
    gap: 3rem;
    align-items: start;
  }

  /* Main Content */
  .content-main-enhanced {
    font-size: 1.125rem;
    line-height: 1.7;
    color: #374151;
  }

  :global(.dark) .content-main-enhanced {
    color: rgb(209, 213, 219);
  }

  .content-main-enhanced :global(h1) {
    font-family: "Space Grotesk", sans-serif;
    font-size: 2.5rem;
    font-weight: 800;
    color: rgb(15, 23, 42);
    margin: 3rem 0 1.5rem;
    line-height: 1.2;
  }

  .content-main-enhanced :global(h2) {
    font-family: "Space Grotesk", sans-serif;
    font-size: 2rem;
    font-weight: 700;
    color: rgb(30, 58, 138);
    margin: 2.5rem 0 1.5rem;
    line-height: 1.2;
    position: relative;
    padding-left: 1rem;
  }

  .content-main-enhanced :global(h2::before) {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: linear-gradient(135deg, rgb(59, 130, 246), rgb(147, 51, 234));
    border-radius: var(--tinkbyte-radius-sm);
  }

  .content-main-enhanced :global(h3) {
    font-family: "Space Grotesk", sans-serif;
    font-size: 1.5rem;
    font-weight: 600;
    color: rgb(51, 65, 85);
    margin: 2rem 0 1rem;
    line-height: 1.4;
  }

  .content-main-enhanced :global(p) {
    margin-bottom: 1.5rem;
    text-align: justify;
  }

  .content-main-enhanced :global(a) {
    color: rgb(59, 130, 246);
    text-decoration: none;
    border-bottom: 2px solid transparent;
    font-weight: 500;
  }

  .content-main-enhanced :global(a:hover) {
    color: rgb(37, 99, 235);
    border-bottom-color: rgb(37, 99, 235);
    background: rgba(59, 130, 246, 0.1);
    padding: 0 2px;
    border-radius: var(--tinkbyte-radius-sm);
  }

  /* Sidebar */
  .content-sidebar-enhanced {
    position: sticky;
    top: 2rem;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border: 2px solid #e2e8f0;
    padding: 2.5rem;
    border-radius: var(--tinkbyte-radius-card);
    height: fit-content;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  }

  :global(.dark) .content-sidebar-enhanced {
    background: linear-gradient(
      135deg,
      rgb(30, 41, 59) 0%,
      rgb(51, 65, 85) 100%
    );
    border-color: rgb(71, 85, 105);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  .sidebar-section-enhanced {
    margin-bottom: 2.5rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #e2e8f0;
  }

  .sidebar-section-enhanced:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
  }

  :global(.dark) .sidebar-section-enhanced {
    border-bottom-color: rgb(71, 85, 105);
  }

  .sidebar-title-enhanced {
    font-size: 1rem;
    font-weight: 700;
    color: rgb(30, 58, 138);
    margin-bottom: 1.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    display: flex;
    align-items: center;
  }

  :global(.dark) .sidebar-title-enhanced {
    color: rgb(147, 197, 253);
  }

  /* Tags */
  .tag-list-enhanced {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .tag-link-enhanced {
    font-size: 0.75rem;
    padding: 0.5rem 0.75rem;
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: var(--tinkbyte-radius-button);
    text-decoration: none;
    color: #64748b;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  :global(.dark) .tag-link-enhanced {
    background: rgb(17, 24, 39);
    border-color: rgb(71, 85, 105);
    color: rgb(148, 163, 184);
  }

  .tag-link-enhanced:hover {
    border-color: rgb(59, 130, 246);
    color: rgb(30, 58, 138);
    background: rgba(59, 130, 246, 0.1);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
  }

  /* Reading Progress */
  .progress-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .progress-circle {
    position: relative;
    width: 60px;
    height: 60px;
  }

  .progress-ring {
    transform: rotate(-90deg);
  }

  .progress-ring-circle {
    stroke: #e2e8f0;
  }

  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 0.75rem;
    font-weight: 700;
    color: #475569;
  }

  :global(.dark) .progress-text {
    color: rgb(148, 163, 184);
  }

  /* Navigation */
  .post-navigation-enhanced {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-top: 2px solid #e2e8f0;
  }

  :global(.dark) .post-navigation-enhanced {
    background: linear-gradient(
      135deg,
      rgb(15, 23, 42) 0%,
      rgb(30, 41, 59) 100%
    );
    border-top-color: rgb(51, 65, 85);
  }

  .nav-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .nav-section-title {
    font-size: 2rem;
    font-weight: 700;
    color: rgb(15, 23, 42);
    margin-bottom: 0.5rem;
  }

  :global(.dark) .nav-section-title {
    color: rgb(248, 250, 252);
  }

  .nav-section-subtitle {
    color: #64748b;
    font-size: 1rem;
  }

  :global(.dark) .nav-section-subtitle {
    color: rgb(148, 163, 184);
  }

  .nav-grid-enhanced {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
  }

  .nav-link-enhanced {
    display: block;
    padding: 2.5rem;
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: var(--tinkbyte-radius-card);
    text-decoration: none;
    position: relative;
    overflow: hidden;
  }

  :global(.dark) .nav-link-enhanced {
    background: rgb(30, 41, 59);
    border-color: rgb(71, 85, 105);
  }

  .nav-link-enhanced:hover {
    border-color: rgb(59, 130, 246);
    transform: translateY(-4px);
    box-shadow: 0 10px 40px rgba(59, 130, 246, 0.2);
  }

  .nav-previous-enhanced {
    text-align: left;
  }

  .nav-next-enhanced {
    text-align: right;
  }

  .nav-direction-enhanced {
    font-size: 0.875rem;
    font-weight: 700;
    color: rgb(59, 130, 246);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
  }

  .nav-next-enhanced .nav-direction-enhanced {
    justify-content: flex-end;
  }

  .nav-title-enhanced {
    font-size: 1.25rem;
    font-weight: 700;
    color: #0f172a;
    line-height: 1.4;
    margin-bottom: 1rem;
  }

  :global(.dark) .nav-title-enhanced {
    color: rgb(248, 250, 252);
  }

  .nav-meta-enhanced {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 500;
  }

  :global(.dark) .nav-meta-enhanced {
    color: rgb(148, 163, 184);
  }

  .nav-placeholder-enhanced {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2.5rem;
    background: #f8fafc;
    border: 2px dashed #cbd5e1;
    border-radius: var(--tinkbyte-radius-card);
  }

  :global(.dark) .nav-placeholder-enhanced {
    background: rgb(51, 65, 85);
    border-color: rgb(100, 116, 139);
  }

  .nav-placeholder-content {
    text-align: center;
    color: #64748b;
  }

  :global(.dark) .nav-placeholder-content {
    color: rgb(148, 163, 184);
  }

  .nav-home-link {
    display: inline-block;
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: rgb(59, 130, 246);
    color: white;
    text-decoration: none;
    border-radius: var(--tinkbyte-radius-button);
    font-size: 0.875rem;
    font-weight: 600;
  }

  .nav-home-link:hover {
    background: rgb(37, 99, 235);
    transform: translateY(-2px);
  }

  /* Comments Section */
  .comments-section-wrapper {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-top: 2px solid #e2e8f0;
    margin-top: 0;
  }

  :global(.dark) .comments-section-wrapper {
    background: linear-gradient(
      135deg,
      rgb(15, 23, 42) 0%,
      rgb(30, 41, 59) 100%
    );
    border-top-color: rgb(51, 65, 85);
  }

  .comments-container-enhanced {
    background: white;
    border-radius: var(--tinkbyte-radius-card);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    border: 2px solid #e2e8f0;
    max-width: 1200px;
    margin: 0 auto;
  }

  :global(.dark) .comments-container-enhanced {
    background: rgb(17, 24, 39);
    border-color: rgb(55, 65, 81);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  /* Related Section */
  .related-section-enhanced {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-top: 2px solid #e2e8f0;
  }

  :global(.dark) .related-section-enhanced {
    background: linear-gradient(
      135deg,
      rgb(15, 23, 42) 0%,
      rgb(30, 41, 59) 100%
    );
    border-top-color: rgb(51, 65, 85);
  }

  .related-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .related-title {
    font-size: 2rem;
    font-weight: 700;
    color: rgb(15, 23, 42);
    margin-bottom: 0.5rem;
  }

  :global(.dark) .related-title {
    color: rgb(248, 250, 252);
  }

  .related-subtitle {
    color: #64748b;
    font-size: 1rem;
  }

  :global(.dark) .related-subtitle {
    color: rgb(148, 163, 184);
  }

  /* Enhanced TOC Styles */
  .toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .toc-list li {
    margin-bottom: 0.5rem;
  }

  .toc-link {
    display: block;
    padding: 0.5rem 0.75rem;
    color: #64748b;
    text-decoration: none;
    border-radius: var(--tinkbyte-radius-sm);
    font-size: 0.875rem;
    line-height: 1.4;
    transition: all 0.2s ease;
    border-left: 3px solid transparent;
  }

  .toc-link:hover {
    background: rgba(59, 130, 246, 0.1);
    color: rgb(30, 58, 138);
    border-left-color: rgb(59, 130, 246);
  }

  .toc-link.active {
    background: rgba(59, 130, 246, 0.15);
    color: rgb(30, 58, 138);
    border-left-color: rgb(59, 130, 246);
    font-weight: 600;
  }

  .toc-h3 {
    margin-left: 1rem;
    font-size: 0.8rem;
  }

  :global(.dark) .toc-link {
    color: rgb(148, 163, 184);
  }

  :global(.dark) .toc-link:hover {
    background: rgba(59, 130, 246, 0.2);
    color: rgb(147, 197, 253);
  }

  :global(.dark) .toc-link.active {
    background: rgba(59, 130, 246, 0.25);
    color: rgb(147, 197, 253);
  }

  /* Mobile Responsive */
  @media (max-width: 1024px) {
    .content-grid-enhanced {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .content-sidebar-enhanced {
      position: static;
      order: -1;
      margin-bottom: 2rem;
      padding: 1.5rem;
    }

    .nav-grid-enhanced {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .nav-next-enhanced,
    .nav-previous-enhanced {
      text-align: left;
    }

    .nav-next-enhanced .nav-direction-enhanced {
      justify-content: flex-start;
    }
  }

  /* Mobile Overflow Prevention and Responsiveness Fixes */
  @media (max-width: 768px) {
    /* Prevent horizontal overflow */
    .magazine-article {
      overflow-x: hidden;
      width: 100%;
      max-width: 100vw;
    }

    .article-header {
      overflow-x: hidden;
      width: 100%;
    }

    .max-w-7xl {
      max-width: 100%;
      padding-left: 1rem;
      padding-right: 1rem;
    }

    /* Fix article header content width */
    .article-header-content {
      width: 100%;
      max-width: 100%;
      overflow-wrap: break-word;
      word-wrap: break-word;
      hyphens: auto;
    }

    .article-title-enhanced {
      width: 100%;
      max-width: 100%;
      overflow-wrap: break-word;
      word-wrap: break-word;
      hyphens: auto;
      line-height: 1.1;
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      padding-right: 0;
      font-size: clamp(1.75rem, 4vw, 2.5rem);
      text-align: center;
    }

    .article-subtitle-enhanced {
      width: 100%;
      max-width: 100%;
      overflow-wrap: break-word;
      word-wrap: break-word;
      hyphens: auto;
      font-size: 1.125rem;
      line-height: 1.3;
      text-align: center;
      margin-bottom: 1rem;
    }

    .article-description-enhanced {
      width: 100%;
      max-width: 100%;
      overflow-wrap: break-word;
      word-wrap: break-word;
      hyphens: auto;
      padding-left: 0.5rem;
      padding-right: 0.5rem;
      font-size: 1rem;
      line-height: 1.5;
      text-align: center;
    }

    /* Hide sidebar on mobile */
    .content-sidebar-enhanced {
      display: none !important;
    }

    .content-main-enhanced {
      font-size: 1rem;
      line-height: 1.6;
      width: 100%;
      max-width: 100%;
      overflow-x: hidden;
    }

    .content-main-enhanced :global(*) {
      max-width: 100%;
      overflow-wrap: break-word;
      word-wrap: break-word;
    }

    /* Fix image containers */
    .article-image-container-optimized {
      width: 100%;
      max-width: 100%;
      overflow: hidden;
      margin-left: 0;
      margin-right: 0;
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .image-wrapper-optimized {
      width: 100%;
      max-width: 100%;
    }

    .article-image-optimized {
      width: 100%;
      max-width: 100%;
      height: auto;
      object-fit: cover;
    }

    /* Fix audio and no-audio sections */
    .audio-section-enhanced,
    .no-audio-section-enhanced {
      width: 100%;
      max-width: 100%;
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .audio-container,
    .no-audio-placeholder-enhanced {
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      padding: 1.5rem;
    }

    /* Fix navigation sections */
    .post-navigation-enhanced,
    .related-section-enhanced,
    .comments-section-wrapper {
      width: 100%;
      max-width: 100%;
      overflow-x: hidden;
    }

    /* Ensure all containers respect viewport */
    .article-content-wrapper-enhanced {
      width: 100%;
      max-width: 100%;
      overflow-x: hidden;
      padding-left: 1rem;
      padding-right: 1rem;
    }

    .content-grid-enhanced {
      width: 100%;
      max-width: 100%;
    }

    /* Fix any potential wide elements */
    .nav-grid-enhanced {
      width: 100%;
      max-width: 100%;
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .nav-link-enhanced {
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      padding: 1.5rem;
    }

    .comments-container-enhanced {
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      margin-left: 0;
      margin-right: 0;
    }

    .article-meta-top {
      flex-direction: column;
      align-items: center;
      text-align: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    .article-meta-top > div:first-child {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
      width: 100%;
    }

    .category-tag-enhanced {
      font-size: 0.6875rem;
      font-weight: 800;
      text-transform: uppercase;
      letter-spacing: 0.15em;
      padding: 0.75rem 1.25rem;
      border: 2px solid;
      border-radius: var(--tinkbyte-radius-button);
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(10px);
      min-width: 180px;
      text-align: center;
      background: rgba(255, 255, 255, 0.95);
    }

    :global(.dark) .category-tag-enhanced {
      background: rgba(17, 24, 39, 0.95);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    .audio-badge {
      font-size: 0.6875rem;
      font-weight: 700;
      padding: 0.5rem 1rem;
      border-radius: var(--tinkbyte-radius-button);
      min-width: 160px;
      text-align: center;
      justify-content: center;
    }

    .article-date-enhanced {
      font-size: 0.8125rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      color: #64748b;
      padding: 0.5rem 1rem;
      background: rgba(248, 250, 252, 0.8);
      border: 1px solid rgba(226, 232, 240, 0.8);
      border-radius: var(--tinkbyte-radius-button);
      backdrop-filter: blur(5px);
      text-align: center;
      min-width: 140px;
    }

    :global(.dark) .article-date-enhanced {
      background: rgba(30, 41, 59, 0.8);
      border-color: rgba(51, 65, 85, 0.8);
      color: rgb(148, 163, 184);
    }

    .article-header-content {
      text-align: center;
      margin-bottom: 2rem;
    }

    .article-byline-enhanced {
      flex-direction: column;
      align-items: center;
      text-align: center;
      gap: 1.5rem;
      padding: 1.5rem 0 0 0;
    }

    .author-info-enhanced {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
    }

    .author-details-enhanced {
      text-align: center;
    }

    .reading-meta {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
      text-align: center;
    }

    .share-preview {
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
    }

    .share-icons-preview {
      justify-content: center;
    }

    .article-header {
      padding: 1.5rem 0;
    }

    .nav-next-enhanced,
    .nav-previous-enhanced {
      text-align: left;
    }

    .nav-next-enhanced .nav-direction-enhanced {
      justify-content: flex-start;
    }
  }

  @media (max-width: 480px) {
    /* Extra small screens - more aggressive constraints */
    .max-w-7xl {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
    }

    .article-description-enhanced {
      padding-left: 0.25rem;
      padding-right: 0.25rem;
      font-size: 0.875rem;
    }

    .article-image-container-optimized {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
    }

    .audio-section-enhanced,
    .no-audio-section-enhanced {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
    }

    .article-content-wrapper-enhanced {
      padding-left: 0.75rem;
      padding-right: 0.75rem;
    }

    .category-tag-enhanced {
      font-size: 0.625rem;
      padding: 0.625rem 1rem;
      min-width: 150px;
      letter-spacing: 0.1em;
    }

    .audio-badge {
      font-size: 0.625rem;
      padding: 0.5rem 0.75rem;
      min-width: 140px;
    }

    .article-date-enhanced {
      font-size: 0.75rem;
      padding: 0.5rem 0.75rem;
      min-width: 120px;
    }

    .article-title-enhanced {
      font-size: clamp(1.5rem, 3.5vw, 2rem);
    }

    .article-subtitle-enhanced {
      font-size: 1rem;
    }

    .article-header {
      padding: 1rem 0;
    }

    .nav-link-enhanced {
      padding: 1rem;
    }

    .audio-container,
    .no-audio-placeholder-enhanced {
      padding: 1rem;
    }
  }

  /* Additional safety measures */
  @media (max-width: 768px) {
    /* Prevent any element from causing horizontal scroll */
    * {
      max-width: 100%;
      box-sizing: border-box;
    }

    /* Ensure text doesn't overflow */
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    span,
    div {
      overflow-wrap: break-word;
      word-wrap: break-word;
      hyphens: auto;
    }

    /* Fix pre and code elements that might cause overflow */
    pre,
    code {
      max-width: 100%;
      overflow-x: auto;
      white-space: pre-wrap;
      word-wrap: break-word;
    }
  }
</style>

<script define:vars={{ articleSlug: articleId }}>
  document.addEventListener("DOMContentLoaded", async function () {
    // Set up global variables with proper fallbacks
    const articleElement = document.querySelector("article");
    const articleIdFromElement =
      articleElement?.getAttribute("data-article-id");
    const articleIdFromVar = articleSlug;

    // Determine the article ID with multiple fallbacks
    const currentArticleId =
      articleIdFromElement || articleIdFromVar || "unknown-article";

    // Set global variable
    window.currentArticleId = currentArticleId;

    // Only proceed if we have a valid article ID
    if (!currentArticleId || currentArticleId === "unknown-article") {
      console.warn("No valid article ID found, skipping activity tracking");
      return;
    }

    // Record article read when user visits
    try {
      // Import TinkByteAPI dynamically to avoid SSR issues
      //const { TinkByteAPI } = await import("../lib/supabase");

      // Record initial article view (basic tracking)
      await TinkByteAPI.recordArticleRead(currentArticleId, 10, 5);

      // Enhanced scroll tracking
      let hasRecordedRead = false;
      let hasRecordedEngagement = false;
      let startTime = Date.now();
      let maxScrollPercent = 0;

      function handleScroll() {
        const scrollTop =
          window.pageYOffset || document.documentElement.scrollTop;
        const scrollHeight =
          document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercent =
          scrollHeight > 0 ? Math.round((scrollTop / scrollHeight) * 100) : 0;

        maxScrollPercent = Math.max(maxScrollPercent, scrollPercent);
        const timeSpent = Math.round((Date.now() - startTime) / 1000);

        // Record significant read at 50% scroll
        if (!hasRecordedRead && scrollPercent > 50 && timeSpent > 10) {
          hasRecordedRead = true;
          TinkByteAPI.recordArticleRead(
            currentArticleId,
            scrollPercent,
            timeSpent
          ).catch(console.error);
        }

        // Record engagement at 80% scroll
        if (!hasRecordedEngagement && scrollPercent > 80 && timeSpent > 30) {
          hasRecordedEngagement = true;
          TinkByteAPI.recordArticleRead(
            currentArticleId,
            scrollPercent,
            timeSpent
          ).catch(console.error);
        }
      }

      // Track scroll with throttling
      let scrollTimeout;
      window.addEventListener(
        "scroll",
        () => {
          clearTimeout(scrollTimeout);
          scrollTimeout = setTimeout(handleScroll, 150);
        },
        { passive: true }
      );

      // Record final read stats when user leaves
      window.addEventListener("beforeunload", () => {
        const finalTimeSpent = Math.round((Date.now() - startTime) / 1000);
        if (finalTimeSpent > 15) {
          // Only if they spent more than 15 seconds
          TinkByteAPI.recordArticleRead(
            currentArticleId,
            maxScrollPercent,
            finalTimeSpent
          ).catch(console.error);
        }
      });
    } catch (error) {
      console.error("Error setting up article tracking:", error);
    }

    // Initialize Reading Progress Bar (Top)
    function initTopReadingProgress() {
      const progressContainer = document.querySelector(".reading-progress");
      const progressBar = document.querySelector(".reading-progress-bar");

      if (!progressContainer || !progressBar) {
        return;
      }

      let ticking = false;

      function updateTopProgress() {
        const scrollTop =
          window.pageYOffset || document.documentElement.scrollTop;
        const scrollHeight =
          document.documentElement.scrollHeight - window.innerHeight;
        const progress =
          scrollHeight > 0 ? (scrollTop / scrollHeight) * 100 : 0;

        if (scrollTop > 50) {
          progressContainer.classList.add("visible");
        } else {
          progressContainer.classList.remove("visible");
        }

        const clampedProgress = Math.min(Math.max(progress, 0), 100);
        progressBar.style.width = `${clampedProgress}%`;

        ticking = false;
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(updateTopProgress);
          ticking = true;
        }
      }

      window.addEventListener("scroll", requestTick, { passive: true });
      window.addEventListener("resize", requestTick, { passive: true });
      updateTopProgress();
    }

    // Initialize Sidebar Reading Progress (Circular)
    function initSidebarReadingProgress() {
      const progressRing = document.querySelector(".progress-ring-circle");
      const progressText = document.querySelector(".progress-text");

      if (!progressRing || !progressText) {
        return;
      }

      const radius = 26;
      const circumference = radius * 2 * Math.PI;
      progressRing.style.strokeDasharray = `${circumference} ${circumference}`;
      progressRing.style.strokeDashoffset = circumference.toString();

      function updateSidebarProgress() {
        const scrollTop =
          window.pageYOffset || document.documentElement.scrollTop;
        const scrollHeight =
          document.documentElement.scrollHeight - window.innerHeight;
        const progress =
          scrollHeight > 0 ? (scrollTop / scrollHeight) * 100 : 0;

        const clampedProgress = Math.min(Math.max(progress, 0), 100);
        const offset = circumference - (clampedProgress / 100) * circumference;

        progressRing.style.strokeDashoffset = offset.toString();
        progressRing.style.stroke =
          clampedProgress > 0 ? "rgb(59, 130, 246)" : "#e2e8f0";
        progressText.textContent = Math.round(clampedProgress) + "%";
      }

      let ticking = false;
      function handleScroll() {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateSidebarProgress();
            ticking = false;
          });
          ticking = true;
        }
      }

      window.addEventListener("scroll", handleScroll, { passive: true });
      window.addEventListener("resize", handleScroll, { passive: true });
      updateSidebarProgress();
    }

    initTopReadingProgress();
    initSidebarReadingProgress();

    // Enhanced TOC generation
    function generateTOC() {
      const headings = document.querySelectorAll(
        ".content-main-enhanced h2, .content-main-enhanced h3"
      );
      const tocSection = document.getElementById("toc-section");
      const tocContainer = document.getElementById("table-of-contents");

      if (headings.length >= 3 && tocSection && tocContainer) {
        tocSection.style.display = "block";
        const tocList = document.createElement("ul");
        tocList.className = "toc-list";

        headings.forEach((heading, i) => {
          const id = `heading-${i}`;
          heading.id = id;

          const listItem = document.createElement("li");
          const link = document.createElement("a");
          link.href = `#${id}`;
          const headingText = heading.textContent || "";
          link.textContent =
            headingText.slice(0, 60) + (headingText.length > 60 ? "..." : "");
          link.className = `toc-link ${heading.tagName === "H3" ? "toc-h3" : ""}`;

          link.addEventListener("click", function (e) {
            e.preventDefault();
            const targetId = this.getAttribute("href")?.substring(1);
            const targetHeading = targetId
              ? document.getElementById(targetId)
              : null;
            if (targetHeading) {
              targetHeading.scrollIntoView({
                behavior: "smooth",
                block: "start",
              });
            }

            document.querySelectorAll(".toc-link").forEach((tocLink) => {
              tocLink.classList.remove("active");
            });
            this.classList.add("active");
          });

          listItem.appendChild(link);
          tocList.appendChild(listItem);
        });

        tocContainer.appendChild(tocList);
      }
    }

    // Enhanced share functionality
    document.querySelectorAll(".share-icon").forEach((icon) => {
      icon.addEventListener("click", async (e) => {
        const target = e.currentTarget;
        if (!target) return;

        const platform = target.getAttribute("data-platform");
        const url = window.location.href;
        const title = document.title;

        switch (platform) {
          case "twitter":
            window.open(
              `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(url)}`
            );
            break;
          case "linkedin":
            window.open(
              `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`
            );
            break;
          case "copy":
            try {
              await navigator.clipboard.writeText(url);
              const originalIcon = target.querySelector("i");
              if (originalIcon) {
                const originalClass = originalIcon.className;
                originalIcon.className = "fas fa-check";
                setTimeout(() => {
                  originalIcon.className = originalClass;
                }, 2000);
              }
            } catch (error) {
              console.error("Failed to copy URL:", error);
            }
            break;
        }
      });
    });

    setTimeout(generateTOC, 100);
  });

  // Handle Astro page navigation
  document.addEventListener("astro:page-load", () => {
    setTimeout(() => {
      const event = new Event("DOMContentLoaded");
      document.dispatchEvent(event);
    }, 100);
  });

  document.addEventListener("astro:before-preparation", () => {
    const progressContainer = document.querySelector(".reading-progress");
    if (progressContainer) {
      progressContainer.classList.remove("visible");
    }
  });
</script>
