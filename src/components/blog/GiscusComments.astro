---
// src/components/blog/GiscusComments.astro
export interface Props {
  postSlug?: string;
  postTitle?: string;
}

const { postSlug, postTitle } = Astro.props;

const giscusConfig = {
  repo: import.meta.env.PUBLIC_GISCUS_REPO,
  repoId: import.meta.env.PUBLIC_GISCUS_REPO_ID,
  category: import.meta.env.PUBLIC_GISCUS_CATEGORY,
  categoryId: import.meta.env.PUBLIC_GISCUS_CATEGORY_ID,
  mapping: import.meta.env.PUBLIC_GISCUS_MAPPING || "pathname",
  strict: import.meta.env.PUBLIC_GISCUS_STRICT || "0",
  reactionsEnabled: import.meta.env.PUBLIC_GISCUS_REACTIONS_ENABLED || "1",
  emitMetadata: import.meta.env.PUBLIC_GISCUS_EMIT_METADATA || "0",
  inputPosition: import.meta.env.PUBLIC_GISCUS_INPUT_POSITION || "top",
  theme: "transparent_dark", // Use transparent theme for custom styling
  lang: import.meta.env.PUBLIC_GISCUS_LANG || "en",
};

const isConfigured =
  giscusConfig.repo && giscusConfig.repoId && giscusConfig.categoryId;
---

{
  isConfigured && postSlug ? (
    <section class="comments-section-enhanced">
      <div class="max-w-4xl mx-auto px-4 py-12">
        <div class="comments-header">
          <h3 class="comments-title-enhanced">
            <i class="fas fa-comments mr-3" />
            Join the Discussion
          </h3>
          <p class="comments-subtitle">
            Share your thoughts about "{postTitle}"
          </p>
          <p class="github-notice">
            <i class="fab fa-github mr-2" />
            Sign in with GitHub to participate
          </p>
        </div>

        <div class="giscus-wrapper">
          <div id="giscus-container" class="giscus-container-styled" />
        </div>
      </div>
    </section>
  ) : (
    <section class="comments-section-enhanced">
      <div class="max-w-4xl mx-auto px-4 py-12">
        <div class="text-center py-8 text-gray-500 dark:text-gray-400">
          <i class="fas fa-exclamation-triangle text-2xl mb-4" />
          <p>Comments are currently unavailable.</p>
        </div>
      </div>
    </section>
  )
}

<style>
  .giscus-wrapper {
    background: white;
    border-radius: var(--tinkbyte-radius-card, 4px);
    border: 2px solid #e2e8f0;
    overflow: hidden;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  }

  :global(.dark) .giscus-wrapper {
    background: rgb(30, 41, 59);
    border-color: rgb(71, 85, 105);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  .giscus-container-styled {
    min-height: 200px;
  }

  .github-notice {
    font-size: 0.875rem;
    color: #64748b;
    text-align: center;
    margin-top: 0.5rem;
    font-style: italic;
  }

  :global(.dark) .github-notice {
    color: rgb(148, 163, 184);
  }

  /* Custom Giscus styling overrides */
  :global(.giscus-wrapper .giscus) {
    font-family: inherit !important;
  }

  :global(.giscus-wrapper .giscus-frame) {
    border: none !important;
    background: transparent !important;
  }

  /* Style the Giscus content to match your theme */
  :global(.giscus-wrapper iframe) {
    color-scheme: normal;
  }

  :global(.dark .giscus-wrapper iframe) {
    color-scheme: dark;
  }

  /* Add custom CSS variables for Giscus */
  :global(.giscus-wrapper) {
    --color-prettylights-syntax-comment: #6e7781;
    --color-prettylights-syntax-constant: #0550ae;
    --color-prettylights-syntax-entity: #8250df;
    --color-prettylights-syntax-storage-modifier-import: #24292f;
    --color-prettylights-syntax-entity-tag: #116329;
    --color-prettylights-syntax-keyword: #cf222e;
    --color-prettylights-syntax-string: #0a3069;
    --color-prettylights-syntax-variable: #953800;
    --color-prettylights-syntax-brackethighlighter-unmatched: #82071e;
    --color-prettylights-syntax-invalid-illegal-text: #f6f8fa;
    --color-prettylights-syntax-invalid-illegal-bg: #82071e;
    --color-prettylights-syntax-carriage-return-text: #f6f8fa;
    --color-prettylights-syntax-carriage-return-bg: #cf222e;
    --color-prettylights-syntax-string-regexp: #116329;
    --color-prettylights-syntax-markup-list: #3b2300;
    --color-prettylights-syntax-markup-heading: #0550ae;
    --color-prettylights-syntax-markup-italic: #24292f;
    --color-prettylights-syntax-markup-bold: #24292f;
    --color-prettylights-syntax-markup-deleted-text: #82071e;
    --color-prettylights-syntax-markup-deleted-bg: #ffebe9;
    --color-prettylights-syntax-markup-inserted-text: #116329;
    --color-prettylights-syntax-markup-inserted-bg: #dafbe1;
    --color-prettylights-syntax-markup-changed-text: #953800;
    --color-prettylights-syntax-markup-changed-bg: #ffd8b5;
    --color-prettylights-syntax-markup-ignored-text: #eaeef2;
    --color-prettylights-syntax-markup-ignored-bg: #0550ae;
    --color-prettylights-syntax-meta-diff-range: #8250df;
    --color-prettylights-syntax-brackethighlighter-angle: #57606a;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #8c959f;
    --color-prettylights-syntax-constant-other-reference-link: #0a3069;
  }

  :global(.dark .giscus-wrapper) {
    --color-prettylights-syntax-comment: #8b949e;
    --color-prettylights-syntax-constant: #79c0ff;
    --color-prettylights-syntax-entity: #d2a8ff;
    --color-prettylights-syntax-storage-modifier-import: #c9d1d9;
    --color-prettylights-syntax-entity-tag: #7ee787;
    --color-prettylights-syntax-keyword: #ff7b72;
    --color-prettylights-syntax-string: #a5d6ff;
    --color-prettylights-syntax-variable: #ffa657;
    --color-prettylights-syntax-brackethighlighter-unmatched: #f85149;
    --color-prettylights-syntax-invalid-illegal-text: #f0f6fc;
    --color-prettylights-syntax-invalid-illegal-bg: #8e1519;
    --color-prettylights-syntax-carriage-return-text: #f0f6fc;
    --color-prettylights-syntax-carriage-return-bg: #b62324;
    --color-prettylights-syntax-string-regexp: #7ee787;
    --color-prettylights-syntax-markup-list: #f2cc60;
    --color-prettylights-syntax-markup-heading: #1f6feb;
    --color-prettylights-syntax-markup-italic: #c9d1d9;
    --color-prettylights-syntax-markup-bold: #c9d1d9;
    --color-prettylights-syntax-markup-deleted-text: #ffdcd7;
    --color-prettylights-syntax-markup-deleted-bg: #67060c;
    --color-prettylights-syntax-markup-inserted-text: #aff5b4;
    --color-prettylights-syntax-markup-inserted-bg: #033a16;
    --color-prettylights-syntax-markup-changed-text: #ffdfb6;
    --color-prettylights-syntax-markup-changed-bg: #5a1e02;
    --color-prettylights-syntax-markup-ignored-text: #c9d1d9;
    --color-prettylights-syntax-markup-ignored-bg: #1158c7;
    --color-prettylights-syntax-meta-diff-range: #d2a8ff;
    --color-prettylights-syntax-brackethighlighter-angle: #8b949e;
    --color-prettylights-syntax-sublimelinter-gutter-mark: #484f58;
    --color-prettylights-syntax-constant-other-reference-link: #a5d6ff;
  }
</style>

<script define:vars={{ giscusConfig, postSlug }}>
  document.addEventListener("DOMContentLoaded", () => {
    const giscusContainer = document.getElementById("giscus-container");
    if (!giscusContainer) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            loadGiscus();
            observer.disconnect();
          }
        });
      },
      { threshold: 0.1 }
    );

    observer.observe(giscusContainer);

    function loadGiscus() {
      const script = document.createElement("script");
      script.src = "https://giscus.app/client.js";
      script.async = true;
      script.crossOrigin = "anonymous";

      // Set all Giscus attributes
      script.setAttribute("data-repo", giscusConfig.repo);
      script.setAttribute("data-repo-id", giscusConfig.repoId);
      script.setAttribute("data-category", giscusConfig.category);
      script.setAttribute("data-category-id", giscusConfig.categoryId);
      script.setAttribute("data-mapping", giscusConfig.mapping);
      script.setAttribute("data-strict", giscusConfig.strict);
      script.setAttribute(
        "data-reactions-enabled",
        giscusConfig.reactionsEnabled
      );
      script.setAttribute("data-emit-metadata", giscusConfig.emitMetadata);
      script.setAttribute("data-input-position", giscusConfig.inputPosition);
      script.setAttribute("data-lang", giscusConfig.lang);
      script.setAttribute("data-loading", "lazy");

      // Use transparent theme for better customization
      const currentTheme = document.documentElement.classList.contains("dark")
        ? "transparent_dark"
        : "light";
      script.setAttribute("data-theme", currentTheme);

      giscusContainer.appendChild(script);

      // Enhanced theme change handler
      const handleThemeChange = () => {
        const giscusFrame = document.querySelector("iframe.giscus-frame");
        if (giscusFrame && giscusFrame.contentWindow) {
          const isDark = document.documentElement.classList.contains("dark");
          const newTheme = isDark ? "transparent_dark" : "light";

          try {
            giscusFrame.contentWindow.postMessage(
              {
                giscus: {
                  setConfig: { theme: newTheme },
                },
              },
              "https://giscus.app"
            );
          } catch (error) {
            console.warn("Failed to update Giscus theme:", error);
          }
        }
      };

      // Listen for theme changes
      const themeObserver = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (
            mutation.type === "attributes" &&
            mutation.attributeName === "class"
          ) {
            setTimeout(handleThemeChange, 100);
          }
        });
      });

      themeObserver.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  });
</script>
