---
// src/components/blog/BlogTags.astro
export interface Props {
  tags: string[];
  currentTag?: string;
  showCount?: boolean;
  variant?: "default" | "pills" | "minimal";
  className?: string;
}

const {
  tags,
  currentTag,
  showCount = false,
  variant = "default",
  className = "",
} = Astro.props;
---

<div class={`blog-tags ${className}`}>
  {
    variant === "default" && (
      <h3 class="text-lg font-bold text-zinc-900 dark:text-zinc-100 mb-4 uppercase tracking-wide">
        TAGS
      </h3>
    )
  }

  <div class={`flex flex-wrap gap-2 ${variant === "pills" ? "gap-3" : ""}`}>
    {
      tags.map((tag) => (
        <a
          href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, "-")}`}
          class={`tag-link transition-all duration-200 ${
            variant === "pills"
              ? "px-4 py-2 rounded-full border border-zinc-300 dark:border-zinc-600 hover:border-zinc-400 dark:hover:border-zinc-500"
              : variant === "minimal"
                ? "text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100 underline"
                : "px-3 py-1 bg-zinc-100 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 rounded hover:bg-zinc-200 dark:hover:bg-zinc-600"
          } ${
            currentTag === tag
              ? "bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900"
              : ""
          }`}
        >
          <span class="text-xs font-medium uppercase tracking-wide">
            #{tag}
          </span>
          {showCount && <span class="ml-1 text-xs opacity-75">(12)</span>}
        </a>
      ))
    }
  </div>
</div>
