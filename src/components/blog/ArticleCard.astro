---
// src/components/blog/ArticleCard.astro - FIXED CSS syntax error
export interface Props {
  title: string;
  excerpt: string;
  date: string;
  readTime: string;
  slug: string;
  image?: string;
  tags?: string[];
  category?: string;
  author?: {
    name: string;
    avatar?: string;
    bio?: string;
    role?: string;
  };
  audioUrl?: string;
  featured?: boolean;
  trending?: boolean;
  layout?: 'horizontal' | 'vertical';
}

const {
  title,
  excerpt,
  date,
  readTime,
  slug,
  image,
  tags = [],
  category,
  author,
  audioUrl,
  featured = false,
  trending = false,
  layout = 'vertical',
} = Astro.props;

// Generate optimized image URL with proper type checking
function getOptimizedImageUrl(url: string | undefined, width: number, height: number): string {
  if (!url || typeof url !== 'string') return '';
  
  // If using Unsplash or similar service
  if (url.includes('unsplash.com')) {
    return `${url}?w=${width}&h=${height}&fit=crop&crop=edges&auto=format&q=80`;
  }
  
  // For local images, you might use Astro's image optimization
  return url;
}

const optimizedImageUrl = image ? getOptimizedImageUrl(image, 600, 400) : '';
---

<article class="group article-card bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 overflow-hidden hover:shadow-xl hover:border-zinc-300 dark:hover:border-zinc-600 transition-all duration-300 transform hover:-translate-y-2">
  <!-- Enhanced Clickable Image -->
  {image && optimizedImageUrl && (
    <div class="aspect-[16/9] overflow-hidden relative image-container">
      <a 
        href={`/blog/${slug}`} 
        class="block w-full h-full group-hover:opacity-95 transition-opacity duration-300"
        aria-label={`Read article: ${title}`}
      >
        <img
          src={optimizedImageUrl}
          alt={`Featured image for: ${title}`}
          loading="lazy"
          class="w-full h-full object-cover transition-all duration-500 group-hover:scale-110 will-change-transform"
          style="transform: translateZ(0);"
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
          srcset={image ? `
            ${getOptimizedImageUrl(image, 400, 267)} 400w,
            ${getOptimizedImageUrl(image, 600, 400)} 600w,
            ${getOptimizedImageUrl(image, 800, 533)} 800w,
            ${getOptimizedImageUrl(image, 1200, 800)} 1200w
          ` : ''}
        />
        
        <!-- Image Overlay with Enhanced Hover Effect -->
        <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-end justify-center">
          <div class="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300 mb-4">
            <div class="bg-white/95 dark:bg-zinc-900/95 backdrop-blur-sm px-4 py-2 shadow-lg">
              <span class="text-sm font-medium text-zinc-900 dark:text-zinc-100 uppercase tracking-wide flex items-center gap-2">
                <i class="fas fa-arrow-right text-xs"></i>
                READ ARTICLE
              </span>
            </div>
          </div>
        </div>

        <!-- Category Badge on Image -->
        {category && (
          <div class="absolute top-4 left-4">
            <span class="category-badge-on-image">
              {category}
            </span>
          </div>
        )}

        <!-- Featured/Trending Badges -->
        <div class="absolute top-4 right-4 flex flex-col gap-2">
          {featured && (
            <span class="status-badge featured-badge">
              FEATURED
            </span>
          )}
          {trending && (
            <span class="status-badge trending-badge">
              TRENDING
            </span>
          )}
        </div>

        <!-- Audio Indicator -->
        {audioUrl && (
          <div class="absolute bottom-4 right-4">
            <div class="audio-indicator">
              <i class="fas fa-headphones"></i>
              <span class="uppercase tracking-wide">AUDIO</span>
            </div>
          </div>
        )}
      </a>
    </div>
  )}

  <!-- Article Content -->
  <div class="article-content">
    <!-- Meta Information -->
    <div class="article-meta">
      <time datetime={date} class="meta-item">
        {date}
      </time>
      <span class="meta-separator"></span>
      <span class="meta-item">{readTime}</span>
      {audioUrl && (
        <>
          <span class="meta-separator"></span>
          <span class="meta-item audio-meta">
            <i class="fas fa-headphones text-xs"></i>
            AUDIO
          </span>
        </>
      )}
    </div>

    <!-- Enhanced Clickable Title -->
    <h3 class="article-title">
      <a 
        href={`/blog/${slug}`} 
        class="title-link"
      >
        {title}
      </a>
    </h3>

    <!-- Excerpt -->
    <p class="article-excerpt">
      {excerpt}
    </p>

    <!-- Tags with proper mobile centering -->
    {tags && tags.length > 0 && (
      <div class="tags-container">
        {tags.slice(0, 3).map((tag: string) => (
          <a 
            href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
            class="tag-link"
          >
            #{tag}
          </a>
        ))}
        {tags.length > 3 && (
          <span class="tag-more">
            +{tags.length - 3} MORE
          </span>
        )}
      </div>
    )}

    <!-- Author Info -->
    {author && author.name && (
      <div class="author-section">
        {author.avatar && (
          <img
            src={author.avatar}
            alt={author.name}
            class="author-avatar"
            loading="lazy"
          />
        )}
        <div class="author-info">
          <div class="author-name">
            {author.name}
          </div>
          {author.role && (
            <div class="author-role">
              {author.role}
            </div>
          )}
        </div>
        
        <!-- FIXED: Read More Button without invalid CSS -->
        <a
          href={`/blog/${slug}`}
          class="read-more-btn group"
        >
          READ MORE
          <i class="fas fa-arrow-right text-xs transition-transform duration-300 group-hover:translate-x-1"></i>
        </a>
      </div>
    )}
  </div>

  <!-- Audio Player Integration -->
  {audioUrl && (
    <div class="audio-player-section">
      <div class="audio-player-container">
        <audio 
          controls 
          preload="metadata"
          class="audio-element"
        >
          <source src={audioUrl} type="audio/mpeg" />
          Your browser does not support the audio element.
        </audio>
      </div>
    </div>
  )}
</article>

<style>
  /* CSS Custom Properties for Consistent Design */
  :root {
    --tinkbyte-radius: 0px;
    --tinkbyte-radius-sm: 0px;
    --tinkbyte-radius-md: 0px;
    --tinkbyte-radius-lg: 0px;
    --tinkbyte-radius-card: 0px;
    --tinkbyte-radius-button: 0px;
  }

  /* Article Card Base */
  .article-card {
    border-radius: var(--tinkbyte-radius-card);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .article-card:hover {
    box-shadow: 
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  /* Image Container */
  .image-container img {
    transition: transform 0.5s ease;
  }

  .group:hover .image-container img {
    transform: scale(1.05);
  }

  /* Image Overlay Elements */
  .category-badge-on-image {
    padding: 0.25rem 0.75rem;
    background: rgba(255, 255, 255, 0.9);
    color: #1f2937;
    font-size: 0.75rem;
    font-weight: 700;
    border-radius: var(--tinkbyte-radius-sm);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  :global(.dark) .category-badge-on-image {
    background: rgba(17, 24, 39, 0.9);
    color: #f9fafb;
  }

  .status-badge {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 700;
    border-radius: var(--tinkbyte-radius-sm);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    backdrop-filter: blur(4px);
  }

  .featured-badge {
    background: rgba(245, 158, 11, 0.9);
    color: white;
  }

  .trending-badge {
    background: rgba(239, 68, 68, 0.9);
    color: white;
    animation: pulse 2s infinite;
  }

  .audio-indicator {
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: var(--tinkbyte-radius-sm);
    font-size: 0.75rem;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  /* Article Content */
  .article-content {
    padding: 1.5rem;
  }

  .article-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
    font-size: 0.75rem;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 500;
  }

  :global(.dark) .article-meta {
    color: #9ca3af;
  }

  .meta-item {
    white-space: nowrap;
  }

  .meta-separator {
    width: 0.25rem;
    height: 0.25rem;
    background: #d1d5db;
    border-radius: 50%;
    flex-shrink: 0;
  }

  :global(.dark) .meta-separator {
    background: #6b7280;
  }

  .audio-meta {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  /* Article Title */
  .article-title {
    font-size: 1.125rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }

  :global(.dark) .article-title {
    color: #f9fafb;
  }

  .title-link {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .title-link:hover {
    color: #374151;
    text-decoration: underline;
    text-decoration-thickness: 2px;
    text-underline-offset: 2px;
  }

  :global(.dark) .title-link:hover {
    color: #d1d5db;
  }

  /* Article Excerpt */
  .article-excerpt {
    font-size: 0.875rem;
    color: #6b7280;
    margin-bottom: 1rem;
    line-height: 1.6;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  :global(.dark) .article-excerpt {
    color: #9ca3af;
  }

  /* Tags Container with Perfect Mobile Centering */
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
    justify-content: flex-start; /* Desktop: left aligned */
  }

  .tag-link {
    padding: 0.25rem 0.5rem;
    background: #f3f4f6;
    color: #6b7280;
    font-size: 0.75rem;
    border-radius: var(--tinkbyte-radius-sm);
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 600;
    transition: all 0.2s ease;
    white-space: nowrap;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  :global(.dark) .tag-link {
    background: #374151;
    color: #d1d5db;
  }

  .tag-link:hover {
    background: #e5e7eb;
    color: #374151;
    transform: translateY(-1px);
  }

  :global(.dark) .tag-link:hover {
    background: #4b5563;
    color: #f9fafb;
  }

  .tag-more {
    padding: 0.25rem 0.5rem;
    background: #f3f4f6;
    color: #6b7280;
    font-size: 0.75rem;
    border-radius: var(--tinkbyte-radius-sm);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 600;
    white-space: nowrap;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  :global(.dark) .tag-more {
    background: #374151;
    color: #d1d5db;
  }

  /* Author Section */
  .author-section {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding-top: 1rem;
    border-top: 1px solid #f3f4f6;
  }

  :global(.dark) .author-section {
    border-top-color: #374151;
  }

  .author-avatar {
    width: 2rem;
    height: 2rem;
    border-radius: var(--tinkbyte-radius-sm);
    object-fit: cover;
    flex-shrink: 0;
  }

  .author-info {
    flex: 1;
  }

  .author-name {
    font-size: 0.875rem;
    font-weight: 600;
    color: #111827;
  }

  :global(.dark) .author-name {
    color: #f9fafb;
  }

  .author-role {
    font-size: 0.75rem;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  :global(.dark) .author-role {
    color: #9ca3af;
  }

  /* FIXED: Read More Button without invalid CSS syntax */
  .read-more-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.75rem;
    font-weight: 600;
    color: #6b7280;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: color 0.3s ease;
    white-space: nowrap;
  }

  :global(.dark) .read-more-btn {
    color: #9ca3af;
  }

  .read-more-btn:hover {
    color: #111827;
  }

  :global(.dark) .read-more-btn:hover {
    color: #f9fafb;
  }

  /* FIXED: Proper group hover for read more button */
  .read-more-btn.group:hover .fas.fa-arrow-right {
    transform: translateX(0.25rem);
  }

  /* Audio Player Section */
  .audio-player-section {
    padding: 0 1.5rem 1.5rem;
  }

  .audio-player-container {
    background: rgba(0, 0, 0, 0.05);
    border-radius: var(--tinkbyte-radius-md);
    padding: 1rem;
    margin-top: 1rem;
  }

  :global(.dark) .audio-player-container {
    background: rgba(255, 255, 255, 0.05);
  }

  .audio-element {
    width: 100%;
    height: 40px;
    border-radius: var(--tinkbyte-radius-sm);
  }

  /* Mobile Responsive with Perfect Centering */
  @media (max-width: 768px) {
    .article-content {
      padding: 1.25rem;
      text-align: center; /* Center all content on mobile */
    }

    .article-meta {
      justify-content: center; /* Center meta items */
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .article-title {
      text-align: center;
      font-size: 1rem;
    }

    .article-excerpt {
      text-align: center;
      margin-bottom: 1.25rem;
    }

    /* Perfect tag centering on mobile */
    .tags-container {
      justify-content: center; /* Center tags on mobile */
      margin-bottom: 1.25rem;
    }

    .tag-link,
    .tag-more {
      font-size: 0.6875rem;
      padding: 0.375rem 0.75rem;
      min-width: fit-content;
    }

    .author-section {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
      padding-top: 1.25rem;
    }

    .author-info {
      text-align: center;
    }

    .read-more-btn {
      align-self: center;
    }

    .audio-player-section {
      padding: 0 1.25rem 1.25rem;
    }
  }

  /* Extra small screens */
  @media (max-width: 480px) {
    .article-content {
      padding: 1rem;
    }

    .article-title {
      font-size: 0.9375rem;
      line-height: 1.3;
    }

    .tags-container {
      gap: 0.375rem;
    }

    .tag-link,
    .tag-more {
      font-size: 0.625rem;
      padding: 0.3125rem 0.625rem;
    }

    .author-section {
      gap: 0.75rem;
    }

    .audio-player-section {
      padding: 0 1rem 1rem;
    }
  }

  /* Animations */
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .article-card,
    .title-link,
    .tag-link,
    .read-more-btn,
    .image-container img {
      transition: none;
    }

    .trending-badge {
      animation: none;
    }

    .group:hover .image-container img {
      transform: none;
    }
  }
</style>

<script>
  // Enhanced TypeScript handling without interface conflicts
  document.addEventListener('DOMContentLoaded', () => {
    try {
      // Device capability detection with proper type safety
      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      const isLowEndDevice = (navigator as any).hardwareConcurrency && (navigator as any).hardwareConcurrency < 4;
      const isMobile = window.innerWidth < 768;

      // Find article cards safely
      const articleCards = document.querySelectorAll('.article-card');
      
      if (articleCards.length === 0) {
        console.warn('ArticleCard: No article cards found');
        return;
      }

      articleCards.forEach((articleCard, index) => {
        if (!articleCard) {
          console.warn(`ArticleCard ${index}: Card element not found`);
          return;
        }

        // Apply enhancements based on device capabilities
        if (!prefersReducedMotion && !isLowEndDevice && !isMobile) {
          // Enable enhanced animations and effects
          articleCard.classList.add('enhanced-interactions');
          
          // Enable image hover effects
          const imageContainer = articleCard.querySelector('.image-container img');
          if (imageContainer) {
            imageContainer.classList.add('hover-scale-enabled');
          }
          
          // Enable smooth hover transitions
          articleCard.classList.add('smooth-hover');
        } else {
          // Fallback for reduced motion or low-end devices
          articleCard.classList.add('reduced-motion');
        }

        // Handle audio player errors with proper type checking
        const audioElement = articleCard.querySelector('audio') as HTMLAudioElement | null;
        if (audioElement) {
          audioElement.addEventListener('error', () => {
            const audioContainer = audioElement.closest('.audio-player-container');
            const container = audioContainer?.parentElement;
            if (container && container instanceof HTMLElement) {
              container.style.display = 'none';
            }
          });
        }
      });

    } catch (error) {
      console.warn('ArticleCard: Error during initialization:', error);
    }
  });
</script>