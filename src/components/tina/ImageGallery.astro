---
// src/components/tina/ImageGallery.astro - Fixed Flashing Issue
export interface Props {
  images?: Array<{
    src: string;
    alt: string;
    caption?: string;
  }>;
  layout?: "grid-2" | "grid-3" | "grid-4" | "masonry" | "carousel" | "lightbox";
  caption?: string;
  autoplay?: boolean;
  autoplaySpeed?: number;
}

const {
  images = [],
  layout = "grid-2",
  caption,
  autoplay = false,
  autoplaySpeed = 3,
} = Astro.props;

// Filter out any undefined/empty images and ensure proper typing
const validImages = images.filter(
  (img): img is { src: string; alt: string; caption?: string } =>
    img && typeof img === "object" && Boolean(img.src) && Boolean(img.alt)
);

const layoutClasses = {
  "grid-2": "grid-cols-1 md:grid-cols-2",
  "grid-3": "grid-cols-1 md:grid-cols-2 lg:grid-cols-3",
  "grid-4": "grid-cols-1 md:grid-cols-2 lg:grid-cols-4",
  masonry: "columns-1 md:columns-2 lg:columns-3",
  carousel: "flex overflow-x-auto snap-x snap-mandatory",
  lightbox: "grid-cols-1 md:grid-cols-2 lg:grid-cols-3",
};
---

{
  validImages.length > 0 ? (
    <div class="tinkbyte-gallery" style="opacity: 1; visibility: visible;">
      {caption && <h3 class="gallery-caption">{caption}</h3>}

      {layout === "carousel" ? (
        <div class={`gallery-carousel ${layoutClasses[layout]}`}>
          {validImages.map((image, index) => (
            <div class="carousel-item">
              <figure class="gallery-figure">
                <img
                  src={image.src}
                  alt={image.alt}
                  class="gallery-image carousel-image"
                  loading="eager"
                  style="opacity: 1; visibility: visible;"
                />
                {image.caption && (
                  <figcaption class="gallery-figcaption">
                    {image.caption}
                  </figcaption>
                )}
              </figure>
            </div>
          ))}
        </div>
      ) : layout === "masonry" ? (
        <div class={`gallery-masonry ${layoutClasses[layout]}`}>
          {validImages.map((image, index) => (
            <figure class="gallery-figure masonry-item">
              <img
                src={image.src}
                alt={image.alt}
                class="gallery-image masonry-image"
                loading="eager"
                style="opacity: 1; visibility: visible;"
              />
              {image.caption && (
                <figcaption class="gallery-figcaption">
                  {image.caption}
                </figcaption>
              )}
            </figure>
          ))}
        </div>
      ) : (
        <div class={`gallery-grid grid ${layoutClasses[layout]}`}>
          {validImages.map((image, index) => (
            <figure class="gallery-figure grid-item">
              <img
                src={image.src}
                alt={image.alt}
                class="gallery-image grid-image"
                loading="eager"
                style="opacity: 1; visibility: visible;"
              />
              {image.caption && (
                <figcaption class="gallery-figcaption">
                  {image.caption}
                </figcaption>
              )}
            </figure>
          ))}
        </div>
      )}
    </div>
  ) : (
    <div class="gallery-placeholder">
      <div class="placeholder-content">
        <span class="placeholder-icon">üñºÔ∏è</span>
        <p class="placeholder-text">No images added to gallery yet</p>
      </div>
    </div>
  )
}

<style>
  /* TinkByte Gallery Styles - No Transitions */
  .tinkbyte-gallery {
    font-family: "Space Grotesk", sans-serif;
    margin: 2rem 0;
    opacity: 1 !important;
    visibility: visible !important;
  }

  .gallery-placeholder {
    padding: 3rem 2rem;
    text-align: center;
    background: #f8fafc;
    border: 2px dashed #e2e8f0;
    border-radius: 0;
    margin: 2rem 0;
    opacity: 1 !important;
    visibility: visible !important;
  }

  :global(.dark) .gallery-placeholder {
    background: #1e293b;
    border-color: #334155;
  }

  .placeholder-content {
    max-width: 300px;
    margin: 0 auto;
  }

  .placeholder-icon {
    font-size: 3rem;
    display: block;
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .placeholder-text {
    font-size: 1.125rem;
    font-weight: 600;
    color: #6b7280;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .gallery-caption {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    color: #1e293b;
  }

  :global(.dark) .gallery-caption {
    color: #e2e8f0;
  }

  /* Gallery Figure - NO TRANSITIONS */
  .gallery-figure {
    background: #f8fafc;
    border: 2px solid #e2e8f0;
    border-radius: 0;
    overflow: hidden;
    margin: 0;
    position: relative;
    opacity: 1 !important;
    visibility: visible !important;
    /* Remove all transitions */
    transition: none !important;
    transform: none !important;
  }

  .gallery-figure:hover {
    /* Remove hover effects that cause flashing */
    transform: none !important;
    box-shadow: none !important;
    border-color: #243788;
  }

  :global(.dark) .gallery-figure {
    background: #1e293b;
    border-color: #334155;
  }

  :global(.dark) .gallery-figure:hover {
    border-color: #b4bce1;
  }

  /* Gallery Images - NO TRANSITIONS */
  .gallery-image {
    width: 100%;
    display: block;
    opacity: 1 !important;
    visibility: visible !important;
    /* Remove all transitions */
    transition: none !important;
    transform: none !important;
  }

  .grid-image {
    height: 12rem;
    object-fit: cover;
  }

  .carousel-image {
    height: 16rem;
    object-fit: cover;
  }

  .masonry-image {
    height: auto;
  }

  /* Remove hover scaling that causes flashing */
  .gallery-figure:hover .gallery-image {
    transform: none !important;
  }

  /* Gallery Caption */
  .gallery-figcaption {
    padding: 0.75rem;
    font-size: 0.875rem;
    color: #6b7280;
    text-align: center;
    background: white;
    border-top: 1px solid #e5e7eb;
  }

  :global(.dark) .gallery-figcaption {
    color: #9ca3af;
    background: #1e293b;
    border-top-color: #374151;
  }

  /* Grid Layout */
  .gallery-grid {
    gap: 1rem;
  }

  /* Masonry Layout */
  .gallery-masonry {
    gap: 1rem;
  }

  .masonry-item {
    break-inside: avoid;
    margin-bottom: 1rem;
  }

  /* Carousel Layout */
  .gallery-carousel {
    gap: 1rem;
    padding-bottom: 1rem;
    scrollbar-width: thin;
    scrollbar-color: #cbd5e1 #f1f5f9;
  }

  .carousel-item {
    flex: none;
    width: 20rem;
    snap-align: center;
  }

  /* Custom Scrollbar for Carousel */
  .gallery-carousel::-webkit-scrollbar {
    height: 8px;
  }

  .gallery-carousel::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 0;
  }

  .gallery-carousel::-webkit-scrollbar-thumb {
    background: #243788;
    border-radius: 0;
  }

  .gallery-carousel::-webkit-scrollbar-thumb:hover {
    background: #1e2f6b;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .tinkbyte-gallery {
      margin: 1.5rem 0;
    }

    .gallery-grid {
      gap: 0.75rem;
    }

    .gallery-masonry {
      gap: 0.75rem;
    }

    .gallery-carousel {
      gap: 0.75rem;
    }

    .carousel-item {
      width: 16rem;
    }

    .grid-image,
    .carousel-image {
      height: 10rem;
    }

    .gallery-figcaption {
      padding: 0.5rem;
      font-size: 0.8125rem;
    }

    .gallery-placeholder {
      padding: 2rem 1rem;
    }

    .placeholder-icon {
      font-size: 2rem;
    }

    .placeholder-text {
      font-size: 1rem;
    }
  }

  /* Force no transitions globally for this component */
  .tinkbyte-gallery *,
  .tinkbyte-gallery *::before,
  .tinkbyte-gallery *::after {
    transition: none !important;
    animation: none !important;
    transform: none !important;
  }

  /* Ensure images load properly */
  .gallery-image {
    image-rendering: auto;
    image-rendering: crisp-edges;
    image-rendering: -webkit-optimize-contrast;
  }
</style>
