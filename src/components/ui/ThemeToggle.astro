---
// src/components/ui/ThemeToggle.astro - Enhanced
---

<button
  data-theme-toggle
  class="theme-toggle"
  aria-label="Toggle dark mode"
  title="Toggle dark mode"
>
  <svg class="sun-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    ></path>
  </svg>
  <svg class="moon-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    ></path>
  </svg>
</button>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 4px;
    color: #6b7280;
    transition: all 0.2s ease;
    position: relative;
    width: 2.5rem;
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  :global(.dark) .theme-toggle {
    color: rgb(156, 163, 175);
  }

  .theme-toggle:hover {
    background: #f3f4f6;
  }

  :global(.dark) .theme-toggle:hover {
    background: rgb(55, 65, 81);
  }

  .theme-toggle svg {
    width: 1.25rem;
    height: 1.25rem;
    position: absolute;
    transition: all 0.3s ease;
  }

  .sun-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }

  .moon-icon {
    opacity: 0;
    transform: rotate(90deg) scale(0.8);
  }

  :global(.dark) .sun-icon {
    opacity: 0;
    transform: rotate(90deg) scale(0.8);
  }

  :global(.dark) .moon-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.querySelector("[data-theme-toggle]");

    if (themeToggle) {
      // Initialize theme
      const savedTheme = localStorage.getItem("theme");
      const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)"
      ).matches;

      if (savedTheme === "dark" || (!savedTheme && prefersDark)) {
        document.documentElement.classList.add("dark");
      }

      // Toggle theme
      themeToggle.addEventListener("click", () => {
        const isDark = document.documentElement.classList.contains("dark");

        if (isDark) {
          document.documentElement.classList.remove("dark");
          localStorage.setItem("theme", "light");
        } else {
          document.documentElement.classList.add("dark");
          localStorage.setItem("theme", "dark");
        }
      });
    }

    // Listen for system theme changes
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", (e) => {
        if (!localStorage.getItem("theme")) {
          if (e.matches) {
            document.documentElement.classList.add("dark");
          } else {
            document.documentElement.classList.remove("dark");
          }
        }
      });
  });
</script>
