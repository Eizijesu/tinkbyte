---
export interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<button
  id="theme-toggle"
  class={`p-2 rounded-md text-zinc-700 dark:text-zinc-300 hover:text-zinc-900 dark:hover:text-zinc-100 hover:bg-zinc-100 dark:hover:bg-zinc-800 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-zinc-500 focus:ring-offset-2 ${className}`}
  aria-label="Toggle theme"
  type="button"
>
  <!-- Sun icon (shows in dark mode) -->
  <svg
    id="sun-icon"
    class="w-5 h-5 transition-transform duration-200 hidden dark:block"
    fill="currentColor"
    viewBox="0 0 20 20"
  >
    <path
      fill-rule="evenodd"
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      clip-rule="evenodd"></path>
  </svg>

  <!-- Moon icon (shows in light mode) -->
  <svg
    id="moon-icon"
    class="w-5 h-5 transition-transform duration-200 block dark:hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
</button>

<script>
  function initThemeToggle() {
    const themeToggle = document.getElementById("theme-toggle");

    if (!themeToggle) {
      console.warn("Theme toggle button not found");
      return;
    }

    // Apply theme and update icons
    const applyTheme = (theme) => {
      const html = document.documentElement;
      const sunIcon = document.getElementById("sun-icon");
      const moonIcon = document.getElementById("moon-icon");

      if (theme === "dark") {
        html.classList.add("dark");
      } else {
        html.classList.remove("dark");
      }

      // Store theme
      if (typeof localStorage !== "undefined") {
        localStorage.setItem("theme", theme);
      }
    };

    // Toggle functionality
    themeToggle.addEventListener("click", () => {
      const isDarkMode = document.documentElement.classList.contains("dark");
      const newTheme = isDarkMode ? "light" : "dark";
      applyTheme(newTheme);
    });
  }

  // Initialize when DOM is ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initThemeToggle);
  } else {
    initThemeToggle();
  }
</script>
