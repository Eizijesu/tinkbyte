---
// src/components/ui/Header.astro - Fixed TypeScript issues
import Logo from "./Logo.astro";
import ThemeToggle from "./ThemeToggle.astro";
import { SITE } from "../../config/site";

// This will be dynamic from TinaCMS - for now using static data
const navigationLinks = [
  { name: "Articles", href: "/blog" },
  { name: "Newsletter", href: "/newsletter" },
  // { name: "Community", href: "/community" },
  { name: "Audio", href: "/podcast" },
  //{ name: "About", href: "/about" },
];

const topicLinks = [
  { name: "Build Thinking", href: "/blog/categories/build-thinking" },
  { name: "Learning by Doing", href: "/blog/categories/learning-by-doing" },
  {
    name: "Community Innovation",
    href: "/blog/categories/community-innovation",
  },
  { name: "Global Perspective", href: "/blog/categories/global-perspective" },
  { name: "Research Backed", href: "/blog/categories/research-backed" },
  { name: "Developer Tools", href: "/blog/categories/developer-tools" },
  { name: "AI Evolution", href: "/blog/categories/ai-evolution" },
  { name: "Tech Culture", href: "/blog/categories/tech-culture" },
  { name: "Product Strategy", href: "/blog/categories/product-strategy" },
];
---

<header class="magazine-nav">
  <!-- Main navigation -->
  <nav class="main-nav">
    <div class="max-w-7xl mx-auto px-4">
      <div class="nav-container">
        <!-- Logo -->
        <div class="nav-logo">
          <Logo size="default" />
        </div>

        <!-- Primary navigation -->
        <div class="nav-primary">
          {
            navigationLinks.map((link) => (
              <a href={link.href} class="nav-link">
                {link.name}
              </a>
            ))
          }
          <div class="nav-dropdown">
            <button class="nav-link dropdown-trigger">Topics â–¾</button>
            <div class="dropdown-menu">
              {topicLinks.map((topic) => <a href={topic.href}>{topic.name}</a>)}
            </div>
          </div>
        </div>

        <!-- Secondary navigation -->
        <div class="nav-secondary">
          <button class="search-toggle" aria-label="Search">
            <svg
              class="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </button>
          <ThemeToggle />
          <a href="/newsletter" class="subscribe-button">Subscribe</a>
        </div>

        <!-- Mobile menu button -->
        <button class="mobile-menu-button md:hidden" aria-label="Open menu">
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>

      <!-- Mobile menu -->
      <div class="mobile-menu hidden md:hidden">
        <div class="mobile-menu-content">
          {
            navigationLinks.map((link) => (
              <a href={link.href} class="mobile-nav-link">
                {link.name}
              </a>
            ))
          }

          <div class="mobile-topics">
            <span class="mobile-topics-title">Topics</span>
            {
              topicLinks.map((topic) => (
                <a href={topic.href} class="mobile-topic-link">
                  {topic.name}
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  .magazine-nav {
    position: sticky;
    top: 0;
    z-index: 50;
    background: white;
    border-bottom: 1px solid #e5e7eb;
    transition: all 0.3s ease;
  }

  :global(.dark) .magazine-nav {
    background: rgb(17, 24, 39);
    border-bottom-color: rgb(55, 65, 81);
  }

  .main-nav {
    background: transparent;
  }

  .nav-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 4rem;
  }

  .nav-primary {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  @media (max-width: 768px) {
    .nav-primary {
      display: none;
    }
  }

  .nav-link {
    color: #374151;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    transition: color 0.2s;
  }

  :global(.dark) .nav-link {
    color: rgb(209, 213, 219);
  }

  .nav-link:hover {
    color: rgb(36, 55, 136);
  }

  :global(.dark) .nav-link:hover {
    color: rgb(180, 188, 225);
  }

  .nav-dropdown {
    position: relative;
  }

  .dropdown-trigger {
    background: none;
    border: none;
    cursor: pointer;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: var(--tinkbyte-radius-card);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    padding: 0.5rem 0;
    min-width: 250px;
    display: none;
    transition: all 0.3s ease;
  }

  :global(.dark) .dropdown-menu {
    background: rgb(31, 41, 55);
    border-color: rgb(55, 65, 81);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  }

  .nav-dropdown:hover .dropdown-menu {
    display: block;
  }

  .dropdown-menu a {
    display: block;
    padding: 0.75rem 1rem;
    color: #374151;
    text-decoration: none;
    font-size: 0.875rem;
    text-transform: none;
    letter-spacing: normal;
    transition: all 0.2s ease;
  }

  :global(.dark) .dropdown-menu a {
    color: rgb(209, 213, 219);
  }

  .dropdown-menu a:hover {
    background: #f9fafb;
    color: rgb(36, 55, 136);
  }

  :global(.dark) .dropdown-menu a:hover {
    background: rgb(55, 65, 81);
    color: rgb(180, 188, 225);
  }

  .nav-secondary {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .search-toggle {
    background: none;
    border: none;
    color: #6b7280;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: var(--tinkbyte-radius);
    transition: all 0.2s ease;
  }

  :global(.dark) .search-toggle {
    color: rgb(156, 163, 175);
  }

  .search-toggle:hover {
    background: #f3f4f6;
  }

  :global(.dark) .search-toggle:hover {
    background: rgb(55, 65, 81);
  }

  .subscribe-button {
    background: rgb(36, 55, 136);
    color: white;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: var(--tinkbyte-radius);
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    transition: background-color 0.2s;
  }

  .subscribe-button:hover {
    background: rgb(26, 43, 92);
  }

  .mobile-menu-button {
    background: none;
    border: none;
    color: #6b7280;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: var(--tinkbyte-radius);
    transition: all 0.2s ease;
  }

  :global(.dark) .mobile-menu-button {
    color: rgb(156, 163, 175);
  }

  .mobile-menu-button:hover {
    background: #f3f4f6;
  }

  :global(.dark) .mobile-menu-button:hover {
    background: rgb(55, 65, 81);
  }

  .mobile-menu {
    background: white;
    border-top: 1px solid #e5e7eb;
    transition: all 0.3s ease;
  }

  :global(.dark) .mobile-menu {
    background: rgb(17, 24, 39);
    border-top-color: rgb(55, 65, 81);
  }

  .mobile-menu-content {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mobile-nav-link {
    padding: 0.75rem;
    color: #374151;
    text-decoration: none;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border-radius: var(--tinkbyte-radius);
    transition: all 0.2s ease;
  }

  :global(.dark) .mobile-nav-link {
    color: rgb(209, 213, 219);
  }

  .mobile-nav-link:hover {
    background: #f9fafb;
    color: rgb(36, 55, 136);
  }

  :global(.dark) .mobile-nav-link:hover {
    background: rgb(55, 65, 81);
    color: rgb(180, 188, 225);
  }

  .mobile-topics {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid #e5e7eb;
    transition: border-color 0.3s ease;
  }

  :global(.dark) .mobile-topics {
    border-top-color: rgb(55, 65, 81);
  }

  .mobile-topics-title {
    font-weight: 600;
    color: #374151;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    display: block;
    transition: color 0.3s ease;
  }

  :global(.dark) .mobile-topics-title {
    color: rgb(209, 213, 219);
  }

  .mobile-topic-link {
    display: block;
    padding: 0.5rem 0.75rem;
    color: #6b7280;
    text-decoration: none;
    font-size: 0.875rem;
    border-radius: var(--tinkbyte-radius);
    transition: all 0.2s ease;
  }

  :global(.dark) .mobile-topic-link {
    color: rgb(156, 163, 175);
  }

  .mobile-topic-link:hover {
    background: #f9fafb;
    color: rgb(36, 55, 136);
  }

  :global(.dark) .mobile-topic-link:hover {
    background: rgb(55, 65, 81);
    color: rgb(180, 188, 225);
  }

  .hidden {
    display: none;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Mobile menu toggle
    const mobileMenuButton = document.querySelector(".mobile-menu-button");
    const mobileMenu = document.querySelector(".mobile-menu");

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
      });
    }

    // Close mobile menu when clicking outside - FIXED TYPE ASSERTION
    document.addEventListener("click", (e) => {
      const target = e.target as Node;

      if (
        mobileMenu &&
        target &&
        !mobileMenu.contains(target) &&
        !mobileMenuButton?.contains(target)
      ) {
        mobileMenu.classList.add("hidden");
      }
    });

    // Search functionality
    const searchToggle = document.querySelector(".search-toggle");
    if (searchToggle) {
      searchToggle.addEventListener("click", () => {
        window.location.href = "/search";
      });
    }
  });
</script>
