---
// src/components/ui/Header.astro - SIMPLIFIED AUTH FIX
import Logo from "./Logo.astro";
import ThemeToggle from "./ThemeToggle.astro";
import { SITE } from "../../config/site";
import { getCollection } from "astro:content";

// Navigation links
const navigationLinks = [
  { name: "Featured", href: "/blog" },
  { name: "Topics", href: "#", isDropdown: true },
  { name: "Newsletter", href: "/newsletter" },
  { name: "Audio", href: "/podcast" },
];

// Try to get topics from CMS, fallback to hardcoded
let allTopicsData, pageData, topicsData;

try {
  allTopicsData = await getCollection("allTopics");
  pageData = allTopicsData[0]?.data;
  topicsData = pageData?.topics;
} catch (error) {
  console.warn("Could not load topics from CMS for header, using fallback data");
}

// Fallback topics data
const fallbackTopics = [
  {
    name: "Build Thinking",
    href: "/blog/categories/build-thinking",
    description: "From concept to working product"
  },
  {
    name: "AI Evolution",
    href: "/blog/categories/ai-evolution",
    description: "Practical AI integration stories"
  },
  {
    name: "Product Strategy",
    href: "/blog/categories/product-strategy",
    description: "Roadmap decisions and prioritization"
  },
  {
    name: "Startup Insight",
    href: "/blog/categories/startup-insight",
    description: "Early-stage execution signals"
  },
  {
    name: "Developer Tools",
    href: "/blog/categories/developer-tools",
    description: "Toolchains and infrastructure choices"
  },
  {
    name: "Learning by Doing",
    href: "/blog/categories/learning-by-doing",
    description: "Real-world lessons from action"
  }
];

// Use CMS data if available, otherwise use fallback
const allTopics = topicsData || fallbackTopics;

// Featured/Popular topics for dropdown (first 6)
const featuredTopics = allTopics.slice(0, 6);

// All topics for mobile (just names)
const allTopicsMobile = allTopics.map(topic => topic.name);
---

<header class="tinkbyte-header">
  <!-- Main navigation -->
  <nav class="main-nav">
    <div class="max-w-7xl mx-auto px-4">
      <div class="nav-container">
        <!-- Logo -->
        <div class="nav-logo">
          <Logo size="default" />
        </div>

        <!-- Primary navigation -->
        <div class="nav-primary">
          {navigationLinks.map((link) => (
            link.isDropdown ? (
              <div class="nav-dropdown">
                <button class="nav-link dropdown-trigger" aria-expanded="false" aria-haspopup="true">
                  {link.name} 
                  <svg class="dropdown-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
                    <path d="M1 1.5L6 6.5L11 1.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
                <div class="dropdown-menu-compact" role="menu">
                  <div class="dropdown-content-compact">
                    
                    <!-- Featured Topics Section -->
                    <div class="featured-topics">
                      <h3 class="section-title">Popular Topics</h3>
                      <div class="topics-list">
                        {featuredTopics.map((topic) => (
                          <a href={topic.href} class="topic-link-compact" role="menuitem">
                            <span class="topic-name-compact">{topic.name}</span>
                            <span class="topic-desc-compact">{topic.description}</span>
                          </a>
                        ))}
                      </div>
                    </div>

                    <!-- Navigation Footer -->
                    <div class="dropdown-footer-compact">
                      <a href="/all-topics" class="view-all-link">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                          <path d="M2 4H14M2 8H14M2 12H14" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                        </svg>
                        View All 21 Topics
                      </a>
                      <a href="/community" class="community-link">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                          <path d="M8 2C9.1 2 10 2.9 10 4C10 5.1 9.1 6 8 6C6.9 6 6 5.1 6 4C6 2.9 6.9 2 8 2ZM8 7C10.4 7 14 8.2 14 10.5V12H2V10.5C2 8.2 5.6 7 8 7Z" fill="currentColor"/>
                        </svg>
                        Join Community
                      </a>
                    </div>

                  </div>
                </div>
              </div>
            ) : (
              <a href={link.href} class="nav-link">
                {link.name}
              </a>
            )
          ))}
        </div>

        <!-- Secondary navigation -->
        <div class="nav-secondary">
          <button class="search-toggle" aria-label="Search">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </button>
          <ThemeToggle />
          
          <!-- Dynamic Auth Button - Will be updated by JavaScript -->
          <div class="auth-button-container">
            <!-- Sign In Button (Default) -->
            <a href="/auth/signin" class="signin-button" id="signin-btn">Sign In</a>
            
            <!-- Account Dropdown (Hidden by default) -->
            <div class="account-dropdown" id="account-dropdown" style="display: none;">
              <div class="account-trigger-wrapper">
                <a href="/profile" class="account-name-link" id="account-name-link">
                  <span class="account-name" id="account-name">Account</span>
                </a>
                <button class="account-dropdown-btn" id="account-dropdown-btn" aria-expanded="false" aria-haspopup="true">
                  <svg class="account-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
                    <path d="M1 1.5L6 6.5L11 1.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
              </div>
              
              <div class="account-menu" id="account-menu" role="menu">
                <div class="account-menu-content">
                  <button class="account-menu-link signout-btn" id="signout-btn" role="menuitem">
                    <i class="fas fa-sign-out-alt"></i>
                    Sign Out
                  </button>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Subscribe Button -->
          <a href="/subscribe" class="subscribe-button">Subscribe</a>
        </div>

        <!-- Mobile menu button -->
        <button class="mobile-menu-button md:hidden" aria-label="Open menu">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>

      <!-- Mobile menu -->
      <div class="mobile-menu hidden md:hidden">
        <div class="mobile-menu-content">
          <a href="/blog" class="mobile-nav-link">Featured</a>
          <a href="/newsletter" class="mobile-nav-link">Newsletter</a>
          <a href="/podcast" class="mobile-nav-link">Audio</a>

          <div class="mobile-topics">
            <span class="mobile-topics-title">Quick Topics</span>
            <div class="mobile-topics-compact">
              {allTopicsMobile.slice(0, 8).map((topicName) => (
                <a href={`/blog/categories/${topicName.toLowerCase().replace(/\s+/g, '-').replace(/&/g, '')}`} class="mobile-topic-compact">
                  {topicName}
                </a>
              ))}
            </div>
            <div class="mobile-topic-footer">
              <a href="/all-topics" class="mobile-view-all">View All Topics</a>
              <a href="/community" class="mobile-community">Community</a>
            </div>
          </div>

          <!-- Mobile Auth Section - Dynamic -->
          <div class="mobile-auth-section" id="mobile-auth-section">
            <!-- Sign In (Default) -->
            <div class="mobile-signin-section" id="mobile-signin-section">
              <a href="/auth/signin" class="mobile-signin-button">Sign In</a>
              <a href="/subscribe" class="mobile-subscribe-button">Subscribe to Newsletter</a>
            </div>
            
            <!-- Account Menu (Hidden by default) -->
            <div class="mobile-account-section" id="mobile-account-section" style="display: none;">
              <div class="mobile-account-header">
                <a href="/profile" class="mobile-account-name-link">
                  <span class="mobile-account-name" id="mobile-account-name">User Name</span>
                </a>
              </div>
              
              <div class="mobile-account-links">
                <button class="mobile-account-link mobile-signout-btn" id="mobile-signout-btn">
                  <i class="fas fa-sign-out-alt"></i>
                  Sign Out
                </button>
              </div>
              
              <a href="/subscribe" class="mobile-subscribe-button">Subscribe to Newsletter</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  /* TinkByte Header Design System */
  .tinkbyte-header {
    position: sticky;
    top: 0;
    z-index: 50;
    background: white;
    border-bottom: 2px solid #e2e8f0;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.95);
    font-family: "Space Grotesk", sans-serif;
  }

  :global(.dark) .tinkbyte-header {
    background: rgba(15, 23, 42, 0.95);
    border-bottom-color: #334155;
  }

  .main-nav {
    background: transparent;
  }

  .nav-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 4.5rem;
  }

  .nav-logo {
    flex-shrink: 0;
  }

  .nav-primary {
    display: flex;
    align-items: center;
    gap: 2.5rem;
    margin-left: auto;
    margin-right: auto;
  }

  @media (max-width: 768px) {
    .nav-primary {
      display: none;
    }
  }

  /* Navigation Links */
  .nav-link {
    font-family: "Space Grotesk", sans-serif;
    color: #1e293b;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all 0.3s ease;
    padding: 0.75rem 0;
    position: relative;
    border-radius: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .nav-link::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 3px;
    background: #243788;
    transition: width 0.3s ease;
    border-radius: 0;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  .nav-link:hover {
    color: #243788;
    transform: translateY(-1px);
  }

  :global(.dark) .nav-link {
    color: #e2e8f0;
  }

  :global(.dark) .nav-link::after {
    background: #b4bce1;
  }

  :global(.dark) .nav-link:hover {
    color: #b4bce1;
  }

  /* Dropdown Arrow */
  .dropdown-arrow {
    transition: transform 0.3s ease;
  }

  .nav-dropdown:hover .dropdown-arrow {
    transform: rotate(180deg);
  }

  /* COMPACT DROPDOWN STYLES - CLEANED UP */
  .nav-dropdown {
    position: relative;
  }

  .dropdown-trigger {
    background: none;
    border: none;
    cursor: pointer;
    font-family: inherit;
    border-radius: 0;
  }

  .dropdown-menu-compact {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: white;
    border: 2px solid #243788;
    border-radius: 0;
    box-shadow: 0 20px 40px rgba(36, 55, 136, 0.15);
    padding: 0;
    width: 480px;
    max-width: 90vw;
    display: none;
    transition: all 0.3s ease;
    z-index: 100;
  }

  :global(.dark) .dropdown-menu-compact {
    background: #0f172a;
    border-color: #475569;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
  }

  .nav-dropdown:hover .dropdown-menu-compact {
    display: block;
    animation: fadeInUp 0.3s ease;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateX(-50%) translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }

  .dropdown-content-compact {
    padding: 1.5rem;
  }

  /* Section Title */
  .section-title {
    font-family: "Space Grotesk", sans-serif;
    font-size: 0.75rem;
    font-weight: 700;
    color: #243788;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin: 0 0 1rem 0;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid #e2e8f0;
  }

  :global(.dark) .section-title {
    color: #e2e8f0;
    border-bottom-color: #334155;
  }

  /* Featured Topics List */
  .featured-topics {
    margin-bottom: 1.5rem;
  }

  .topics-list {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.75rem;
  }

  .topic-link-compact {
    display: block;
    padding: 0.875rem;
    border: 2px solid transparent;
    border-radius: 0;
    text-decoration: none;
    transition: all 0.3s ease;
    background: #f8fafc;
  }

  :global(.dark) .topic-link-compact {
    background: #1e293b;
    border-color: transparent;
  }

  .topic-link-compact:hover {
    border-color: #243788;
    background: white;
    transform: translateY(-1px);
  }

  :global(.dark) .topic-link-compact:hover {
    border-color: #64748b;
    background: #334155;
  }

  .topic-name-compact {
    display: block;
    font-family: "Space Grotesk", sans-serif;
    font-size: 0.8125rem;
    font-weight: 700;
    color: #243788;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 0.25rem;
  }

  :global(.dark) .topic-name-compact {
    color: #e2e8f0;
  }

  .topic-desc-compact {
    display: block;
    font-size: 0.75rem;
    color: #64748b;
    line-height: 1.3;
  }

  :global(.dark) .topic-desc-compact {
    color: #94a3b8;
  }

  /* Compact Footer */
  .dropdown-footer-compact {
    border-top: 2px solid #e2e8f0;
    padding-top: 1rem;
    display: flex;
    gap: 1rem;
  }

  :global(.dark) .dropdown-footer-compact {
    border-top-color: #334155;
  }

  .view-all-link,
  .community-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    padding: 0.75rem 1rem;
    border: 2px solid transparent;
    border-radius: 0;
    transition: all 0.3s ease;
    flex: 1;
    font-size: 0.8125rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .view-all-link {
    background: #243788;
    color: white;
    border-color: #243788;
  }

  .view-all-link:hover {
    background: white;
    color: #243788;
  }

  :global(.dark) .view-all-link {
    background: #e2e8f0;
    color: #0f172a;
    border-color: #e2e8f0;
  }

  :global(.dark) .view-all-link:hover {
    background: transparent;
    color: #e2e8f0;
    border-color: #e2e8f0;
  }

  .community-link {
    background: transparent;
    color: #243788;
    border-color: #243788;
  }

  .community-link:hover {
    background: #243788;
    color: white;
  }

  :global(.dark) .community-link {
    color: #e2e8f0;
    border-color: #64748b;
  }

  :global(.dark) .community-link:hover {
    background: #64748b;
    color: #0f172a;
    border-color: #64748b;
  }

  /* Focus styles for dropdown elements */
  .topic-link-compact:focus,
  .view-all-link:focus,
  .community-link:focus {
    outline: 3px solid #243788;
    outline-offset: 2px;
  }

  :global(.dark) .topic-link-compact:focus,
  :global(.dark) .view-all-link:focus,
  :global(.dark) .community-link:focus {
    outline-color: #e2e8f0;
  }

  /* Secondary Navigation */
  .nav-secondary {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-shrink: 0;
  }

  .search-toggle {
    background: none;
    border: 2px solid transparent;
    color: #64748b;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0;
    transition: all 0.3s ease;
    font-family: "Space Grotesk", sans-serif;
  }

  .search-toggle:hover {
    background: #f8fafc;
    color: #243788;
    border-color: #243788;
    transform: translateY(-1px);
  }

  :global(.dark) .search-toggle {
    color: #94a3b8;
  }

  :global(.dark) .search-toggle:hover {
    background: #334155;
    color: #b4bce1;
    border-color: #b4bce1;
  }

  /* Sign In Button */
  .signin-button {
    font-family: "Space Grotesk", sans-serif;
    background: transparent;
    color: #243788;
    text-decoration: none;
    padding: 0.75rem 1.25rem;
    border: 2px solid #243788;
    border-radius: 0;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .signin-button:hover {
    background: #243788;
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(36, 55, 136, 0.25);
  }

  :global(.dark) .signin-button {
    color: #b4bce1;
    border-color: #b4bce1;
  }

  :global(.dark) .signin-button:hover {
    background: #b4bce1;
    color: #0f172a;
  }

  /* Account Dropdown Styles - Simplified */
  .auth-button-container {
    position: relative;
  }

  .account-dropdown {
    position: relative;
  }

  .account-trigger-wrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border: 2px solid #243788;
    border-radius: 0;
    padding: 0.5rem 0.75rem;
    transition: all 0.3s ease;
  }

  .account-trigger-wrapper:hover {
    background: #243788;
    transform: translateY(-1px);
  }

  .account-trigger-wrapper:hover .account-name-link {
    color: white;
  }

  .account-trigger-wrapper:hover .account-dropdown-btn {
    color: white;
  }

  :global(.dark) .account-trigger-wrapper {
    border-color: #b4bce1;
  }

  :global(.dark) .account-trigger-wrapper:hover {
    background: #b4bce1;
  }

  :global(.dark) .account-trigger-wrapper:hover .account-name-link {
    color: #0f172a;
  }

  :global(.dark) .account-trigger-wrapper:hover .account-dropdown-btn {
    color: #0f172a;
  }

  .account-name-link {
    color: #243788;
    text-decoration: none;
    font-family: "Space Grotesk", sans-serif;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: color 0.3s ease;
  }

  :global(.dark) .account-name-link {
    color: #b4bce1;
  }

  .account-name {
    max-width: 80px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .account-dropdown-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: #243788;
    padding: 0;
    display: flex;
    align-items: center;
    transition: color 0.3s ease;
  }

  :global(.dark) .account-dropdown-btn {
    color: #b4bce1;
  }

  .account-arrow {
    transition: transform 0.3s ease;
    flex-shrink: 0;
  }

  .account-dropdown:hover .account-arrow {
    transform: rotate(180deg);
  }

  /* Account Menu - Simplified */
  .account-menu {
    position: absolute;
    top: 100%;
    right: 0;
    background: white;
    border: 2px solid #243788;
    border-radius: 0;
    box-shadow: 0 20px 40px rgba(36, 55, 136, 0.15);
    padding: 0;
    width: 160px;
    display: none;
    transition: all 0.3s ease;
    z-index: 100;
  }

  :global(.dark) .account-menu {
    background: #0f172a;
    border-color: #475569;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
  }

  .account-dropdown:hover .account-menu {
    display: block;
    animation: fadeInUp 0.3s ease;
  }

  .account-menu-content {
    padding: 1rem;
  }

  .account-menu-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    color: #1e293b;
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    background: none;
    border-radius: 0;
    cursor: pointer;
    font-family: inherit;
    width: 100%;
    text-align: left;
  }

  .account-menu-link:hover {
    background: #f8fafc;
    border-color: #243788;
    color: #243788;
  }

  :global(.dark) .account-menu-link {
    color: #e2e8f0;
  }

  :global(.dark) .account-menu-link:hover {
    background: #334155;
    border-color: #b4bce1;
    color: #b4bce1;
  }

  .account-menu-link i {
    width: 16px;
    text-align: center;
  }

  .signout-btn:hover {
    background: #fef2f2 !important;
    border-color: #ef4444 !important;
    color: #ef4444 !important;
  }

  :global(.dark) .signout-btn:hover {
    background: #450a0a !important;
    border-color: #f87171 !important;
    color: #f87171 !important;
  }

  /* Mobile Account Styles - Simplified */
  .mobile-account-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .mobile-account-header {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    background: #f8fafc;
    border: 2px solid #e2e8f0;
  }

  :global(.dark) .mobile-account-header {
    background: #334155;
    border-color: #475569;
  }

  .mobile-account-name-link {
    color: #1e293b;
    text-decoration: none;
    font-family: "Space Grotesk", sans-serif;
    font-size: 0.875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    transition: color 0.3s ease;
  }

  .mobile-account-name-link:hover {
    color: #243788;
  }

  :global(.dark) .mobile-account-name-link {
    color: #f1f5f9;
  }

  :global(.dark) .mobile-account-name-link:hover {
    color: #b4bce1;
  }

  .mobile-account-links {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mobile-account-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    color: #1e293b;
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border: 2px solid #e2e8f0;
    transition: all 0.3s ease;
    background: #f8fafc;
    border-radius: 0;
    cursor: pointer;
    font-family: inherit;
    width: 100%;
    text-align: left;
  }

  .mobile-account-link:hover {
    background: white;
    border-color: #243788;
    color: #243788;
  }

  :global(.dark) .mobile-account-link {
    color: #e2e8f0;
    background: #334155;
    border-color: #475569;
  }

  :global(.dark) .mobile-account-link:hover {
    background: #475569;
    border-color: #b4bce1;
    color: #b4bce1;
  }

  .mobile-signout-btn:hover {
    background: #fef2f2 !important;
    border-color: #ef4444 !important;
    color: #ef4444 !important;
  }

  :global(.dark) .mobile-signout-btn:hover {
    background: #450a0a !important;
    border-color: #f87171 !important;
    color: #f87171 !important;
  }

  /* Subscribe Button */
  .subscribe-button {
    font-family: "Space Grotesk", sans-serif;
    background: #243788;
    color: white;
    text-decoration: none;
    padding: 0.75rem 1.5rem;
    border: 2px solid #243788;
    border-radius: 0;
    font-size: 0.875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(36, 55, 136, 0.2);
    position: relative;
    overflow: hidden;
  }

  .subscribe-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  .subscribe-button:hover::before {
    left: 100%;
  }

  .subscribe-button:hover {
    background: white;
    color: #243788;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(36, 55, 136, 0.3);
  }

  :global(.dark) .subscribe-button {
    background: #b4bce1;
    color: #0f172a;
    border-color: #b4bce1;
  }

  :global(.dark) .subscribe-button:hover {
    background: transparent;
    color: #b4bce1;
  }

  /* Mobile Auth Section */
  .mobile-auth-section {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 2px solid #e2e8f0;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  :global(.dark) .mobile-auth-section {
    border-top-color: #334155;
  }

  .mobile-signin-button {
    font-family: "Space Grotesk", sans-serif;
    display: block;
    width: 100%;
    background: transparent;
    color: #243788;
    text-decoration: none;
    padding: 1rem 1.5rem;
    border: 2px solid #243788;
    border-radius: 0;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    text-align: center;
    transition: all 0.3s ease;
  }

  .mobile-signin-button:hover {
    background: #243788;
    color: white;
    transform: translateY(-1px);
  }

  :global(.dark) .mobile-signin-button {
    color: #b4bce1;
    border-color: #b4bce1;
  }

  :global(.dark) .mobile-signin-button:hover {
    background: #b4bce1;
    color: #0f172a;
  }

  .mobile-subscribe-button {
    font-family: "Space Grotesk", sans-serif;
    display: block;
    width: 100%;
    background: #243788;
    color: white;
    text-decoration: none;
    padding: 1rem 1.5rem;
    border: 2px solid #243788;
    border-radius: 0;
    font-size: 0.875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    text-align: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(36, 55, 136, 0.2);
  }

  .mobile-subscribe-button:hover {
    background: white;
    color: #243788;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(36, 55, 136, 0.3);
  }

  :global(.dark) .mobile-subscribe-button {
    background: #b4bce1;
    color: #0f172a;
    border-color: #b4bce1;
  }

  :global(.dark) .mobile-subscribe-button:hover {
    background: transparent;
    color: #b4bce1;
  }

  /* Mobile Menu Button */
  .mobile-menu-button {
    background: none;
    border: 2px solid transparent;
    color: #64748b;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0;
    transition: all 0.3s ease;
  }

  .mobile-menu-button:hover {
    background: #f8fafc;
    color: #243788;
    border-color: #243788;
  }

  :global(.dark) .mobile-menu-button {
    color: #94a3b8;
  }

  :global(.dark) .mobile-menu-button:hover {
    background: #334155;
    color: #b4bce1;
    border-color: #b4bce1;
  }

  /* MOBILE MENU */
  .mobile-menu {
    background: white;
    border-top: 2px solid #243788;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.95);
    border-radius: 0;
    max-height: 70vh;
    overflow-y: auto;
  }

  :global(.dark) .mobile-menu {
    background: rgba(15, 23, 42, 0.95);
    border-top-color: #b4bce1;
  }

  .mobile-menu-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .mobile-nav-link {
    font-family: "Space Grotesk", sans-serif;
    padding: 1rem;
    color: #1e293b;
    text-decoration: none;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border: 2px solid transparent;
    border-radius: 0;
    transition: all 0.3s ease;
    text-align: center;
  }

  .mobile-nav-link:hover {
    background: #f8fafc;
    color: #243788;
    border-color: #243788;
    transform: translateY(-1px);
  }

  :global(.dark) .mobile-nav-link {
    color: #e2e8f0;
  }

  :global(.dark) .mobile-nav-link:hover {
    background: #334155;
    color: #b4bce1;
    border-color: #b4bce1;
  }

  /* Mobile Topics */
  .mobile-topics {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 2px solid #e2e8f0;
  }

  :global(.dark) .mobile-topics {
    border-top-color: #334155;
  }

  .mobile-topics-title {
    font-family: "Space Grotesk", sans-serif;
    font-weight: 700;
    color: #243788;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 0.875rem;
    margin-bottom: 1rem;
    display: block;
    text-align: center;
  }

  :global(.dark) .mobile-topics-title {
    color: #b4bce1;
  }

  .mobile-topics-compact {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .mobile-topic-compact {
    font-family: "Space Grotesk", sans-serif;
    display: block;
    padding: 0.625rem 0.75rem;
    color: #1e293b;
    text-decoration: none;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border: 2px solid transparent;
    border-radius: 0;
    transition: all 0.3s ease;
    background: #f8fafc;
    text-align: center;
  }

  :global(.dark) .mobile-topic-compact {
    color: #e2e8f0;
    background: #334155;
  }

  .mobile-topic-compact:hover {
    border-color: #243788;
    background: white;
    color: #243788;
  }

  :global(.dark) .mobile-topic-compact:hover {
    border-color: #b4bce1;
    background: #475569;
    color: #b4bce1;
  }

  .mobile-topic-footer {
    display: flex;
    gap: 0.75rem;
    padding-top: 1rem;
    border-top: 1px solid #e2e8f0;
  }

  :global(.dark) .mobile-topic-footer {
    border-top-color: #475569;
  }

  .mobile-view-all,
  .mobile-community {
    font-family: "Space Grotesk", sans-serif;
    flex: 1;
    padding: 0.75rem;
    text-decoration: none;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border: 2px solid;
    border-radius: 0;
    transition: all 0.3s ease;
    text-align: center;
    font-size: 0.8125rem;
  }

  .mobile-view-all {
    background: #243788;
    color: white;
    border-color: #243788;
  }

  .mobile-view-all:hover {
    background: white;
    color: #243788;
  }

  .mobile-community {
    background: transparent;
    color: #243788;
    border-color: #243788;
  }

  .mobile-community:hover {
    background: #243788;
    color: white;
  }

  :global(.dark) .mobile-view-all {
    background: #b4bce1;
    color: #1e293b;
    border-color: #b4bce1;
  }

  :global(.dark) .mobile-view-all:hover {
    background: transparent;
    color: #b4bce1;
  }

  :global(.dark) .mobile-community {
    color: #b4bce1;
    border-color: #b4bce1;
  }

  :global(.dark) .mobile-community:hover {
    background: #b4bce1;
    color: #1e293b;
  }

  .hidden {
    display: none;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .dropdown-menu-compact {
      width: 420px;
    }
    
    .topics-list {
      grid-template-columns: 1fr;
      gap: 0.5rem;
    }
  }

  @media (max-width: 768px) {
    .nav-container {
      height: 4rem;
      padding: 0 1rem;
    }

    .nav-primary {
      display: none;
    }

    .nav-secondary {
      gap: 0.75rem;
    }

    .subscribe-button {
      padding: 0.5rem 1rem;
      font-size: 0.8125rem;
    }
  }

  @media (max-width: 640px) {
    .nav-container {
      height: 3.5rem;
      padding: 0 0.75rem;
    }

    .subscribe-button {
      padding: 0.375rem 0.75rem;
      font-size: 0.75rem;
    }

    .mobile-menu-content {
      padding: 1rem 0.75rem;
    }

    .mobile-topics-compact {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 380px) {
    .subscribe-button {
      display: none;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
      animation: none !important;
    }
  }

  /* Focus styles */
  .nav-link:focus,
  .search-toggle:focus,
  .subscribe-button:focus,
  .mobile-menu-button:focus,
  .account-name-link:focus,
  .account-dropdown-btn:focus {
    outline: 3px solid #243788;
    outline-offset: 2px;
  }

  :global(.dark) .nav-link:focus,
  :global(.dark) .search-toggle:focus,
  :global(.dark) .subscribe-button:focus,
  :global(.dark) .mobile-menu-button:focus,
  :global(.dark) .account-name-link:focus,
  :global(.dark) .account-dropdown-btn:focus {
    outline-color: #b4bce1;
  }
</style>

<script>
  import { auth } from "../../lib/auth.js";

  document.addEventListener("DOMContentLoaded", async () => {
    console.log("🔄 Header: Initializing auth state...");
    
    try {
      // Initialize auth first
      await auth.initialize();
      
      // Set up auth state listener with better error handling
      const unsubscribe = auth.onAuthChange((user, profile) => {
        try {
          updateAuthUI(user, profile);
        } catch (error) {
          console.error("❌ Header: Error updating auth UI:", error);
        }
      });

      // Cleanup on page unload
      window.addEventListener("beforeunload", () => {
        try {
          unsubscribe();
        } catch (error) {
          console.error("❌ Header: Error during cleanup:", error);
        }
      });

    } catch (error) {
      console.error("❌ Header: Auth initialization failed:", error);
      // Show signin button as fallback
      showSigninButton();
    }

    function updateAuthUI(user: any, profile: any) {
      const signinBtn = document.getElementById('signin-btn');
      const accountDropdown = document.getElementById('account-dropdown');
      const mobileSigninSection = document.getElementById('mobile-signin-section');
      const mobileAccountSection = document.getElementById('mobile-account-section');

      if (user) {
        console.log('✅ Header: User signed in:', user.email);
        
        // Hide sign in button, show account dropdown
        if (signinBtn) signinBtn.style.display = 'none';
        if (accountDropdown) accountDropdown.style.display = 'block';
        if (mobileSigninSection) mobileSigninSection.style.display = 'none';
        if (mobileAccountSection) mobileAccountSection.style.display = 'flex';
        
        // Update account info
        updateAccountInfo(user, profile);
      } else {
        console.log('❌ Header: User not signed in');
        showSigninButton();
      }
    }

    function showSigninButton() {
      const signinBtn = document.getElementById('signin-btn');
      const accountDropdown = document.getElementById('account-dropdown');
      const mobileSigninSection = document.getElementById('mobile-signin-section');
      const mobileAccountSection = document.getElementById('mobile-account-section');

      // Show sign in button, hide account dropdown
      if (signinBtn) signinBtn.style.display = 'inline-flex';
      if (accountDropdown) accountDropdown.style.display = 'none';
      if (mobileSigninSection) mobileSigninSection.style.display = 'flex';
      if (mobileAccountSection) mobileAccountSection.style.display = 'none';
    }

    function updateAccountInfo(user: any, profile: any) {
      try {
        const displayName = auth.getDisplayName();

        // Update desktop dropdown
        const accountName = document.getElementById('account-name');
        if (accountName) {
          accountName.textContent = displayName.length > 6 ? displayName.substring(0, 6) + '...' : displayName;
        }

        // Update mobile dropdown
        const mobileAccountName = document.getElementById('mobile-account-name');
        if (mobileAccountName) {
          mobileAccountName.textContent = displayName;
        }
      } catch (error) {
        console.error("❌ Header: Error updating account info:", error);
      }
    }

    // Setup event listeners
    setupEventListeners();
  });

  function setupEventListeners() {
    try {
      // Account dropdown functionality
      const accountDropdownBtn = document.getElementById('account-dropdown-btn');
      const accountMenu = document.getElementById('account-menu');
      const accountDropdown = document.getElementById('account-dropdown');

      if (accountDropdownBtn && accountMenu && accountDropdown) {
        let hoverTimeout: NodeJS.Timeout;

        const showAccountMenu = () => {
          clearTimeout(hoverTimeout);
          accountMenu.style.display = 'block';
          accountDropdownBtn.setAttribute('aria-expanded', 'true');
        };

        const hideAccountMenu = () => {
          hoverTimeout = setTimeout(() => {
            accountMenu.style.display = 'none';
            accountDropdownBtn.setAttribute('aria-expanded', 'false');
          }, 300);
        };

        accountDropdown.addEventListener('mouseenter', showAccountMenu);
        accountDropdown.addEventListener('mouseleave', hideAccountMenu);
      }

      // Sign out functionality with better error handling
      const signoutBtn = document.getElementById('signout-btn');
      const mobileSignoutBtn = document.getElementById('mobile-signout-btn');

      const handleSignout = async (button: HTMLElement) => {
        try {
          // Show loading state
          const originalText = button.textContent;
          button.textContent = 'Signing out...';
          button.setAttribute('disabled', 'true');

          const result = await auth.signOut();
          
          if (result.success) {
            console.log('✅ Header: User signed out successfully');
            // Force immediate redirect
            window.location.href = '/';
          } else {
            console.error('❌ Header: Sign out failed:', result.error);
            // Force redirect anyway
            window.location.href = '/';
          }
        } catch (error) {
          console.error('❌ Header: Error signing out:', error);
          // Force redirect anyway
          window.location.href = '/';
        }
      };

      signoutBtn?.addEventListener('click', (e) => {
        e.preventDefault();
        handleSignout(signoutBtn);
      });

      mobileSignoutBtn?.addEventListener('click', (e) => {
        e.preventDefault();
        handleSignout(mobileSignoutBtn);
      });

      // Close account menu when clicking outside
      document.addEventListener('click', (e) => {
        const target = e.target as Node;
        if (accountMenu && accountDropdown && !accountDropdown.contains(target)) {
          accountMenu.style.display = 'none';
          accountDropdownBtn?.setAttribute('aria-expanded', 'false');
        }
      });

      // Setup existing mobile menu and dropdown functionality
      setupExistingEventListeners();

    } catch (error) {
      console.error("❌ Header: Error setting up event listeners:", error);
    }
  }

  function setupExistingEventListeners() {
    try {
      // Mobile menu toggle
      const mobileMenuButton = document.querySelector(".mobile-menu-button") as HTMLButtonElement;
      const mobileMenu = document.querySelector(".mobile-menu") as HTMLElement;

      if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener("click", () => {
          mobileMenu.classList.toggle("hidden");
          const isExpanded = !mobileMenu.classList.contains("hidden");
          mobileMenuButton.setAttribute("aria-expanded", isExpanded.toString());

          const icon = mobileMenuButton.querySelector("svg") as SVGElement;
          if (icon) {
            if (isExpanded) {
              icon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>`;
            } else {
              icon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>`;
            }
          }
        });
      }

      // Topics dropdown functionality
      const dropdownTrigger = document.querySelector(".dropdown-trigger") as HTMLButtonElement;
      const dropdownMenu = document.querySelector(".dropdown-menu-compact") as HTMLElement;
      const navDropdown = document.querySelector(".nav-dropdown") as HTMLElement;

      if (dropdownTrigger && dropdownMenu && navDropdown) {
        let hoverTimeout: NodeJS.Timeout;

        const showDropdown = () => {
          clearTimeout(hoverTimeout);
          dropdownMenu.style.display = "block";
          dropdownTrigger.setAttribute("aria-expanded", "true");
        };

        const hideDropdown = () => {
          hoverTimeout = setTimeout(() => {
            dropdownMenu.style.display = "none";
            dropdownTrigger.setAttribute("aria-expanded", "false");
          }, 300);
        };

        navDropdown.addEventListener("mouseenter", showDropdown);
        navDropdown.addEventListener("mouseleave", hideDropdown);
      }

      // Search functionality
      const searchToggle = document.querySelector(".search-toggle");
      if (searchToggle) {
        searchToggle.addEventListener("click", () => {
          window.location.href = "/search";
        });
      }

      // Add active state to current page navigation
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll(".nav-link, .mobile-nav-link");

      navLinks.forEach((link) => {
        const href = link.getAttribute("href");
        if (href && currentPath.startsWith(href) && href !== "/" && href !== "#") {
          link.classList.add("active");
        }
      });

    } catch (error) {
      console.error("❌ Header: Error setting up existing event listeners:", error);
    }
  }
</script>