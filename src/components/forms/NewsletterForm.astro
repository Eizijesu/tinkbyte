---
// src/components/forms/NewsletterForm.astro
export interface Props {
  variant?: "inline" | "modal" | "sidebar" | "hero" | "minimal" | "footer";
  size?: "small" | "medium" | "large";
  title?: string;
  description?: string;
  placeholder?: string;
  buttonText?: string;
  showFeatures?: boolean;
  convertKitFormId?: string;
  className?: string;
}

const {
  variant = "inline",
  size = "medium",
  title = "Get TinkStacks Weekly",
  description = "Curated tech insights and practical analysis delivered to your inbox. No hype, just substance.",
  placeholder = "Enter your email address",
  buttonText = "Subscribe",
  showFeatures = false,
  convertKitFormId = "8ebf39e7b2",
  className = "",
} = Astro.props;

const sizeClasses = {
  small: "text-sm",
  medium: "text-base",
  large: "text-lg",
};

const variantStyles = {
  inline:
    "bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-xl p-6",
  modal: "bg-white dark:bg-zinc-900 rounded-xl p-8 shadow-2xl",
  sidebar:
    "bg-gradient-to-br from-zinc-900 via-zinc-800 to-zinc-900 text-white rounded-xl p-6",
  hero: "bg-gradient-to-br from-zinc-900 via-zinc-800 to-zinc-900 text-white rounded-xl p-8 lg:p-12",
  minimal: "bg-zinc-50 dark:bg-zinc-800/50 rounded-xl p-6",
  footer:
    "bg-zinc-800/50 backdrop-blur-sm border border-zinc-700/50 rounded-xl p-6",
};

// Magazine-style features
const features = [
  {
    icon: "fas fa-brain",
    title: "Deep Analysis",
    description: "Research-driven insights",
    color: "blue",
  },
  {
    icon: "fas fa-rocket",
    title: "Product Focus",
    description: "Builder-first content",
    color: "purple",
  },
  {
    icon: "fas fa-users",
    title: "12,500+ Builders",
    description: "Join the community",
    color: "green",
  },
];
---

<div
  class={`newsletter-form relative overflow-hidden ${variantStyles[variant]} ${className}`}
>
  <!-- Background decorations for gradient variants -->
  {
    (variant === "sidebar" || variant === "hero" || variant === "footer") && (
      <div class="absolute inset-0 overflow-hidden rounded-xl">
        <div class="absolute top-0 right-0 w-32 h-32 bg-blue-500/10 rounded-full blur-2xl animate-pulse" />
        <div
          class="absolute bottom-0 left-0 w-24 h-24 bg-purple-500/10 rounded-full blur-xl animate-pulse"
          style="animation-delay: 1s;"
        />
      </div>
    )
  }

  <div class="relative z-10">
    <!-- Header -->
    <div class="mb-6">
      {
        (variant === "sidebar" ||
          variant === "hero" ||
          variant === "footer") && (
          <div class="flex items-center gap-2 mb-4">
            <span class="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
            <span class="text-sm font-semibold uppercase tracking-wider text-green-400">
              Weekly Newsletter
            </span>
          </div>
        )
      }

      <h3
        class={`font-bold mb-3 font-space-grotesk ${
          variant === "hero"
            ? "text-3xl lg:text-4xl"
            : variant === "sidebar"
              ? "text-xl"
              : variant === "footer"
                ? "text-xl"
                : "text-2xl"
        } ${
          variant === "sidebar" || variant === "hero" || variant === "footer"
            ? "text-white"
            : "text-zinc-900 dark:text-zinc-100"
        }`}
      >
        {title}
      </h3>

      <p
        class={`leading-relaxed ${sizeClasses[size]} ${
          variant === "sidebar" || variant === "hero" || variant === "footer"
            ? "text-zinc-300"
            : "text-zinc-600 dark:text-zinc-400"
        }`}
      >
        {description}
      </p>
    </div>

    <!-- ConvertKit Form -->
    <form
      action={`https://app.convertkit.com/forms/${convertKitFormId}/subscriptions`}
      method="post"
      data-sv-form={convertKitFormId}
      data-uid={convertKitFormId}
      data-format="inline"
      data-version="5"
      class="newsletter-signup-form"
    >
      <div
        class={`flex gap-3 ${variant === "hero" ? "flex-col sm:flex-row" : "flex-col sm:flex-row"}`}
      >
        <input
          type="email"
          name="email_address"
          placeholder={placeholder}
          required
          class={`flex-1 px-4 py-3 rounded-lg border focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200 ${
            variant === "sidebar" || variant === "hero" || variant === "footer"
              ? "bg-white/10 backdrop-blur-sm border-white/20 text-white placeholder-zinc-300 focus:bg-white/20 focus:border-white/40"
              : "bg-white dark:bg-zinc-800 border-zinc-300 dark:border-zinc-600 text-zinc-900 dark:text-zinc-100 placeholder-zinc-500 dark:placeholder-zinc-400 focus:border-zinc-500 dark:focus:border-zinc-400"
          } ${sizeClasses[size]}`}
        />

        <button
          type="submit"
          class={`px-6 py-3 font-semibold rounded-lg transition-all duration-200 hover:scale-105 uppercase tracking-wider whitespace-nowrap ${
            variant === "sidebar" || variant === "hero" || variant === "footer"
              ? "bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700 hover:shadow-xl"
              : "bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 hover:bg-zinc-800 dark:hover:bg-zinc-200 hover:shadow-lg"
          } ${sizeClasses[size]}`}
        >
          {buttonText}
        </button>
      </div>

      <!-- Hidden ConvertKit fields -->
      <input type="hidden" name="utf8" value="âœ“" />
      <input type="hidden" name="authenticity_token" value="" />
    </form>

    <!-- Features (Magazine Style) -->
    {
      showFeatures && (
        <div class="mt-8 grid grid-cols-1 sm:grid-cols-3 gap-6">
          {features.map((feature) => (
            <div class="flex flex-col items-center text-center group">
              <div
                class={`w-12 h-12 rounded-full flex items-center justify-center mb-3 transition-all duration-200 group-hover:scale-110 ${
                  variant === "sidebar" ||
                  variant === "hero" ||
                  variant === "footer"
                    ? "bg-white/10 backdrop-blur-sm"
                    : "bg-zinc-100 dark:bg-zinc-800"
                }`}
              >
                <i
                  class={`${feature.icon} ${
                    feature.color === "blue"
                      ? "text-blue-500"
                      : feature.color === "purple"
                        ? "text-purple-500"
                        : "text-green-500"
                  } text-lg`}
                />
              </div>
              <h4
                class={`text-sm font-semibold mb-1 uppercase tracking-wide ${
                  variant === "sidebar" ||
                  variant === "hero" ||
                  variant === "footer"
                    ? "text-white"
                    : "text-zinc-900 dark:text-zinc-100"
                }`}
              >
                {feature.title}
              </h4>
              <p
                class={`text-xs ${
                  variant === "sidebar" ||
                  variant === "hero" ||
                  variant === "footer"
                    ? "text-zinc-300"
                    : "text-zinc-500 dark:text-zinc-400"
                }`}
              >
                {feature.description}
              </p>
            </div>
          ))}
        </div>
      )
    }

    <!-- Stats Bar (Optional for hero/footer variants) -->
    {
      (variant === "hero" || variant === "footer") && (
        <div class="mt-6 flex items-center justify-center gap-8 text-center">
          <div>
            <div class="text-2xl font-bold text-white">12.5K+</div>
            <div class="text-xs text-zinc-300 uppercase tracking-wide">
              Subscribers
            </div>
          </div>
          <div class="w-px h-8 bg-white/20" />
          <div>
            <div class="text-2xl font-bold text-white">45</div>
            <div class="text-xs text-zinc-300 uppercase tracking-wide">
              Countries
            </div>
          </div>
          <div class="w-px h-8 bg-white/20" />
          <div>
            <div class="text-2xl font-bold text-white">0</div>
            <div class="text-xs text-zinc-300 uppercase tracking-wide">
              Hype
            </div>
          </div>
        </div>
      )
    }

    <!-- Privacy notice -->
    <p
      class={`text-xs mt-6 text-center leading-relaxed ${
        variant === "sidebar" || variant === "hero" || variant === "footer"
          ? "text-zinc-400"
          : "text-zinc-500 dark:text-zinc-400"
      }`}
    >
      No spam, unsubscribe anytime. Read our
      <a
        href="/privacy"
        class={`underline hover:no-underline transition-colors ${
          variant === "sidebar" || variant === "hero" || variant === "footer"
            ? "text-blue-400 hover:text-blue-300"
            : "text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300"
        }`}
      >
        privacy policy
      </a>.
    </p>

    <!-- Success Message Container -->
    <div
      id="newsletter-success"
      class="hidden mt-4 p-4 bg-green-100 dark:bg-green-900/30 border border-green-200 dark:border-green-800 rounded-lg"
    >
      <div class="flex items-center gap-2 text-green-800 dark:text-green-300">
        <i class="fas fa-check-circle"></i>
        <span class="font-medium"
          >Successfully subscribed! Check your email for confirmation.</span
        >
      </div>
    </div>
  </div>
</div>

<style>
  .newsletter-form {
    font-family: "Space Grotesk", sans-serif;
  }

  /* ConvertKit success message styling */
  :global(.formkit-alert-success) {
    background-color: rgb(34 197 94);
    color: white;
    padding: 1rem;
    border-radius: 0.75rem;
    margin-top: 1rem;
    border: none;
    font-family: "Space Grotesk", sans-serif;
  }

  /* Loading state */
  .newsletter-signup-form.loading button {
    opacity: 0.7;
    cursor: not-allowed;
    transform: scale(0.98);
  }

  .newsletter-signup-form.loading input {
    pointer-events: none;
  }

  /* Enhanced hover effects */
  .newsletter-form:hover .animate-pulse {
    animation-duration: 1s;
  }

  /* Smooth transitions for all interactive elements */
  .newsletter-form input,
  .newsletter-form button {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Focus states */
  .newsletter-form input:focus {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .dark .newsletter-form input:focus {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Enhanced form submission handling
    document.querySelectorAll(".newsletter-signup-form").forEach((form) => {
      form.addEventListener("submit", function (e) {
        const button = this.querySelector(
          'button[type="submit"]'
        ) as HTMLButtonElement;
        const input = this.querySelector(
          'input[type="email"]'
        ) as HTMLInputElement;
        const originalText = button.textContent;

        // Validate email
        const email = input.value.trim();
        if (!email || !email.includes("@")) {
          input.focus();
          return;
        }

        // Loading state
        button.textContent = "Subscribing...";
        button.disabled = true;
        this.classList.add("loading");

        // Add success handling
        const handleSuccess = () => {
          button.textContent = "Subscribed!";
          button.className = button.className.replace(
            /bg-\w+-\d+/g,
            "bg-green-600"
          );

          // Show success message
          const successDiv = document.getElementById("newsletter-success");
          if (successDiv) {
            successDiv.classList.remove("hidden");
          }

          // Reset form
          input.value = "";

          // Reset button after delay
          setTimeout(() => {
            button.textContent = originalText || "Subscribe";
            button.disabled = false;
            button.className = button.className.replace(
              "bg-green-600",
              "bg-zinc-900"
            );
            this.classList.remove("loading");
          }, 3000);
        };

        // Listen for ConvertKit success
        const checkForSuccess = () => {
          const successMessage = document.querySelector(
            ".formkit-alert-success"
          );
          if (successMessage) {
            handleSuccess();
          } else {
            // Reset if no success after 5 seconds
            setTimeout(() => {
              if (button.textContent === "Subscribing...") {
                button.textContent = originalText || "Subscribe";
                button.disabled = false;
                this.classList.remove("loading");
              }
            }, 5000);
          }
        };

        // Check for success message after form submission
        setTimeout(checkForSuccess, 1000);
      });
    });

    // Form validation enhancement
    document.querySelectorAll('input[type="email"]').forEach((input) => {
      input.addEventListener("blur", function () {
        const email = this.value.trim();
        if (email && !email.includes("@")) {
          this.classList.add("border-red-500", "focus:border-red-500");
          this.classList.remove("border-zinc-300", "dark:border-zinc-600");
        } else {
          this.classList.remove("border-red-500", "focus:border-red-500");
          this.classList.add("border-zinc-300", "dark:border-zinc-600");
        }
      });
    });
  });
</script>
