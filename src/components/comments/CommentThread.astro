---
// src/components/comments/CommentThread.astro
import {
  formatDate,
  formatContent,
  getUserAvatar,
  getReactionIcon,
  canReply,
  shouldCollapse,
  getThreadColor,
} from "../../lib/helpers/commentHelpers";
import { COMMENT_CONFIG } from "../../lib/config/comments";

const {
  comment,
  currentUser,
  currentUserProfile,
  maxDepth = COMMENT_CONFIG.maxThreadDepth,
} = Astro.props;

// User profile and display information
const userProfile = comment.profiles || comment.user_profile || comment.profile;
const displayName =
  userProfile?.display_name ||
  comment.display_name ||
  comment.guest_name ||
  "Anonymous";
const isAdmin = userProfile?.is_admin || comment.is_admin || false;

// Comment permissions and state
const canEdit =
  currentUser &&
  (comment.user_id === currentUser.id || currentUserProfile?.is_admin) &&
  !comment.is_deleted;

const isWithinEditWindow = () => {
  const commentDate = new Date(comment.created_at);
  const now = new Date();
  const hoursDiff = (now.getTime() - commentDate.getTime()) / (1000 * 60 * 60);
  return hoursDiff <= COMMENT_CONFIG.editWindow;
};

const canUserEdit = canEdit && isWithinEditWindow();
const canDelete =
  canEdit &&
  (currentUserProfile?.is_admin || comment.user_id === currentUser?.id);

// Thread and interaction state
const reactionCounts = comment.reaction_counts || {};
const threadColor = getThreadColor(comment.thread_level);
const canUserReply = canReply(comment); // Fixed: only passing 1 argument
const isCollapsed = shouldCollapse(comment);
const hasReplies = comment.replies && comment.replies.length > 0;
const hasMoreReplies =
  comment.has_more_replies ||
  (comment.reply_count || 0) > COMMENT_CONFIG.repliesPerComment;

// User's current reaction
const userReaction = comment.user_reaction || null;
---

<div
  class="comment-thread"
  data-comment-id={comment.id}
  data-thread-level={comment.thread_level}
  data-user-id={comment.user_id}
>
  <div
    class={`comment-item ${isCollapsed ? "collapsed" : ""} ${comment.is_pinned ? "pinned" : ""}`}
    data-thread-level={comment.thread_level}
    style={comment.thread_level > 0 ? `border-left-color: ${threadColor}` : ""}
  >
    <!-- Comment Avatar -->
    <div class="comment-avatar">
      <img
        src={getUserAvatar(userProfile)}
        alt={displayName}
        class="avatar-image"
        loading="lazy"
      />
      {
        comment.is_pinned && (
          <div class="pinned-indicator" title="Pinned comment">
            <svg width="12" height="12" viewBox="0 0 24 24" fill="currentColor">
              <path d="M16 12V4a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v8H6l6 6 6-6h-2z" />
            </svg>
          </div>
        )
      }
    </div>

    <div class="comment-content">
      <!-- Comment Header -->
      <div class="comment-header">
        <div class="comment-meta">
          <span class={`author-name ${isAdmin ? "admin-badge" : ""}`}>
            {displayName}
          </span>

          {
            userProfile?.reputation_score && (
              <span
                class="reputation-score"
                title={`Reputation: ${userProfile.reputation_score}`}
              >
                {userProfile.reputation_score}
              </span>
            )
          }

          <span
            class="comment-time"
            title={new Date(comment.created_at).toLocaleString()}
          >
            {formatDate(comment.created_at)}
          </span>

          {
            comment.is_edited && (
              <button
                class="edit-history-btn"
                data-comment-id={comment.id}
                title="View edit history"
              >
                <svg
                  width="12"
                  height="12"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" />
                  <circle cx="12" cy="12" r="3" />
                </svg>
                edited
              </button>
            )
          }

          {
            comment.thread_level > 0 && (
              <span
                class="thread-level-badge"
                style={`background-color: ${threadColor}`}
              >
                Level {comment.thread_level}
              </span>
            )
          }

          {
            comment.reply_count > 0 && (
              <span class="reply-count-badge">
                {comment.reply_count}{" "}
                {comment.reply_count === 1 ? "reply" : "replies"}
              </span>
            )
          }
        </div>

        <!-- Comment Actions Menu -->
        <div class="comment-actions-menu">
          {
            canUserEdit && (
              <div class="comment-edit-controls">
                <button
                  class="edit-comment-btn"
                  data-comment-id={comment.id}
                  title="Edit comment"
                  aria-label="Edit comment"
                >
                  <svg
                    width="14"
                    height="14"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                  >
                    <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
                    <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" />
                  </svg>
                </button>

                {canDelete && (
                  <button
                    class="delete-comment-btn"
                    data-comment-id={comment.id}
                    title="Delete comment"
                    aria-label="Delete comment"
                  >
                    <svg
                      width="14"
                      height="14"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                    >
                      <polyline points="3,6 5,6 21,6" />
                      <path d="M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2V6" />
                    </svg>
                  </button>
                )}
              </div>
            )
          }

          <button
            class="menu-btn"
            data-comment-id={comment.id}
            aria-label="More options"
            aria-expanded="false"
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <circle cx="12" cy="12" r="1"></circle>
              <circle cx="19" cy="12" r="1"></circle>
              <circle cx="5" cy="12" r="1"></circle>
            </svg>
          </button>
        </div>
      </div>

      <!-- Comment Body -->
      <div class="comment-body">
        {
          comment.reply_to_author && (
            <div class="reply-context">
              <span class="reply-indicator">â†³ Replying to</span>
              <span class="reply-author">{comment.reply_to_author}</span>
              {comment.reply_to_content && (
                <blockquote class="reply-quote">
                  {comment.reply_to_content.substring(0, 100)}
                  {comment.reply_to_content.length > 100 && "..."}
                </blockquote>
              )}
            </div>
          )
        }

        <div class="comment-text" set:html={formatContent(comment.content)} />

        {
          comment.edit_reason && (
            <div class="edit-reason">
              <small>Edit reason: {comment.edit_reason}</small>
            </div>
          )
        }
      </div>

      <!-- Comment Footer -->
      <div class="comment-footer">
        <!-- Reactions -->
        <div class="comment-reactions">
          {
            ["helpful", "insightful", "great", "love", "thinking"].map(
              (reaction) => (
                <button
                  class={`reaction-btn ${userReaction === reaction ? "active" : ""}`}
                  data-reaction={reaction}
                  data-comment-id={comment.id}
                  title={`React with ${reaction}`}
                  aria-label={`React with ${reaction}`}
                >
                  <span class="reaction-emoji">
                    {getReactionIcon(reaction)}
                  </span>
                  <span class="reaction-count">
                    {reactionCounts[reaction] || 0}
                  </span>
                </button>
              )
            )
          }
        </div>

        <!-- Actions -->
        <div class="comment-actions">
          {
            canUserReply && (
              <button
                class="inline-reply-btn"
                data-comment-id={comment.id}
                data-author={displayName}
                data-thread-level={comment.thread_level}
                aria-label="Reply to comment"
              >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z" />
                </svg>
                Reply
              </button>
            )
          }

          <button
            class={`bookmark-btn ${comment.is_bookmarked ? "bookmarked" : ""}`}
            data-comment-id={comment.id}
            title={comment.is_bookmarked
              ? "Remove bookmark"
              : "Bookmark comment"}
            aria-label={comment.is_bookmarked
              ? "Remove bookmark"
              : "Bookmark comment"}
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill={comment.is_bookmarked ? "currentColor" : "none"}
              stroke="currentColor"
              stroke-width="2"
            >
              <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"
              ></path>
            </svg>
          </button>

          {
            hasReplies && (
              <button
                class="collapse-thread-btn"
                data-comment-id={comment.id}
                aria-label={isCollapsed ? "Expand thread" : "Collapse thread"}
              >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <polyline
                    points={isCollapsed ? "9,18 15,12 9,6" : "6,9 12,15 18,9"}
                  />
                </svg>
                {isCollapsed ? "Expand" : "Collapse"}
              </button>
            )
          }

          <button
            class="share-btn"
            data-comment-id={comment.id}
            title="Share comment"
            aria-label="Share comment"
          >
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path>
              <polyline points="16,6 12,2 8,6"></polyline>
              <line x1="12" y1="2" x2="12" y2="15"></line>
            </svg>
          </button>
        </div>
      </div>

      <!-- Thread Controls -->
      {
        (hasReplies || hasMoreReplies) && (
          <div class="thread-controls">
            {hasMoreReplies && (
              <button
                class="load-more-replies-btn"
                data-comment-id={comment.id}
                data-page="1"
                aria-label="Load more replies"
              >
                <div class="loading-spinner" style="display: none;">
                  <svg
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                  >
                    <path d="M21 12a9 9 0 11-6.219-8.56" />
                  </svg>
                </div>
                Load more replies (
                {(comment.reply_count || 0) - COMMENT_CONFIG.repliesPerComment}{" "}
                remaining)
              </button>
            )}

            {comment.thread_level >= COMMENT_CONFIG.maxThreadDepth - 1 && (
              <div class="continue-thread">
                <span>Maximum depth reached. </span>
                <a
                  href={`/thread/${comment.id}`}
                  class="continue-thread-btn"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  Continue this discussion â†’
                </a>
              </div>
            )}
          </div>
        )
      }
    </div>
  </div>

  <!-- Inline Reply Form Container (initially hidden) -->
  <div
    class="inline-reply-container"
    data-comment-id={comment.id}
    style="display: none;"
  >
  </div>

  <!-- Replies -->
  {
    hasReplies && (
      <div
        class="comment-replies"
        data-parent-id={comment.id}
        style={isCollapsed ? "display: none;" : ""}
      >
        {comment.replies.map((reply) => (
          <Astro.self
            comment={reply}
            currentUser={currentUser}
            currentUserProfile={currentUserProfile}
            maxDepth={maxDepth}
          />
        ))}
      </div>
    )
  }
</div>
