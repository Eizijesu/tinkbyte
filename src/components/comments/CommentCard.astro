---
// src/components/comments/CommentCard.astro
import {
  formatDate,
  formatContent,
  getUserAvatar,
  getReactionIcon,
  canUserEdit,
  canUserDelete,
} from "../../lib/helpers/commentHelpers";
import type { CommentWithProfile } from "../../lib/types/comments";

interface Props {
  comment: CommentWithProfile;
  currentUserId?: string;
  isReply?: boolean;
  reactionTypes: string[];
  onReply?: (commentId: string, authorName: string) => void;
}

const { comment, currentUserId, isReply = false, reactionTypes } = Astro.props;

// Determine user profile data
const userProfile = comment.profiles || comment.user_profile;
const displayName =
  userProfile?.display_name || comment.guest_name || "Anonymous";
const isAdmin = userProfile?.is_admin || false;
const avatarUrl = getUserAvatar(userProfile);

// User permissions
const canEdit = canUserEdit(comment, currentUserId);
const canDelete = canUserDelete(comment, currentUserId);
const canReply = (comment.thread_level || 0) < 4;
const isOwner = currentUserId && comment.user_id === currentUserId;

// Thread level styling
const threadLevel = Math.min(comment.thread_level || 0, 4);
---

<div
  class={`comment-card ${isReply ? "reply-card" : ""}`}
  data-comment-id={comment.id}
  data-user-id={comment.user_id || ""}
  data-thread-level={threadLevel}
>
  {isReply && <div class="reply-indicator" />}

  <div class={isReply ? "reply-content" : "comment-content-wrapper"}>
    <!-- Comment Header -->
    <div class="comment-header">
      <div class="comment-user-info">
        <div class="comment-avatar">
          <img src={avatarUrl} alt={displayName} loading="lazy" />
          {isAdmin && <div class="admin-badge">ðŸ‘‘</div>}
        </div>
        <div class="comment-meta">
          <div class="user-details">
            <span class={`username ${isAdmin ? "admin" : ""}`}>
              {displayName}
            </span>
            <span
              class="comment-time"
              title={new Date(comment.created_at).toLocaleString()}
            >
              {formatDate(comment.created_at)}
            </span>
            {
              comment.is_edited && (
                <span
                  class="edit-indicator"
                  title="This comment has been edited"
                >
                  (edited)
                </span>
              )
            }
          </div>
        </div>
      </div>

      <!-- Actions Menu -->
      <div class="comment-actions-menu">
        <button
          class="menu-btn"
          data-comment-id={comment.id}
          title="More options"
          aria-label="Comment options"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <circle cx="12" cy="12" r="1"></circle>
            <circle cx="19" cy="12" r="1"></circle>
            <circle cx="5" cy="12" r="1"></circle>
          </svg>
        </button>

        <div class="dropdown-menu" id={`dropdown-${comment.id}`}>
          {
            canEdit && (
              <button
                class="dropdown-item edit-comment-btn"
                data-comment-id={comment.id}
                aria-label="Edit comment"
              >
                <svg
                  width="14"
                  height="14"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
                  <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" />
                </svg>
                Edit
              </button>
            )
          }

          {
            canDelete && (
              <button
                class="dropdown-item delete-comment-btn"
                data-comment-id={comment.id}
                aria-label="Delete comment"
              >
                <svg
                  width="14"
                  height="14"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <polyline points="3,6 5,6 21,6" />
                  <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" />
                </svg>
                Delete
              </button>
            )
          }

          <button
            class="dropdown-item report-btn"
            data-comment-id={comment.id}
            aria-label="Report comment"
          >
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"
              ></path>
              <line x1="4" y1="22" x2="4" y2="15"></line>
            </svg>
            Report
          </button>
        </div>
      </div>
    </div>

    <!-- Comment Content -->
    <div class="comment-content">
      <div class="comment-text" set:html={formatContent(comment.content)} />
    </div>

    <!-- Comment Footer -->
    <div class="comment-footer">
      <!-- Voting -->
      <div class="comment-voting">
        <button
          class="vote-btn upvote-btn"
          data-comment-id={comment.id}
          title="Upvote"
          aria-label="Upvote comment"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M7 14l5-5 5 5"></path>
          </svg>
          <span class="vote-count">{comment.like_count || 0}</span>
        </button>

        <button
          class="vote-btn downvote-btn"
          data-comment-id={comment.id}
          title="Downvote"
          aria-label="Downvote comment"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M17 10l-5 5-5-5"></path>
          </svg>
        </button>
      </div>

      <!-- Reactions -->
      <div class="comment-reactions">
        {
          reactionTypes.map((reaction) => (
            <button
              class="reaction-btn"
              data-reaction={reaction}
              data-comment-id={comment.id}
              title={`React with ${reaction}`}
              aria-label={`React with ${reaction}`}
            >
              <span class="reaction-emoji">{getReactionIcon(reaction)}</span>
              <span class="reaction-count">
                {comment.reaction_counts?.[reaction] || 0}
              </span>
            </button>
          ))
        }
      </div>

      <!-- Actions -->
      <div class="comment-actions">
        {
          canReply && (
            <button
              class="action-btn reply-btn"
              data-comment-id={comment.id}
              data-author={displayName}
              title="Reply to this comment"
              aria-label="Reply to comment"
            >
              <svg
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z" />
              </svg>
              Reply
            </button>
          )
        }

        <button
          class="action-btn bookmark-btn"
          data-comment-id={comment.id}
          title="Bookmark this comment"
          aria-label="Bookmark comment"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
          </svg>
        </button>

        <button
          class="action-btn copy-btn"
          data-comment-id={comment.id}
          title="Copy comment text"
          aria-label="Copy comment text"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
            ></path>
            <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
          </svg>
        </button>
      </div>
    </div>

    <!-- Inline Reply Container -->
    <div
      class="inline-reply-container"
      data-comment-id={comment.id}
      style="display: none;"
    >
    </div>

    <!-- Inline Edit Container -->
    <div
      class="inline-edit-container"
      data-comment-id={comment.id}
      style="display: none;"
    >
    </div>
  </div>
</div>
