---
// src/components/comments/CommentCard.astro
import {
  formatDate,
  formatContent,
  getUserAvatar,
} from "../../lib/helpers/commentHelpers";
import { REACTION_TYPES } from "../../lib/config/comments";
import type { CommentWithProfile } from "../../lib/types/comments";

interface ReactionType {
  name: string;
  emoji: string;
  label: string;
}

interface Props {
  comment: CommentWithProfile;
  currentUserId?: string;
  isReply?: boolean;
  reactionTypes?: ReactionType[];
}

const {
  comment,
  currentUserId,
  isReply = false,
  reactionTypes = [],
} = Astro.props;

// Determine user profile data
const userProfile = comment.profiles;
const displayName = userProfile?.display_name || "Anonymous";
const isAdmin = userProfile?.is_admin || false;
const avatarUrl = getUserAvatar(userProfile);

// Thread level styling
const threadLevel = Math.min(comment.thread_level || 0, 4);
const canReply = (comment.thread_level || 0) < 4;

// Use the passed reactionTypes or fall back to config with proper typing
const reactions =
  reactionTypes.length > 0
    ? reactionTypes
    : Object.entries(REACTION_TYPES).map(([key, value]: [string, any]) => ({
        name: key,
        emoji: value.emoji,
        label: value.label,
      }));

console.log("CommentCard rendering:", {
  commentId: comment.id,
  userId: comment.user_id,
  displayName,
});
---

<div
  class={`comment-card ${isReply ? "reply-card" : ""}`}
  data-comment-id={comment.id}
  data-user-id={comment.user_id || ""}
  data-created-at={comment.created_at || ""}
  data-thread-level={threadLevel || 0}
>
  {isReply && <div class="reply-connector" />}

  <div class={isReply ? "reply-content" : "comment-content-wrapper"}>
    <!-- Comment Header -->
    <div class="comment-header">
      <div class="comment-user-info">
        <div class="comment-avatar">
          <img src={avatarUrl} alt={displayName} loading="lazy" />
          {isAdmin && <div class="admin-badge">ðŸ‘‘</div>}
        </div>
        <div class="comment-meta">
          <div class="user-details">
            <span class={`username ${isAdmin ? "admin" : ""}`}>
              {displayName}
            </span>
            <!-- âœ… FIXED: Clock and time on same line -->
            <div class="comment-time-wrapper">
              <svg
                width="8"
                height="8"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
              </svg>
              <span
                class="comment-time"
                title={new Date(comment.created_at).toLocaleString()}
              >
                {formatDate(comment.created_at)}
              </span>
            </div>
            {
              comment.is_edited && (
                <span
                  class="edit-indicator"
                  title="This comment has been edited"
                >
                  (edited)
                </span>
              )
            }
          </div>
        </div>
      </div>

      <!-- Actions Menu -->
      <div class="comment-actions-menu">
        <button
          class="menu-btn"
          data-comment-id={comment.id}
          title="More options"
          aria-label="Comment options"
        >
          <svg
            width="12"
            height="12"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <circle cx="12" cy="12" r="1"></circle>
            <circle cx="19" cy="12" r="1"></circle>
            <circle cx="5" cy="12" r="1"></circle>
          </svg>
        </button>

        <div class="dropdown-menu" id={`dropdown-${comment.id}`}>
          <button
            class="dropdown-item edit-comment-btn"
            data-comment-id={comment.id}
            style="display: none;"
            aria-label="Edit comment"
          >
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
              ></path>
              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"
              ></path>
            </svg>
            Edit
          </button>

          <button
            class="dropdown-item delete-comment-btn"
            data-comment-id={comment.id}
            style="display: none;"
            aria-label="Delete comment"
          >
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <polyline points="3,6 5,6 21,6"></polyline>
              <path
                d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2 2h4a2 2 0 0 1 2 2v2"
              ></path>
            </svg>
            Delete
          </button>

          <button
            class="dropdown-item report-btn"
            data-comment-id={comment.id}
            style="display: flex;"
            aria-label="Report comment"
          >
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"
              ></path>
              <line x1="4" y1="22" x2="4" y2="15"></line>
            </svg>
            Report
          </button>
        </div>
      </div>
    </div>

    <!-- Comment Content -->
    <div class="comment-content">
      <div class="comment-text" set:html={formatContent(comment.content)} />
    </div>

    <!-- âœ… UPDATED: Mobile-First Comment Footer -->
    <div class="comment-footer">
      <div class="footer-top-row">
        <!-- Vote Section -->
        <div class="vote-section">
          <button
            class="vote-btn upvote-btn"
            data-comment-id={comment.id}
            data-action="upvote"
            title="Upvote"
            aria-label="Upvote comment"
          >
            <svg
              width="12"
              height="12"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path d="M7 14l5-5 5 5"></path>
            </svg>
          </button>
          <span class="vote-count" id={`vote-count-${comment.id}`}
            >{comment.like_count || 0}</span
          >
          <button
            class="vote-btn downvote-btn"
            data-comment-id={comment.id}
            data-action="downvote"
            title="Downvote"
            aria-label="Downvote comment"
          >
            <svg
              width="12"
              height="12"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path d="M17 10l-5 5-5-5"></path>
            </svg>
          </button>
        </div>

        <!-- Reactions -->
        <div class="comment-reactions">
          {
            reactions.map((reaction) => (
              <button
                class="reaction-btn"
                data-reaction={reaction.name}
                data-comment-id={comment.id}
                title={`React with ${reaction.label}`}
                aria-label={`React with ${reaction.label}`}
              >
                <span class="reaction-emoji">{reaction.emoji}</span>
                <span
                  class="reaction-count"
                  id={`reaction-${reaction.name}-${comment.id}`}
                >
                  {comment.reaction_counts?.[reaction.name] || 0}
                </span>
              </button>
            ))
          }
        </div>
      </div>

      <!-- Actions Row -->
      <div class="comment-actions">
        {
          canReply && (
            <button
              class="action-btn reply-btn"
              data-comment-id={comment.id}
              data-author={displayName}
              title="Reply to this comment"
              aria-label="Reply to comment"
            >
              <svg
                width="12"
                height="12"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <polyline points="9,17 4,12 9,7" />
                <path d="M20 18v-2a4 4 0 0 0-4-4H4" />
              </svg>
              Reply
            </button>
          )
        }

        <button
          class="action-btn bookmark-btn"
          data-comment-id={comment.id}
          title="Bookmark this comment"
          aria-label="Bookmark comment"
        >
          <svg
            width="12"
            height="12"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
          </svg>
          Save
        </button>

        <button
          class="action-btn copy-btn"
          data-comment-id={comment.id}
          title="Copy comment text"
          aria-label="Copy comment text"
        >
          <svg
            width="12"
            height="12"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
    </div>

    <!-- Inline Containers -->
    <div
      class="inline-reply-container"
      data-comment-id={comment.id}
      style="display: none;"
    >
    </div>

    <div
      class="inline-edit-container"
      data-comment-id={comment.id}
      style="display: none;"
    >
    </div>
  </div>
</div>
