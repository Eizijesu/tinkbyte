---
// src/components/comments/CommentReply.astro
import type { CommentWithProfile } from "../../lib/types/comments";

interface Props {
  reply: CommentWithProfile;
  level: number;
  maxLevel?: number;
}

const { reply, level, maxLevel = 4 } = Astro.props;

// Helper functions (same as in main component)
function formatDateHelper(dateString: string): string {
  const date = new Date(dateString);
  const now = new Date();
  const diff = now.getTime() - date.getTime();
  const minutes = Math.floor(diff / 60000);
  const hours = Math.floor(diff / 3600000);
  const days = Math.floor(diff / 86400000);

  if (minutes < 1) return "just now";
  if (minutes < 60) return `${minutes}m ago`;
  if (hours < 24) return `${hours}h ago`;
  if (days < 7) return `${days}d ago`;
  return date.toLocaleDateString();
}

function formatContentHelper(content: string): string {
  const mentionPattern = /@(\w+)/g;
  return content
    .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>")
    .replace(/\*(.*?)\*/g, "<em>$1</em>")
    .replace(/`(.*?)`/g, "<code>$1</code>")
    .replace(mentionPattern, '<span class="mention">@$1</span>')
    .replace(/\n/g, "<br>");
}

function getUserAvatarHelper(profile: any): string {
  if (!profile) return "/images/avatars/preset-1.svg";

  if (profile.avatar_type === "uploaded" && profile.avatar_url) {
    return profile.avatar_url;
  }

  const presetId = profile.avatar_preset_id || 1;
  return `/images/avatars/preset-${presetId}.svg`;
}

function getReactionIconHelper(type: string): string {
  const icons: Record<string, string> = {
    helpful: "üëç",
    insightful: "üí°",
    great: "üî•",
    love: "‚ù§Ô∏è",
    thinking: "ü§î",
  };
  return icons[type] || "üëç";
}

const reactionTypes = ["helpful", "insightful", "great", "love", "thinking"];
---

<div
  class="comment-card reply-card"
  data-comment-id={reply.id}
  data-thread-level={level}
  data-user-id={reply.user_id || ""}
>
  <div class="reply-indicator"></div>

  <div class="reply-content">
    <div class="comment-header">
      <div class="comment-user-info">
        <div class="comment-avatar">
          <img
            src={getUserAvatarHelper(reply.user_profile)}
            alt={reply.user_profile?.display_name ||
              reply.guest_name ||
              "Anonymous"}
          />
          {reply.user_profile?.is_admin && <div class="admin-badge">üëë</div>}
        </div>
        <div class="comment-meta">
          <div class="user-details">
            <span
              class={`username ${reply.user_profile?.is_admin ? "admin" : ""}`}
            >
              {
                reply.user_profile?.display_name ||
                  reply.guest_name ||
                  "Anonymous"
              }
            </span>
            <span class="comment-time">
              {formatDateHelper(reply.created_at)}
            </span>
            {reply.is_edited && <span class="edit-indicator">(edited)</span>}
          </div>
        </div>
      </div>

      <div class="comment-actions-menu">
        <button class="menu-btn" data-comment-id={reply.id}>
          <svg
            width="14"
            height="14"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <circle cx="12" cy="12" r="1"></circle>
            <circle cx="19" cy="12" r="1"></circle>
            <circle cx="5" cy="12" r="1"></circle>
          </svg>
        </button>
        <div class="dropdown-menu" id={`dropdown-${reply.id}`}>
          <button
            class="dropdown-item edit-comment-btn"
            data-comment-id={reply.id}
            style="display: none;"
          >
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
              ></path>
              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"
              ></path>
            </svg>
            Edit
          </button>
          <button
            class="dropdown-item delete-comment-btn"
            data-comment-id={reply.id}
            style="display: none;"
          >
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <polyline points="3,6 5,6 21,6"></polyline>
              <path
                d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
              ></path>
            </svg>
            Delete
          </button>
          <button class="dropdown-item report-btn" data-comment-id={reply.id}>
            <svg
              width="14"
              height="14"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"
              ></path>
              <line x1="4" y1="22" x2="4" y2="15"></line>
            </svg>
            Report
          </button>
        </div>
      </div>
    </div>

    <div class="comment-content">
      <div class="comment-text" set:html={formatContentHelper(reply.content)} />
    </div>

    <div class="comment-footer">
      <div class="comment-voting">
        <button
          class="vote-btn upvote-btn"
          data-comment-id={reply.id}
          title="Upvote"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M7 14l5-5 5 5"></path>
          </svg>
          <span class="vote-count">{reply.like_count || 0}</span>
        </button>
        <button
          class="vote-btn downvote-btn"
          data-comment-id={reply.id}
          title="Downvote"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M17 10l-5 5-5-5"></path>
          </svg>
        </button>
      </div>

      <div class="comment-reactions">
        {
          reactionTypes.map((reaction) => (
            <button
              class="reaction-btn"
              data-reaction={reaction}
              data-comment-id={reply.id}
              title={`React with ${reaction}`}
            >
              <span class="reaction-emoji">
                {getReactionIconHelper(reaction)}
              </span>
              <span class="reaction-count">
                {reply.reaction_counts?.[reaction] || 0}
              </span>
            </button>
          ))
        }
      </div>

      <div class="comment-actions">
        {
          level < maxLevel && (
            <button
              class="action-btn reply-btn"
              data-comment-id={reply.id}
              data-author={
                reply.user_profile?.display_name ||
                reply.guest_name ||
                "Anonymous"
              }
              title="Reply to this comment"
            >
              <svg
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z" />
              </svg>
              Reply
            </button>
          )
        }
        <button
          class="action-btn bookmark-btn"
          data-comment-id={reply.id}
          title="Bookmark this comment"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>
          </svg>
        </button>
        <button
          class="action-btn copy-btn"
          data-comment-id={reply.id}
          title="Copy comment text"
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
            ></path>
            <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
          </svg>
        </button>
      </div>
    </div>

    <div
      class="inline-reply-container"
      data-comment-id={reply.id}
      style="display: none;"
    >
    </div>
  </div>

  <!-- Recursive rendering for deeper replies -->
  {
    reply.replies && reply.replies.length > 0 && level < maxLevel && (
      <div class="comment-replies" data-parent-id={reply.id}>
        {reply.replies.map((nestedReply) => (
          <Astro.self
            reply={nestedReply}
            level={level + 1}
            maxLevel={maxLevel}
          />
        ))}
      </div>
    )
  }
</div>
