---
import Layout from "../layouts/Layout.astro";
import ArticleCard from "../components/blog/ArticleCard.astro";
import BlogHero from "../components/blog/BlogHero.astro";

// Sample search results (in real implementation, this would be dynamic)
const sampleArticles = [
  {
    title: "AI Evolution: Beyond the Hype Cycle",
    excerpt:
      "Real-world applications and practical insights into AI implementation.",
    date: "January 25, 2024",
    readTime: "8 min read",
    slug: "ai-evolution-beyond-hype",
    image:
      "https://images.unsplash.com/photo-1677442136019-21780ecad995?w=800&h=600&fit=crop",
    tags: ["ai-evolution", "product-insights"],
    category: "AI Evolution",
    author: {
      name: "Dr. Elena Vasquez",
      avatar:
        "https://images.unsplash.com/photo-1580489944761-15a19d654956?w=100&h=100&fit=crop&crop=face",
      role: "Chief AI Officer",
      bio: "AI researcher turned product strategist",
    },
  },
  {
    title: "Building Products That Scale Globally",
    excerpt:
      "Lessons from the trenches of product development and global scaling.",
    date: "January 22, 2024",
    readTime: "12 min read",
    slug: "building-products-scale-globally",
    image:
      "https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=800&h=600&fit=crop",
    tags: ["product-strategy", "scaling"],
    category: "Product Strategy",
    author: {
      name: "Alex Chen",
      avatar:
        "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face",
      role: "Senior Product Manager",
      bio: "Product strategist with 10+ years experience",
    },
  },
  {
    title: "The Human Side of Tech Culture",
    excerpt:
      "Community stories and ethical design discussions for sustainable tech teams.",
    date: "January 20, 2024",
    readTime: "6 min read",
    slug: "human-side-tech-culture",
    image:
      "https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=800&h=600&fit=crop",
    tags: ["tech-culture", "community"],
    category: "Tech Culture",
    author: {
      name: "Sarah Kim",
      avatar:
        "https://images.unsplash.com/photo-1494790108755-2616b612b47c?w=100&h=100&fit=crop&crop=face",
      role: "Culture Analyst",
      bio: "Tech culture researcher and community builder",
    },
  },
];

const popularSearches = [
  "artificial intelligence",
  "product management",
  "remote work",
  "startup culture",
  "web3",
  "developer tools",
  "tech trends",
  "innovation",
];

const recentSearches = [
  "AI implementation",
  "scaling products",
  "tech culture",
  "developer productivity",
];

const searchCategories = [
  { name: "AI Evolution", count: 12, slug: "ai-evolution" },
  { name: "Product Strategy", count: 15, slug: "product-strategy" },
  { name: "Tech Culture", count: 8, slug: "tech-culture" },
  { name: "Startup Lessons", count: 10, slug: "startup-lessons" },
  { name: "Developer Tools", count: 6, slug: "developer-tools" },
];
---

<Layout
  title="Search | TinkByte"
  description="Search TinkByte's archive of tech insights, product analysis, and industry trends."
>
  <!-- Search Hero -->
  <BlogHero
    title="Search TinkByte"
    description="Find insights, analysis, and practical knowledge from our archive of tech content."
    size="medium"
    gradient="blue"
    showPattern={true}
  />

  <!-- Search Interface -->
  <section
    class="py-12 px-4 sm:px-6 border-b border-zinc-200 dark:border-zinc-800"
  >
    <div class="max-w-4xl mx-auto">
      <!-- Search Form -->
      <form id="search-form" class="mb-8">
        <div class="flex flex-col sm:flex-row gap-4">
          <div class="relative flex-1">
            <input
              type="search"
              id="search-input"
              name="q"
              placeholder="Search articles, topics, authors..."
              class="w-full pl-12 pr-4 py-4 text-lg border border-zinc-300 dark:border-zinc-700 rounded-xl bg-white dark:bg-zinc-900 text-zinc-900 dark:text-zinc-100 placeholder-zinc-500 dark:placeholder-zinc-400 focus:ring-2 focus:ring-zinc-500 focus:border-transparent outline-none transition-all"
              autocomplete="off"
            />
            <div class="absolute left-4 top-1/2 transform -translate-y-1/2">
              <i class="fas fa-search text-zinc-400 text-lg"></i>
            </div>
            <button
              type="button"
              id="clear-search"
              class="absolute right-4 top-1/2 transform -translate-y-1/2 text-zinc-400 hover:text-zinc-600 dark:hover:text-zinc-300 transition-colors hidden"
            >
              <i class="fas fa-times"></i>
            </button>
          </div>
          <button
            type="submit"
            class="px-8 py-4 bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 rounded-xl font-medium hover:bg-zinc-800 dark:hover:bg-zinc-200 transition-colors uppercase tracking-wide"
          >
            SEARCH
          </button>
        </div>
      </form>

      <!-- Search Filters -->
      <div class="flex flex-wrap gap-4 mb-8">
        <div class="flex items-center gap-2">
          <span
            class="text-sm font-medium text-zinc-700 dark:text-zinc-300 uppercase tracking-wide"
            >FILTER BY:</span
          >
        </div>
        <select
          id="category-filter"
          class="px-3 py-2 text-sm border border-zinc-300 dark:border-zinc-700 rounded bg-white dark:bg-zinc-900 text-zinc-900 dark:text-zinc-100 focus:ring-2 focus:ring-zinc-500 outline-none"
        >
          <option value="">All Categories</option>
          {
            searchCategories.map((category) => (
              <option value={category.slug}>
                {category.name} ({category.count})
              </option>
            ))
          }
        </select>

        <select
          id="sort-filter"
          class="px-3 py-2 text-sm border border-zinc-300 dark:border-zinc-700 rounded bg-white dark:bg-zinc-900 text-zinc-900 dark:text-zinc-100 focus:ring-2 focus:ring-zinc-500 outline-none"
        >
          <option value="relevance">Sort by Relevance</option>
          <option value="date">Sort by Date</option>
          <option value="popularity">Sort by Popularity</option>
        </select>
      </div>
    </div>
  </section>

  <!-- Search Results -->
  <section class="py-12 px-4 sm:px-6">
    <div class="max-w-7xl mx-auto">
      <div class="grid lg:grid-cols-4 gap-8">
        <!-- Main Results -->
        <div class="lg:col-span-3">
          <!-- Results Header -->
          <div id="results-header" class="mb-8 hidden">
            <h2
              class="text-2xl font-bold text-zinc-900 dark:text-zinc-100 mb-2"
            >
              Search Results
            </h2>
            <p class="text-zinc-600 dark:text-zinc-400">
              <span id="results-count">0</span> results found for "<span
                id="search-query"></span>"
            </p>
          </div>

          <!-- Loading State -->
          <div id="loading-state" class="hidden">
            <div class="flex items-center justify-center py-12">
              <div
                class="animate-spin rounded-full h-8 w-8 border-b-2 border-zinc-900 dark:border-zinc-100"
              >
              </div>
              <span class="ml-3 text-zinc-600 dark:text-zinc-400"
                >Searching...</span
              >
            </div>
          </div>

          <!-- No Results -->
          <div id="no-results" class="hidden text-center py-12">
            <div class="text-6xl text-zinc-300 dark:text-zinc-700 mb-4">
              <i class="fas fa-search"></i>
            </div>
            <h3
              class="text-xl font-semibold text-zinc-900 dark:text-zinc-100 mb-2"
            >
              No results found
            </h3>
            <p class="text-zinc-600 dark:text-zinc-400 mb-6">
              Try adjusting your search terms or browse our popular topics
              below.
            </p>
          </div>

          <!-- Sample Results (shown by default) -->
          <div id="search-results">
            <div class="grid gap-8">
              {
                sampleArticles.map((article) => (
                  <ArticleCard {...article} layout="horizontal" />
                ))
              }
            </div>
          </div>
        </div>

        <!-- Sidebar -->
        <div class="lg:col-span-1">
          <!-- Popular Searches -->
          <div
            class="bg-white dark:bg-zinc-900 rounded-xl p-6 border border-zinc-200 dark:border-zinc-800 mb-6"
          >
            <h3
              class="text-lg font-bold text-zinc-900 dark:text-zinc-100 mb-4 uppercase tracking-wide"
            >
              POPULAR SEARCHES
            </h3>
            <div class="space-y-2">
              {
                popularSearches.map((search) => (
                  <button
                    class="block w-full text-left px-3 py-2 text-sm text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100 hover:bg-zinc-50 dark:hover:bg-zinc-800/50 rounded transition-colors search-suggestion"
                    data-search={search}
                  >
                    <i class="fas fa-search text-xs mr-2" />
                    {search}
                  </button>
                ))
              }
            </div>
          </div>

          <!-- Recent Searches -->
          <div
            id="recent-searches"
            class="bg-white dark:bg-zinc-900 rounded-xl p-6 border border-zinc-200 dark:border-zinc-800 mb-6 hidden"
          >
            <h3
              class="text-lg font-bold text-zinc-900 dark:text-zinc-100 mb-4 uppercase tracking-wide"
            >
              RECENT SEARCHES
            </h3>
            <div id="recent-searches-list" class="space-y-2">
              <!-- Populated by JavaScript -->
            </div>
            <button
              id="clear-recent"
              class="text-xs text-zinc-500 dark:text-zinc-400 hover:text-zinc-700 dark:hover:text-zinc-300 mt-3 uppercase tracking-wide"
            >
              Clear Recent
            </button>
          </div>

          <!-- Categories -->
          <div
            class="bg-white dark:bg-zinc-900 rounded-xl p-6 border border-zinc-200 dark:border-zinc-800"
          >
            <h3
              class="text-lg font-bold text-zinc-900 dark:text-zinc-100 mb-4 uppercase tracking-wide"
            >
              BROWSE CATEGORIES
            </h3>
            <div class="space-y-2">
              {
                searchCategories.map((category) => (
                  <a
                    href={`/category/${category.slug}`}
                    class="flex items-center justify-between py-2 px-3 rounded hover:bg-zinc-50 dark:hover:bg-zinc-800/50 transition-colors group"
                  >
                    <span class="text-sm font-medium text-zinc-700 dark:text-zinc-300 group-hover:text-zinc-900 dark:group-hover:text-zinc-100 uppercase tracking-wide">
                      {category.name}
                    </span>
                    <span class="text-xs text-zinc-500 dark:text-zinc-400 bg-zinc-100 dark:bg-zinc-800 px-2 py-1 rounded-full">
                      {category.count}
                    </span>
                  </a>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  .search-suggestion {
    transition: all 0.2s ease;
  }

  .search-suggestion:hover {
    transform: translateX(4px);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const searchForm = document.getElementById("search-form");
    const searchInput = document.getElementById("search-input");
    const clearButton = document.getElementById("clear-search");
    const resultsHeader = document.getElementById("results-header");
    const loadingState = document.getElementById("loading-state");
    const noResults = document.getElementById("no-results");
    const searchResults = document.getElementById("search-results");
    const recentSearches = document.getElementById("recent-searches");
    const recentSearchesList = document.getElementById("recent-searches-list");
    const clearRecent = document.getElementById("clear-recent");

    // Search functionality
    searchForm?.addEventListener("submit", (e) => {
      e.preventDefault();
      performSearch();
    });

    searchInput?.addEventListener("input", (e) => {
      const query = e.target.value.trim();
      clearButton?.classList.toggle("hidden", !query);
    });

    clearButton?.addEventListener("click", () => {
      searchInput.value = "";
      clearButton.classList.add("hidden");
      resetSearchResults();
    });

    // Search suggestions
    document.querySelectorAll(".search-suggestion").forEach((button) => {
      button.addEventListener("click", () => {
        const searchTerm = button.dataset.search;
        searchInput.value = searchTerm;
        performSearch();
      });
    });

    // Recent searches
    clearRecent?.addEventListener("click", () => {
      localStorage.removeItem("recentSearches");
      updateRecentSearches();
    });

    function performSearch() {
      const query = searchInput.value.trim();
      if (!query) return;

      // Add to recent searches
      addToRecentSearches(query);

      // Show loading state
      showLoadingState();

      // Simulate search delay
      setTimeout(() => {
        // In real implementation, this would make an API call
        showSearchResults(query);
      }, 800);
    }

    function showLoadingState() {
      resultsHeader?.classList.add("hidden");
      loadingState?.classList.remove("hidden");
      noResults?.classList.add("hidden");
      searchResults?.classList.add("hidden");
    }

    function showSearchResults(query) {
      loadingState?.classList.add("hidden");
      resultsHeader?.classList.remove("hidden");
      searchResults?.classList.remove("hidden");

      // Update results header
      const querySpan = document.getElementById("search-query");
      const countSpan = document.getElementById("results-count");
      if (querySpan) querySpan.textContent = query;
      if (countSpan) countSpan.textContent = "3"; // Mock count
    }

    function resetSearchResults() {
      resultsHeader?.classList.add("hidden");
      loadingState?.classList.add("hidden");
      noResults?.classList.add("hidden");
      searchResults?.classList.remove("hidden");
    }

    function addToRecentSearches(query) {
      let recent = JSON.parse(localStorage.getItem("recentSearches") || "[]");
      recent = recent.filter((item) => item !== query);
      recent.unshift(query);
      recent = recent.slice(0, 5);
      localStorage.setItem("recentSearches", JSON.stringify(recent));
      updateRecentSearches();
    }

    function updateRecentSearches() {
      const recent = JSON.parse(localStorage.getItem("recentSearches") || "[]");

      if (recent.length > 0) {
        recentSearches?.classList.remove("hidden");
        if (recentSearchesList) {
          recentSearchesList.innerHTML = recent
            .map(
              (search) => `
            <button class="block w-full text-left px-3 py-2 text-sm text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100 hover:bg-zinc-50 dark:hover:bg-zinc-800/50 rounded transition-colors recent-search-item" data-search="${search}">
              <i class="fas fa-clock text-xs mr-2"></i>
              ${search}
            </button>
          `
            )
            .join("");

          // Add click handlers to recent search items
          document.querySelectorAll(".recent-search-item").forEach((button) => {
            button.addEventListener("click", () => {
              const searchTerm = button.dataset.search;
              searchInput.value = searchTerm;
              performSearch();
            });
          });
        }
      } else {
        recentSearches?.classList.add("hidden");
      }
    }

    // Initialize recent searches
    updateRecentSearches();

    // Auto-focus search input
    searchInput?.focus();
  });
</script>
