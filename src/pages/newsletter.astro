---
// src/pages/newsletter.astro - Enhanced with collapsible sections and TinaCMS integration
import Layout from "../layouts/Layout.astro";
import Button from "../components/ui/Button.astro";
import { getCollection } from "astro:content";

// Properly import environment variables
const CONVERTKIT_FORM_ID =
  import.meta.env.CONVERTKIT_FORM_ID ||
  import.meta.env.PUBLIC_CONVERTKIT_FORM_ID;

// Validate environment variable
if (!CONVERTKIT_FORM_ID) {
  console.warn("CONVERTKIT_FORM_ID not found in environment variables");
}

// Get newsletter content from TinaCMS collections
const newsletterIssues = await getCollection("newsletter");
const recentIssues = newsletterIssues
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
  )
  .slice(0, 3);

// Get newsletter settings (benefits, FAQs, etc.)
const newsletterSettings = await getCollection("settings");
const settings = newsletterSettings.find((item) => item.slug === "newsletter");

// Fallback data if TinaCMS content is not available
const defaultBenefits = [
  {
    title: "Weekly Insights",
    description:
      "Get the week's most important tech insights delivered every Tuesday",
    icon: "calendar-alt",
  },
  {
    title: "Exclusive Content",
    description:
      "Access to subscriber-only articles and behind-the-scenes content",
    icon: "lock",
  },
  {
    title: "Early Access",
    description: "Be the first to read new articles before they go public",
    icon: "rocket",
  },
  {
    title: "Community Access",
    description: "Join our Discord community of 1,200+ builders and innovators",
    icon: "users",
  },
];

const defaultFAQs = [
  {
    question: "How often do you send emails?",
    answer:
      "Once a week, every Tuesday. We respect your inbox and never send spam or promotional content.",
  },
  {
    question: "Can I unsubscribe anytime?",
    answer:
      "Absolutely. Every email includes an unsubscribe link, and you can opt out with one click.",
  },
  {
    question: "Do you share subscriber data?",
    answer:
      "Never. Your email stays with us and we never share, sell, or rent your information to third parties.",
  },
];

const defaultSampleIssues = [
  {
    title: "TinkStacks #47: The Real Cost of Technical Debt",
    date: "January 30, 2024",
    excerpt:
      "How three startups calculated the hidden costs of shortcuts and what they did about it.",
    readTime: "8 min read",
    issueNumber: 47,
  },
  {
    title: "TinkStacks #46: Building for the Global South",
    date: "January 23, 2024",
    excerpt:
      "Infrastructure constraints as innovation drivers: lessons from African fintech.",
    readTime: "6 min read",
    issueNumber: 46,
  },
  {
    title: "TinkStacks #45: The MVP Myth",
    date: "January 16, 2024",
    excerpt:
      "Why most 'minimum viable products' aren't viable and what to build instead.",
    readTime: "7 min read",
    issueNumber: 45,
  },
];

// Use TinaCMS content if available, otherwise use defaults
const benefits = settings?.data.benefits || defaultBenefits;
const faqs = settings?.data.faqs || defaultFAQs;
const sampleIssues =
  recentIssues.length > 0
    ? recentIssues.map((issue, index) => ({
        title: issue.data.title,
        date: new Date(issue.data.pubDate).toLocaleDateString("en-US", {
          year: "numeric",
          month: "long",
          day: "numeric",
        }),
        excerpt: issue.data.excerpt || issue.data.description,
        readTime: `${issue.data.readingTime || 5} min read`,
        issueNumber: issue.data.issueNumber || 50 - index,
        slug: issue.slug,
      }))
    : defaultSampleIssues;

const subscriberCount = settings?.data.subscriberCount || "1,200+";
const issueCount = settings?.data.issueCount || "47";
const countryCount = settings?.data.countryCount || "45";
---

<Layout
  title="Newsletter | TinkByte - Weekly Tech Insights for Builders"
  description="Join 1,200+ builders getting practical tech insights delivered weekly. No hype, just substance."
>
  <!-- Enhanced Newsletter Hero with Gradient Background -->
  <section class="relative py-16 lg:py-24 overflow-hidden">
    <div
      class="absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 opacity-10"
    >
    </div>
    <div class="absolute inset-0 bg-[url('/images/pattern.svg')] opacity-5">
    </div>

    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-4xl mx-auto text-center">
        <div
          class="inline-flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-zinc-800/80 backdrop-blur-sm rounded-sm border border-zinc-200 dark:border-zinc-700 mb-6"
        >
          <div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
          <span
            class="text-sm font-bold uppercase tracking-wider text-zinc-700 dark:text-zinc-300"
          >
            Weekly Newsletter
          </span>
        </div>

        <h1
          class="text-4xl lg:text-6xl font-bold text-zinc-900 dark:text-white mb-6"
        >
          Join
          <span
            class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
          >
            TinkStacks Weekly
          </span>
        </h1>

        <p
          class="text-xl lg:text-2xl text-zinc-600 dark:text-zinc-300 leading-relaxed max-w-3xl mx-auto mb-12"
        >
          The tech newsletter that cuts through the noise. Every Tuesday, get
          practical insights, real-world case studies, and honest analysis
          delivered to your inbox.
        </p>

        <!-- Enhanced Newsletter Signup Form -->
        <div class="max-w-2xl mx-auto mb-12">
          {
            CONVERTKIT_FORM_ID ? (
              <form
                class="newsletter-form"
                id="hero-newsletter-form"
                action={`https://app.convertkit.com/forms/${CONVERTKIT_FORM_ID}/subscriptions`}
                method="post"
                data-form-id={CONVERTKIT_FORM_ID}
              >
                <div class="relative">
                  <div class="flex flex-col sm:flex-row gap-3">
                    <input
                      type="email"
                      name="email_address"
                      placeholder="Enter your email address..."
                      required
                      class="flex-1 px-6 py-4 text-lg bg-white dark:bg-zinc-800 border-2 border-zinc-200 dark:border-zinc-700 rounded-sm focus:border-blue-500 dark:focus:border-blue-400 focus:outline-none focus:ring-4 focus:ring-blue-500/20 transition-all duration-200 text-zinc-900 dark:text-zinc-100"
                      aria-label="Email address"
                    />
                    <Button
                      type="submit"
                      variant="primary"
                      className="px-8 py-4 text-lg rounded-sm font-semibold whitespace-nowrap bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 transition-all duration-200"
                    >
                      Subscribe Free
                    </Button>
                  </div>
                  <p class="text-sm text-zinc-500 dark:text-zinc-400 mt-4 text-center">
                    Join {subscriberCount} builders. Unsubscribe anytime. No
                    spam, ever.
                  </p>
                </div>
              </form>
            ) : (
              <div class="p-6 bg-yellow-50 dark:bg-yellow-900/20 border-2 border-yellow-200 dark:border-yellow-800 rounded-sm">
                <p class="text-yellow-800 dark:text-yellow-200 text-center">
                  Newsletter signup temporarily unavailable. Please check back
                  soon.
                </p>
              </div>
            )
          }
        </div>

        <!-- Enhanced Quick Stats -->
        <div class="grid grid-cols-3 gap-8 max-w-lg mx-auto">
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {subscriberCount}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Subscribers
            </div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {issueCount}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Issues
            </div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {countryCount}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Countries
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Enhanced Benefits Section -->
  <section class="py-16 px-4 sm:px-6 bg-zinc-50 dark:bg-zinc-900/50">
    <div class="max-w-6xl mx-auto">
      <div class="text-center mb-12">
        <h2
          class="text-3xl lg:text-4xl font-bold text-zinc-900 dark:text-white mb-4"
        >
          What You Get
          <span
            class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
          >
            Every Week
          </span>
        </h2>
        <p class="text-xl text-zinc-600 dark:text-zinc-400 max-w-2xl mx-auto">
          More than just another tech newsletter - get actionable insights that
          help you build better products.
        </p>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
        {
          benefits.map((benefit) => (
            <div class="group text-center p-6 bg-white dark:bg-zinc-800 rounded-sm border border-zinc-200 dark:border-zinc-700 hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-200">
              <div class="w-16 h-16 bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 rounded-sm flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-200">
                <i
                  class={`fas fa-${benefit.icon} text-2xl text-blue-600 dark:text-blue-400`}
                />
              </div>
              <h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-3 uppercase tracking-wide">
                {benefit.title}
              </h3>
              <p class="text-sm text-zinc-600 dark:text-zinc-400 leading-relaxed">
                {benefit.description}
              </p>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Collapsible Recent Issues Section -->
  <section class="py-16 px-4 sm:px-6">
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-8">
        <h2
          class="text-3xl lg:text-4xl font-bold text-zinc-900 dark:text-white mb-4"
        >
          Recent
          <span
            class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
          >
            Issues
          </span>
        </h2>
        <p class="text-xl text-zinc-600 dark:text-zinc-400 mb-6">
          See what you've been missing - real insights, real impact
        </p>

        <!-- Collapsible Toggle Button -->
        <button
          id="recent-issues-toggle"
          class="inline-flex items-center gap-2 px-6 py-3 bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-sm hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-200 group"
          aria-expanded="false"
          aria-controls="recent-issues-content"
        >
          <span class="font-medium text-zinc-900 dark:text-white"
            >View Recent Issues</span
          >
          <svg
            class="w-5 h-5 text-zinc-500 dark:text-zinc-400 transition-transform duration-200 group-hover:text-blue-600 dark:group-hover:text-blue-400"
            id="recent-issues-icon"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
      </div>

      <!-- Collapsible Content -->
      <div
        id="recent-issues-content"
        class="overflow-hidden transition-all duration-300 ease-in-out"
        style="max-height: 0;"
      >
        <div class="space-y-6 pt-6">
          {
            sampleIssues.map((issue) => (
              <article class="group p-6 bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-sm hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-200">
                <div class="flex items-start justify-between gap-4">
                  <div class="flex-1">
                    <div class="flex items-center gap-3 mb-3">
                      <span class="text-xs font-semibold px-3 py-1 bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 text-blue-800 dark:text-blue-300 rounded uppercase tracking-wide">
                        #{issue.issueNumber}
                      </span>
                      <time class="text-sm text-zinc-500 dark:text-zinc-400">
                        {issue.date}
                      </time>
                      <span class="text-sm text-zinc-500 dark:text-zinc-400">
                        {issue.readTime}
                      </span>
                    </div>

                    <h3 class="text-lg font-semibold text-zinc-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200">
                      {issue.slug ? (
                        <a
                          href={`/newsletter/${issue.slug}`}
                          class="hover:underline"
                        >
                          {issue.title}
                        </a>
                      ) : (
                        issue.title
                      )}
                    </h3>

                    <p class="text-zinc-600 dark:text-zinc-400 leading-relaxed">
                      {issue.excerpt}
                    </p>
                  </div>

                  <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                    <svg
                      class="w-6 h-6 text-blue-600 dark:text-blue-400"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </div>
                </div>
              </article>
            ))
          }
        </div>

        <div class="text-center mt-8">
          <Button
            variant="outline"
            href="/newsletter/archive"
            className="uppercase tracking-wide border-2 hover:border-blue-500 hover:text-blue-600 dark:hover:text-blue-400 transition-all duration-200"
          >
            View All Issues
          </Button>
        </div>
      </div>
    </div>
  </section>

  <!-- Collapsible FAQ Section -->
  <section class="py-16 px-4 sm:px-6 bg-zinc-50 dark:bg-zinc-900/50">
    <div class="max-w-3xl mx-auto">
      <div class="text-center mb-8">
        <h2
          class="text-3xl lg:text-4xl font-bold text-zinc-900 dark:text-white mb-4"
        >
          Frequently
          <span
            class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
          >
            Asked
          </span>
        </h2>
        <p class="text-xl text-zinc-600 dark:text-zinc-400 mb-6">
          Everything you need to know about TinkStacks Weekly
        </p>

        <!-- Collapsible Toggle Button -->
        <button
          id="faq-toggle"
          class="inline-flex items-center gap-2 px-6 py-3 bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-sm hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-200 group"
          aria-expanded="false"
          aria-controls="faq-content"
        >
          <span class="font-medium text-zinc-900 dark:text-white"
            >View FAQs</span
          >
          <svg
            class="w-5 h-5 text-zinc-500 dark:text-zinc-400 transition-transform duration-200 group-hover:text-blue-600 dark:group-hover:text-blue-400"
            id="faq-icon"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
      </div>

      <!-- Collapsible Content -->
      <div
        id="faq-content"
        class="overflow-hidden transition-all duration-300 ease-in-out"
        style="max-height: 0;"
      >
        <div class="space-y-6 pt-6">
          {
            faqs.map((faq, index) => (
              <div class="group p-6 bg-white dark:bg-zinc-800 rounded-sm border border-zinc-200 dark:border-zinc-700 hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-200">
                <button
                  class="w-full text-left flex items-center justify-between group/item"
                  data-faq-toggle={index}
                  aria-expanded="false"
                >
                  <h3 class="text-lg font-semibold text-zinc-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 pr-4">
                    {faq.question}
                  </h3>
                  <svg
                    class="w-5 h-5 text-zinc-500 dark:text-zinc-400 transition-transform duration-200 flex-shrink-0"
                    data-faq-icon={index}
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </button>
                <div
                  class="overflow-hidden transition-all duration-300 ease-in-out"
                  data-faq-content={index}
                  style="max-height: 0;"
                >
                  <p class="text-zinc-600 dark:text-zinc-400 leading-relaxed pt-3 border-t border-zinc-100 dark:border-zinc-700 mt-3">
                    {faq.answer}
                  </p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <!-- Enhanced Final CTA -->
  <section class="relative py-16 px-4 sm:px-6 overflow-hidden">
    <div
      class="absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 opacity-5"
    >
    </div>

    <div class="max-w-2xl mx-auto text-center relative z-10">
      <h2
        class="text-3xl lg:text-4xl font-bold text-zinc-900 dark:text-white mb-4"
      >
        Ready to
        <span
          class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
        >
          Join?
        </span>
      </h2>
      <p class="text-xl text-zinc-600 dark:text-zinc-400 mb-8">
        Get practical tech insights delivered to your inbox every Tuesday. Join
        the community of builders shaping the future.
      </p>

      <div class="max-w-md mx-auto">
        {
          CONVERTKIT_FORM_ID ? (
            <form
              class="newsletter-form"
              id="bottom-newsletter-form"
              action={`https://app.convertkit.com/forms/${CONVERTKIT_FORM_ID}/subscriptions`}
              method="post"
              data-form-id={CONVERTKIT_FORM_ID}
            >
              <div class="flex flex-col sm:flex-row gap-3">
                <input
                  type="email"
                  name="email_address"
                  placeholder="your@email.com"
                  required
                  class="flex-1 px-4 py-3 border-2 border-zinc-300 dark:border-zinc-600 bg-white dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100 rounded-sm focus:border-blue-500 dark:focus:border-blue-400 focus:outline-none focus:ring-4 focus:ring-blue-500/20 transition-all duration-200"
                />
                <Button
                  type="submit"
                  variant="primary"
                  className="px-6 py-3 rounded-sm font-semibold bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 transition-all duration-200"
                >
                  Subscribe Free
                </Button>
              </div>
            </form>
          ) : (
            <div class="p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-sm">
              <p class="text-sm text-yellow-800 dark:text-yellow-200 text-center">
                Newsletter signup temporarily unavailable. Please check back
                soon.
              </p>
            </div>
          )
        }
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Enhanced Newsletter Styles */
  .newsletter-form input:focus {
    outline: none;
    border-color: rgb(59, 130, 246);
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
  }

  .newsletter-form button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  /* Gradient text animation */
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .bg-gradient-to-r.bg-clip-text {
    background-size: 200% 200%;
    animation: gradient 3s ease-in-out infinite;
  }

  /* Hover effects */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  /* Collapsible animations */
  .collapsible-enter {
    max-height: 0;
    opacity: 0;
  }

  .collapsible-enter-active {
    max-height: 1000px;
    opacity: 1;
    transition:
      max-height 0.3s ease-in-out,
      opacity 0.3s ease-in-out;
  }

  .collapsible-exit {
    max-height: 1000px;
    opacity: 1;
  }

  .collapsible-exit-active {
    max-height: 0;
    opacity: 0;
    transition:
      max-height 0.3s ease-in-out,
      opacity 0.3s ease-in-out;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Newsletter form handling
    const forms = document.querySelectorAll(".newsletter-form");

    forms.forEach((form) => {
      const formElement = form as HTMLFormElement;
      const formId = formElement.dataset.formId;

      if (!formId) {
        console.warn("Newsletter form ID not found");
        return;
      }

      formElement.addEventListener("submit", async (e) => {
        e.preventDefault();

        const input = formElement.querySelector(
          'input[name="email_address"]'
        ) as HTMLInputElement;
        const button = formElement.querySelector(
          'button[type="submit"]'
        ) as HTMLButtonElement;

        if (!input || !button) return;

        const email = input.value.trim();
        if (!email) {
          input.focus();
          return;
        }

        // Enhanced email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          showMessage(
            formElement,
            "Please enter a valid email address",
            "error"
          );
          input.focus();
          return;
        }

        const originalText = button.textContent;
        button.textContent = "Subscribing...";
        button.disabled = true;

        try {
          const formData = new FormData(formElement);
          const response = await fetch(formElement.action, {
            method: "POST",
            body: formData,
            headers: { Accept: "application/json" },
          });

          if (response.ok) {
            input.value = "";
            button.textContent = "Subscribed!";
            button.className = button.className.replace(
              "from-blue-600 to-purple-600",
              "from-green-600 to-green-700"
            );

            showMessage(
              formElement,
              "Welcome to TinkStacks! Check your email to confirm your subscription.",
              "success"
            );

            setTimeout(() => {
              button.textContent = originalText;
              button.disabled = false;
              button.className = button.className.replace(
                "from-green-600 to-green-700",
                "from-blue-600 to-purple-600"
              );
              clearMessages(formElement);
            }, 5000);
          } else {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
          }
        } catch (error) {
          console.error("Newsletter subscription error:", error);
          button.textContent = "Try Again";
          button.disabled = false;

          showMessage(
            formElement,
            "Something went wrong. Please try again.",
            "error"
          );

          setTimeout(() => {
            button.textContent = originalText;
            clearMessages(formElement);
          }, 3000);
        }
      });
    });

    // Collapsible sections handling
    function setupCollapsible(
      toggleId: string,
      contentId: string,
      iconId: string
    ) {
      const toggle = document.getElementById(toggleId);
      const content = document.getElementById(contentId);
      const icon = document.getElementById(iconId);

      if (!toggle || !content || !icon) return;

      let isExpanded = false;

      toggle.addEventListener("click", () => {
        isExpanded = !isExpanded;

        // Update ARIA attributes
        toggle.setAttribute("aria-expanded", isExpanded.toString());

        // Toggle content
        if (isExpanded) {
          content.style.maxHeight = content.scrollHeight + "px";
          icon.style.transform = "rotate(180deg)";
          toggle.querySelector("span")!.textContent = toggleId.includes("faq")
            ? "Hide FAQs"
            : "Hide Recent Issues";
        } else {
          content.style.maxHeight = "0";
          icon.style.transform = "rotate(0deg)";
          toggle.querySelector("span")!.textContent = toggleId.includes("faq")
            ? "View FAQs"
            : "View Recent Issues";
        }
      });
    }

    // Setup collapsible sections
    setupCollapsible(
      "recent-issues-toggle",
      "recent-issues-content",
      "recent-issues-icon"
    );
    setupCollapsible("faq-toggle", "faq-content", "faq-icon");

    // Individual FAQ item toggles
    document.querySelectorAll("[data-faq-toggle]").forEach((toggle) => {
      const index = toggle.getAttribute("data-faq-toggle");
      const content = document.querySelector(
        `[data-faq-content="${index}"]`
      ) as HTMLElement;
      const icon = document.querySelector(
        `[data-faq-icon="${index}"]`
      ) as HTMLElement;

      if (!content || !icon) return;

      let isExpanded = false;

      toggle.addEventListener("click", () => {
        isExpanded = !isExpanded;

        // Update ARIA attributes
        toggle.setAttribute("aria-expanded", isExpanded.toString());

        // Toggle content
        if (isExpanded) {
          content.style.maxHeight = content.scrollHeight + "px";
          icon.style.transform = "rotate(180deg)";
        } else {
          content.style.maxHeight = "0";
          icon.style.transform = "rotate(0deg)";
        }
      });
    });

    // Helper functions for messages
    function showMessage(
      form: HTMLFormElement,
      message: string,
      type: "success" | "error"
    ) {
      clearMessages(form);

      const messageDiv = document.createElement("div");
      messageDiv.className = `message-alert mt-3 p-3 rounded-sm text-sm text-center ${
        type === "success"
          ? "bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-200 border border-green-200 dark:border-green-800"
          : "bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200 border border-red-200 dark:border-red-800"
      }`;
      messageDiv.textContent = message;
      form.appendChild(messageDiv);
    }

    function clearMessages(form: HTMLFormElement) {
      const existingMessages = form.querySelectorAll(".message-alert");
      existingMessages.forEach((msg) => msg.remove());
    }
  });
</script>
