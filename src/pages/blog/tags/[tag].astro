---
// src/pages/blog/tags/[tag].astro - Updated to use getTagColor from utils
import Layout from "../../../layouts/Layout.astro";
import ArticleCard from "../../../components/blog/ArticleCard.astro";
import NewsletterForm from "../../../components/forms/NewsletterForm.astro";
import Button from "../../../components/ui/Button.astro";
import { getAllTags, getPostsByTag, getTagColor } from "../../../utils/content";
import type { BlogPost } from "../../../utils/content";

export async function getStaticPaths() {
  const allTags = await getAllTags();

  return allTags.map((tag) => ({
    params: { tag: tag.slug },
    props: {
      tag: {
        slug: tag.slug,
        name: tag.name,
        count: tag.count,
        description: `Explore ${tag.name} articles and insights from the TinkByte community.`,
        color: getTagColor(tag.slug), // ✅ Now imported from utils
      },
    },
  }));
}

const { tag } = Astro.props;

// Get actual posts from your content collection
const tagPosts = await getPostsByTag(tag.slug);
const relatedTags = await getAllTags();
const otherTags = relatedTags.filter((t) => t.slug !== tag.slug).slice(0, 6);

// ✅ Enhanced color classes with all supported colors
const colorClasses: Record<string, string> = {
  purple: "from-purple-500 to-pink-500",
  green: "from-green-500 to-emerald-500",
  blue: "from-blue-500 to-cyan-500",
  orange: "from-orange-500 to-red-500",
  indigo: "from-indigo-500 to-purple-500",
  teal: "from-teal-500 to-blue-500",
  pink: "from-pink-500 to-rose-500",
  red: "from-red-500 to-pink-500",
  cyan: "from-cyan-500 to-blue-500",
  yellow: "from-yellow-500 to-orange-500",
};

// Get the color class safely
const tagColorClass = colorClasses[tag.color] || colorClasses.blue;
---

<Layout
  title={`${tag.name} Articles | TinkByte`}
  description={`${tag.description} Browse our collection of ${tag.name.toLowerCase()} articles and insights.`}
>
  <!-- Tag Hero -->
  <section class="relative py-20 lg:py-24 px-4 sm:px-6 overflow-hidden">
    <!-- Background -->
    <div class="absolute inset-0">
      <div class={`bg-gradient-to-br ${tagColorClass} opacity-10`}></div>
      <div class="absolute inset-0 bg-white/50 dark:bg-zinc-900/50"></div>
    </div>

    <!-- Content -->
    <div class="relative z-10 max-w-4xl mx-auto text-center">
      <!-- Tag Badge -->
      <div
        class="inline-flex items-center gap-2 px-4 py-2 bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-full mb-6"
      >
        <div class={`w-3 h-3 rounded-full bg-gradient-to-r ${tagColorClass}`}>
        </div>
        <span
          class="text-sm font-semibold uppercase tracking-wider text-zinc-600 dark:text-zinc-400"
          >Tag</span
        >
      </div>

      <h1
        class="text-4xl lg:text-5xl xl:text-6xl font-bold text-zinc-900 dark:text-zinc-100 mb-6"
      >
        #{tag.name}
      </h1>

      <p
        class="text-xl lg:text-2xl text-zinc-600 dark:text-zinc-400 leading-relaxed max-w-3xl mx-auto mb-8"
      >
        {tag.description}
      </p>

      <!-- Stats -->
      <div class="flex justify-center gap-8 text-center">
        <div>
          <div class="text-3xl font-bold text-zinc-900 dark:text-zinc-100">
            {tag.count}
          </div>
          <div
            class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
          >
            Articles
          </div>
        </div>
        <div>
          <div class="text-3xl font-bold text-zinc-900 dark:text-zinc-100">
            {Math.floor(tag.count * 2.5)}K+
          </div>
          <div
            class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
          >
            Readers
          </div>
        </div>
      </div>

      <!-- Multi-tag Filter CTA -->
      <div class="mt-8">
        <Button variant="outline" href="/blog/tags" className="group">
          <span class="flex items-center gap-2">
            <i class="fas fa-filter"></i>
            Explore Multi-Tag Filtering
            <i
              class="fas fa-arrow-right text-sm transition-transform duration-300 group-hover:translate-x-1"
            ></i>
          </span>
        </Button>
      </div>
    </div>
  </section>

  <!-- Articles Grid -->
  <section class="py-16 lg:py-20 px-4 sm:px-6">
    <div class="max-w-7xl mx-auto">
      <!-- Section Header -->
      <div class="flex items-center justify-between mb-12">
        <div>
          <h2
            class="text-3xl lg:text-4xl font-bold text-zinc-900 dark:text-zinc-100 mb-4"
          >
            Latest Articles
          </h2>
          <p class="text-xl text-zinc-600 dark:text-zinc-400">
            {tagPosts.length} articles tagged with #{tag.name}
          </p>
        </div>
        <Button variant="outline" href="/blog" className="group">
          <span class="flex items-center gap-1">
            All Articles
            <i
              class="fas fa-arrow-right text-sm transition-transform duration-300 group-hover:translate-x-1"
            ></i>
          </span>
        </Button>
      </div>

      <!-- Articles -->
      {
        tagPosts.length > 0 ? (
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
            {tagPosts.map((post: BlogPost) => (
              <ArticleCard
                title={post.data.title}
                excerpt={post.data.excerpt}
                date={post.data.pubDate.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
                readTime={post.data.readTime || "5 min read"}
                slug={post.slug}
                image={post.data.image}
                tags={post.data.tags}
                category={post.data.category}
                author={{
                  name: post.data.author,
                  avatar:
                    post.data.authorAvatar || "/images/default-avatar.jpg",
                  role: post.data.authorRole || "Author",
                  bio: post.data.authorBio || "Content creator",
                }}
                featured={post.data.featured}
              />
            ))}
          </div>
        ) : (
          <div class="text-center py-16">
            <i class="fas fa-file-alt text-4xl text-zinc-400 mb-4" />
            <h3 class="text-xl font-semibold text-zinc-700 dark:text-zinc-300 mb-2">
              No articles yet
            </h3>
            <p class="text-zinc-600 dark:text-zinc-400 mb-6">
              We're working on content for this tag. Check back soon!
            </p>
            <Button href="/blog" variant="primary">
              Browse All Articles
            </Button>
          </div>
        )
      }

      <!-- Load More (if needed) -->
      {
        tagPosts.length > 9 && (
          <div class="text-center">
            <Button variant="outline" href="#" className="px-8 py-3">
              Load More Articles
            </Button>
          </div>
        )
      }
    </div>
  </section>

  <!-- Related Tags -->
  <section class="py-16 lg:py-20 px-4 sm:px-6 bg-zinc-50 dark:bg-zinc-900/50">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-12">
        <h2
          class="text-3xl lg:text-4xl font-bold text-zinc-900 dark:text-zinc-100 mb-6"
        >
          Related Topics
        </h2>
        <p class="text-xl text-zinc-600 dark:text-zinc-400">
          Explore more topics that might interest you
        </p>
      </div>

      <div class="flex flex-wrap justify-center gap-4">
        {
          otherTags.map((relatedTag) => (
            <a
              href={`/blog/tags/${relatedTag.slug}`}
              class="px-6 py-3 bg-white dark:bg-zinc-900 text-zinc-700 dark:text-zinc-300 rounded-full border border-zinc-200 dark:border-zinc-800 hover:border-zinc-400 dark:hover:border-zinc-600 transition-all duration-200 hover:scale-105 font-medium"
            >
              #{relatedTag.name} ({relatedTag.count})
            </a>
          ))
        }
      </div>

      <!-- Multi-tag exploration CTA -->
      <div class="text-center mt-8">
        <p class="text-zinc-600 dark:text-zinc-400 mb-4">
          Want to combine multiple tags?
        </p>
        <Button href="/blog/tags" variant="primary">
          Try Multi-Tag Filtering
        </Button>
      </div>
    </div>
  </section>

  <!-- Newsletter -->
  <section
    class="py-16 lg:py-20 px-4 sm:px-6 border-t border-zinc-200 dark:border-zinc-800"
  >
    <div class="max-w-4xl mx-auto">
      <NewsletterForm
        title={`Stay Updated on ${tag.name}`}
        description={`Get the latest insights and analysis on ${tag.name.toLowerCase()} delivered to your inbox.`}
      />
    </div>
  </section>
</Layout>
