---
// src/pages/blog/authors/index.astro - Authors listing page
import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/ui/Button.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

type Author = CollectionEntry<'authors'>;

// Get all authors
const allAuthors = await getCollection("authors");

// Get all blog posts to calculate author stats
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Enhanced author data with stats
const enhancedAuthors = allAuthors.map((author) => {
  // Find posts by this author (check multiple author field formats)
  const authorPosts = allPosts.filter(post => {
    const postAuthor = post.data.authorInfo?.name || post.data.author || 'TinkByte Team';
    return postAuthor === author.data.name;
  });

  // Get recent posts
  const recentPosts = authorPosts
    .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())
    .slice(0, 3);

  return {
    ...author,
    postCount: authorPosts.length,
    recentPosts,
    lastPublished: recentPosts[0]?.data.pubDate || null
  };
}).sort((a, b) => {
  // Sort featured authors first, then by post count
  if (a.data.featured !== b.data.featured) {
    return b.data.featured ? 1 : -1;
  }
  return b.postCount - a.postCount;
});

// Calculate totals
const totalAuthors = enhancedAuthors.length;
const featuredAuthors = enhancedAuthors.filter(author => author.data.featured);
const totalArticles = allPosts.length;

const pageTitle = "Authors | TinkByte";
const pageDescription = `Meet our ${totalAuthors} contributors who share insights on tech, product development, and innovation.`;
---

<Layout title={pageTitle} description={pageDescription}>
  <!-- Authors Hero -->
  <section class="relative py-12 lg:py-16 overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 opacity-5"></div>

    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-4xl mx-auto text-center">
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-zinc-800/80 backdrop-blur-sm rounded-sm border border-zinc-200 dark:border-zinc-700 mb-6">
          <div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
          <span class="text-sm font-bold uppercase tracking-wider text-zinc-700 dark:text-zinc-300">
            MEET THE TEAM
          </span>
        </div>

        <h1 class="text-4xl lg:text-5xl font-bold text-zinc-900 dark:text-white mb-6">
          Our
          <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            Authors
          </span>
        </h1>

        <p class="text-xl text-zinc-600 dark:text-zinc-300 leading-relaxed max-w-3xl mx-auto mb-8">
          Meet the builders, thinkers, and innovators behind TinkByte. Real insights from people building the future.
        </p>

        <div class="flex justify-center gap-8 text-center">
          <div class="author-stat">
            <div class="stat-number">{totalAuthors}</div>
            <div class="stat-label">AUTHORS</div>
          </div>
          <div class="author-stat">
            <div class="stat-number">{totalArticles}</div>
            <div class="stat-label">ARTICLES</div>
          </div>
          {featuredAuthors.length > 0 && (
            <div class="author-stat">
              <div class="stat-number">{featuredAuthors.length}</div>
              <div class="stat-label">FEATURED</div>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <main class="authors-page">
    <div class="max-w-7xl mx-auto px-4 py-12">
      
      <!-- Featured Authors -->
      {featuredAuthors.length > 0 && (
        <section class="mb-12">
          <h2 class="text-2xl font-bold text-zinc-900 dark:text-zinc-100 mb-8 flex items-center">
            <i class="fas fa-star mr-3 text-yellow-500"></i>
            Featured Authors
          </h2>
          <div class="featured-authors-grid">
            {featuredAuthors.map((author) => (
              <div class="author-card featured-author">
                <div class="author-card-content">
                  <!-- Author Avatar -->
                  <div class="author-avatar">
                    {author.data.avatar ? (
                      <img
                        src={author.data.avatar}
                        alt={`${author.data.name} profile picture`}
                        class="w-16 h-16 rounded-sm object-cover border-2 border-zinc-200 dark:border-zinc-700"
                        loading="lazy"
                      />
                    ) : (
                      <div class="w-16 h-16 rounded-sm bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 flex items-center justify-center border-2 border-zinc-200 dark:border-zinc-700">
                        <i class="fas fa-user text-2xl text-blue-600 dark:text-blue-400"></i>
                      </div>
                    )}
                    <div class="featured-badge">FEATURED</div>
                  </div>

                  <!-- Author Info -->
                  <div class="author-info">
                    <h3 class="author-name">
                      <a href={`/blog/authors/${author.slug}`}>{author.data.name}</a>
                    </h3>
                    
                    {author.data.role && (
                      <p class="author-role">{author.data.role}</p>
                    )}
                    
                    {author.data.bio && (
                      <p class="author-bio">{author.data.bio.slice(0, 120)}...</p>
                    )}

                    <!-- Author Stats -->
                    <div class="author-stats">
                      <span class="stat-item">{author.postCount} articles</span>
                      {author.lastPublished && (
                        <span class="stat-item">
                          Last: {author.lastPublished.toLocaleDateString("en-US", { month: 'short', year: 'numeric' })}
                        </span>
                      )}
                    </div>

                    <!-- Social Links -->
                    {author.data.social && Object.values(author.data.social).some(link => link) && (
                      <div class="author-social">
                        {author.data.social.twitter && (
                          <a href={author.data.social.twitter} target="_blank" rel="noopener noreferrer" class="social-link">
                            <i class="fab fa-twitter"></i>
                          </a>
                        )}
                        {author.data.social.linkedin && (
                          <a href={author.data.social.linkedin} target="_blank" rel="noopener noreferrer" class="social-link">
                            <i class="fab fa-linkedin"></i>
                          </a>
                        )}
                        {author.data.social.github && (
                          <a href={author.data.social.github} target="_blank" rel="noopener noreferrer" class="social-link">
                            <i class="fab fa-github"></i>
                          </a>
                        )}
                        {author.data.social.website && (
                          <a href={author.data.social.website} target="_blank" rel="noopener noreferrer" class="social-link">
                            <i class="fas fa-globe"></i>
                          </a>
                        )}
                      </div>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      )}

      <!-- All Authors -->
      <section>
        <div class="flex items-center justify-between mb-8">
          <h2 class="text-2xl font-bold text-zinc-900 dark:text-zinc-100 flex items-center">
            <i class="fas fa-users mr-3 text-blue-600"></i>
            All Authors
          </h2>
          <span class="text-sm text-zinc-500 dark:text-zinc-400">
            {totalAuthors} {totalAuthors === 1 ? 'author' : 'authors'}
          </span>
        </div>

        <div class="authors-grid">
          {enhancedAuthors.map((author, index) => (
            <div class="author-card" style={`--animation-delay: ${index * 0.1}s`}>
              <div class="author-card-content">
                <!-- Author Avatar -->
                <div class="author-avatar">
                  {author.data.avatar ? (
                    <img
                      src={author.data.avatar}
                      alt={`${author.data.name} profile picture`}
                      class="w-12 h-12 rounded-sm object-cover border-2 border-zinc-200 dark:border-zinc-700"
                      loading="lazy"
                    />
                  ) : (
                    <div class="w-12 h-12 rounded-sm bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 flex items-center justify-center border-2 border-zinc-200 dark:border-zinc-700">
                      <i class="fas fa-user text-lg text-blue-600 dark:text-blue-400"></i>
                    </div>
                  )}
                  {author.data.featured && (
                    <div class="featured-badge small">FEATURED</div>
                  )}
                </div>

                <!-- Author Info -->
                <div class="author-info">
                  <h3 class="author-name">
                    <a href={`/blog/authors/${author.slug}`}>{author.data.name}</a>
                  </h3>
                  
                  {author.data.role && (
                    <p class="author-role">{author.data.role}</p>
                  )}
                  
                  {author.data.bio && (
                    <p class="author-bio">{author.data.bio.slice(0, 80)}...</p>
                  )}

                  <!-- Author Stats -->
                  <div class="author-stats">
                    <span class="stat-item">{author.postCount} articles</span>
                  </div>

                  <!-- Social Links -->
                  {author.data.social && Object.values(author.data.social).some(link => link) && (
                    <div class="author-social">
                      {author.data.social.twitter && (
                        <a href={author.data.social.twitter} target="_blank" rel="noopener noreferrer" class="social-link">
                          <i class="fab fa-twitter"></i>
                        </a>
                      )}
                      {author.data.social.linkedin && (
                        <a href={author.data.social.linkedin} target="_blank" rel="noopener noreferrer" class="social-link">
                          <i class="fab fa-linkedin"></i>
                        </a>
                      )}
                      {author.data.social.github && (
                        <a href={author.data.social.github} target="_blank" rel="noopener noreferrer" class="social-link">
                          <i class="fab fa-github"></i>
                        </a>
                      )}
                      {author.data.social.website && (
                        <a href={author.data.social.website} target="_blank" rel="noopener noreferrer" class="social-link">
                          <i class="fas fa-globe"></i>
                        </a>
                      )}
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>

        <!-- Empty State -->
        {enhancedAuthors.length === 0 && (
          <div class="text-center py-16">
            <div class="mb-6">
              <i class="fas fa-users text-4xl text-zinc-300 dark:text-zinc-600"></i>
            </div>
            <h3 class="text-xl font-bold text-zinc-900 dark:text-zinc-100 mb-4">
              No Authors Yet
            </h3>
            <p class="text-zinc-600 dark:text-zinc-400 mb-6">
              Authors will appear here once they start publishing content.
            </p>
            <Button href="/blog" variant="primary" className="compact-btn">
              <i class="fas fa-newspaper mr-2"></i>
              BROWSE ARTICLES
            </Button>
          </div>
        )}
      </section>
    </div>
  </main>
</Layout>

<style>
  /* Authors Page Styling */
  .authors-page {
    font-family: "Space Grotesk", sans-serif;
    background-color: var(--color-bg-primary);
    color: var(--color-text-primary);
  }

  /* Hero Stats */
  .author-stat {
    text-align: center;
    padding: 1rem;
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--color-text-primary);
    line-height: 1;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.75rem;
    font-weight: 700;
    color: var(--color-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  /* Featured Authors Grid */
  .featured-authors-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  /* All Authors Grid */
  .authors-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  /* Author Cards */
  .author-card {
    background: var(--color-bg-primary);
    border: 2px solid var(--color-border);
    padding: 1.5rem;
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
    animation-delay: var(--animation-delay, 0s);
  }

  .author-card:hover {
    border-color: #243788;
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
  }

  :global(.dark) .author-card:hover {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  }

  .featured-author {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border: 2px solid #e2e8f0;
  }

  :global(.dark) .featured-author {
    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
    border-color: #334155;
  }

  .author-card-content {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
  }

  /* Author Avatar */
  .author-avatar {
    position: relative;
    flex-shrink: 0;
  }

  .featured-badge {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #243788;
    color: white;
    font-size: 0.625rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    padding: 0.25rem 0.5rem;
    border-radius: 2px;
  }

  .featured-badge.small {
    font-size: 0.5rem;
    padding: 0.2rem 0.4rem;
  }

  /* Author Info */
  .author-info {
    flex: 1;
    min-width: 0;
  }

  .author-name {
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--color-text-primary);
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .author-name a {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .author-name a:hover {
    color: #243788;
  }

  .author-role {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    margin-bottom: 0.75rem;
    font-weight: 500;
  }

  .author-bio {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    line-height: 1.4;
    margin-bottom: 1rem;
  }

  /* Author Stats */
  .author-stats {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .stat-item {
    font-size: 0.75rem;
    color: var(--color-text-muted);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  /* Social Links */
  .author-social {
    display: flex;
    gap: 0.75rem;
  }

  .social-link {
    color: var(--color-text-muted);
    font-size: 0.875rem;
    transition: color 0.3s ease;
  }

  .social-link:hover {
    color: #243788;
  }

  /* Animations */
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Gradient text animation */
  @keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .bg-gradient-to-r.bg-clip-text {
    background-size: 200% 200%;
    animation: gradient 3s ease-in-out infinite;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .featured-authors-grid,
    .authors-grid {
      grid-template-columns: 1fr;
    }

    .author-card-content {
      flex-direction: column;
      text-align: center;
    }

    .author-avatar {
      align-self: center;
    }
  }

  /* Compact buttons */
  .compact-btn {
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 700;
    font-size: 0.875rem;
    padding: 0.75rem 1.5rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Staggered animation for author cards
    const authorCards = document.querySelectorAll('.author-card');
    
    authorCards.forEach((card, index) => {
      card.style.setProperty('--animation-delay', `${index * 0.1}s`);
    });

    // Intersection Observer for scroll animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px',
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.style.opacity = '1';
          entry.target.style.transform = 'translateY(0)';
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);

    authorCards.forEach((card) => {
      observer.observe(card);
    });
  });
</script>