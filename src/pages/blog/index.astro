---
// src/pages/blog/index.astro - Featured Blog Posts Homepage (TypeScript Fixed)
import Layout from "../../layouts/Layout.astro";
import ArticleCard from "../../components/blog/ArticleCard.astro";
import Button from "../../components/ui/Button.astro";
import { getCollection } from "astro:content";

// Get all published blog posts
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Sort posts by publication date (newest first)
const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

// Get featured posts
const featuredPosts = sortedPosts.filter(post => post.data.featured);

// Get recent posts (excluding featured ones)
const recentPosts = sortedPosts
  .filter(post => !post.data.featured)
  .slice(0, 9); // Show 9 recent posts

// Get categories with post counts - FIXED: Proper type handling
const allCategories = [...new Set(allPosts.map(post => post.data.category).filter(Boolean))];
const categoriesWithCounts = allCategories.map(category => ({
  name: category as string,
  slug: (category as string)?.toLowerCase().replace(/\s+/g, '-') || '',
  count: allPosts.filter(post => post.data.category === category).length,
  // Map category to icon based on your TinaCMS config
  icon: {
    'build-thinking': 'hammer',
    'community-innovation': 'users', 
    'learning-by-doing': 'book',
    'no-fluff-coverage': 'bullseye',
    'research-backed': 'chart-line',
    'global-perspective': 'globe',
    'ai-evolution': 'brain',
    'product-strategy': 'target',
    'tech-culture': 'users-cog',
    'developer-tools': 'tools'
  }[(category as string)?.toLowerCase().replace(/\s+/g, '-')] || 'tag'
}));

// Calculate stats
const totalPosts = allPosts.length;
// FIXED: Author count calculation
const totalAuthors = [...new Set(allPosts.map(post => 
  post.data.authorInfo?.name || post.data.author || 'TinkByte Team'
).filter(Boolean))].length;
const totalCategories = allCategories.length;

// FIXED: Consistent author handling respecting optional fields
const transformPost = (post: any) => ({
  title: post.data.title,
  excerpt: post.data.excerpt,
  date: post.data.pubDate.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long", 
    day: "numeric",
  }),
  readTime: post.data.readTime || "5 min read",
  slug: post.slug,
  image: post.data.image || "https://images.unsplash.com/photo-1677442136019-21780ecad995?w=600&h=400&fit=crop",
  tags: post.data.tags || [],
  category: post.data.category,
  // FIXED: Create author object with only available data
  author: {
    name: post.data.authorInfo?.name || post.data.author || 'TinkByte Team',
    // Only include these if they exist
    avatar: post.data.authorInfo?.avatar || null,
    role: post.data.authorInfo?.role || null,
    bio: post.data.authorInfo?.bio || null
  },
  audioUrl: post.data.audioUrl,
  featured: post.data.featured,
  trending: post.data.trending
});
---

<Layout
  title="Blog | TinkByte - Tech Insights That Matter"
  description="Discover practical insights on technology, product development, and innovation. Featured articles from builders who value substance over hype."
>
  
  <!-- Hero Section -->
  <section class="relative py-16 lg:py-20 overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 opacity-5"></div>
    <div class="absolute inset-0 bg-[url('/images/pattern.svg')] opacity-3"></div>
    
    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-4xl mx-auto text-center">
        
        <!-- Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-zinc-800/80 backdrop-blur-sm rounded-sm border border-zinc-200 dark:border-zinc-700 mb-6">
          <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
          <span class="text-sm font-bold uppercase tracking-wider text-zinc-700 dark:text-zinc-300">
            Blog Articles
          </span>
        </div>

        <!-- Title -->
        <h1 class="text-4xl lg:text-6xl font-bold text-zinc-900 dark:text-white mb-6">
          Tech Insights
          <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            That Matter
          </span>
        </h1>

        <!-- Subtitle -->
        <p class="text-xl lg:text-2xl text-zinc-600 dark:text-zinc-300 leading-relaxed max-w-3xl mx-auto mb-8">
          Practical insights from builders who value substance over hype. Real stories, actionable advice, global perspectives.
        </p>

        <!-- Quick Stats -->
        <div class="grid grid-cols-3 gap-8 max-w-lg mx-auto">
          <div class="text-center">
            <div class="text-2xl lg:text-3xl font-bold text-zinc-900 dark:text-white mb-1">{totalPosts}</div>
            <div class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider">Articles</div>
          </div>
          <div class="text-center">
            <div class="text-2xl lg:text-3xl font-bold text-zinc-900 dark:text-white mb-1">{totalAuthors}</div>
            <div class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider">Authors</div>
          </div>
          <div class="text-center">
            <div class="text-2xl lg:text-3xl font-bold text-zinc-900 dark:text-white mb-1">{totalCategories}</div>
            <div class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider">Topics</div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Posts Section -->
  {featuredPosts.length > 0 && (
    <section class="py-16 px-4">
      <div class="container mx-auto">
        <div class="max-w-7xl mx-auto">
          
          <div class="text-center mb-12">
            <h2 class="text-3xl font-bold text-zinc-900 dark:text-white mb-4">
              Featured
              <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                Articles
              </span>
            </h2>
            <p class="text-xl text-zinc-600 dark:text-zinc-400">
              Our most impactful and popular content
            </p>
          </div>

          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {featuredPosts.map(post => (
              <ArticleCard {...transformPost(post)} />
            ))}
          </div>

        </div>
      </div>
    </section>
  )}

  <!-- Recent Posts Section -->
  {recentPosts.length > 0 && (
    <section class="py-16 px-4 bg-zinc-50 dark:bg-zinc-900/50">
      <div class="container mx-auto">
        <div class="max-w-7xl mx-auto">
          
          <div class="flex items-center justify-between mb-12">
            <div>
              <h2 class="text-3xl font-bold text-zinc-900 dark:text-white mb-2">
                Latest
                <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  Articles
                </span>
              </h2>
              <p class="text-zinc-600 dark:text-zinc-400">
                Fresh insights and perspectives from our community
              </p>
            </div>
            <Button
              variant="outline"
              href="/blog/archive"
              className="hidden sm:flex border-2 hover:border-blue-500 hover:text-blue-600 dark:hover:text-blue-400 transition-all duration-200"
            >
              View All Posts
            </Button>
          </div>

          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {recentPosts.map(post => (
              <ArticleCard {...transformPost(post)} />
            ))}
          </div>

          <!-- Mobile View All Button -->
          <div class="text-center mt-12 sm:hidden">
            <Button
              variant="outline"
              href="/blog/archive"
              className="border-2 hover:border-blue-500 hover:text-blue-600 dark:hover:text-blue-400 transition-all duration-200"
            >
              View All Posts
            </Button>
          </div>

        </div>
      </div>
    </section>
  )}

  <!-- Categories Section -->
  {categoriesWithCounts.length > 0 && (
    <section class="py-16 px-4">
      <div class="container mx-auto">
        <div class="max-w-6xl mx-auto">
          
          <div class="text-center mb-12">
            <h2 class="text-3xl font-bold text-zinc-900 dark:text-white mb-4">
              Browse by
              <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                Category
              </span>
            </h2>
            <p class="text-xl text-zinc-600 dark:text-zinc-400">
              Find articles that match your interests and expertise
            </p>
          </div>

          <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6">
            {categoriesWithCounts.map(category => (
              <a
                href={`/blog/categories/${category.slug}`}
                class="group p-6 bg-white dark:bg-zinc-800 rounded-sm border border-zinc-200 dark:border-zinc-700 hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-300 hover:shadow-lg text-center"
              >
                <div class="w-12 h-12 bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-900/30 dark:to-purple-900/30 rounded-sm flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-200">
                  <i class={`fas fa-${category.icon} text-xl text-blue-600 dark:text-blue-400`}></i>
                </div>
                <h3 class="font-semibold text-zinc-900 dark:text-white mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors text-sm uppercase tracking-wide">
                  {(category.name as string)?.replace(/-/g, ' ')}
                </h3>
                <p class="text-xs text-zinc-500 dark:text-zinc-400 uppercase tracking-wide">
                  {category.count} {category.count === 1 ? 'Article' : 'Articles'}
                </p>
              </a>
            ))}
          </div>

        </div>
      </div>
    </section>
  )}

  <!-- Newsletter CTA Section -->
  <section class="py-16 px-4 bg-zinc-50 dark:bg-zinc-900/50">
    <div class="container mx-auto">
      <div class="max-w-4xl mx-auto text-center">
        
        <h2 class="text-3xl font-bold text-zinc-900 dark:text-white mb-4">
          Stay
          <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            Updated
          </span>
        </h2>
        
        <p class="text-xl text-zinc-600 dark:text-zinc-400 mb-8 leading-relaxed">
          Get weekly insights delivered to your inbox. Join 1,200+ builders who value substance over hype.
        </p>
        
        <div class="flex flex-col sm:flex-row gap-4 justify-center max-w-md mx-auto">
          <Button 
            variant="primary" 
            href="/newsletter" 
            className="px-8 py-3 rounded-sm font-semibold bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 transition-all duration-200"
          >
            <i class="fas fa-envelope mr-2"></i>
            Subscribe Now
          </Button>
          
          <Button 
            variant="outline" 
            href="/rss.xml" 
            className="px-8 py-3 rounded-sm font-semibold border-2 hover:border-blue-500 hover:text-blue-600 dark:hover:text-blue-400 transition-all duration-200"
          >
            <i class="fas fa-rss mr-2"></i>
            RSS Feed
          </Button>
        </div>

      </div>
    </div>
  </section>

  <!-- Empty State (if no posts) -->
  {allPosts.length === 0 && (
    <section class="py-32 px-4">
      <div class="container mx-auto">
        <div class="max-w-2xl mx-auto text-center">
          
          <div class="w-24 h-24 bg-zinc-100 dark:bg-zinc-800 rounded-sm flex items-center justify-center mx-auto mb-8">
            <i class="fas fa-edit text-3xl text-zinc-400"></i>
          </div>
          
          <h2 class="text-2xl font-bold text-zinc-900 dark:text-white mb-4">
            No Articles Yet
          </h2>
          
          <p class="text-zinc-600 dark:text-zinc-400 mb-8">
            We're working on bringing you great content. Check back soon for insights that matter.
          </p>
          
          <Button 
            variant="primary"
            href="/"
            className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
          >
            <i class="fas fa-home mr-2"></i>
            Back to Home
          </Button>

        </div>
      </div>
    </section>
  )}

</Layout>

<style>
  /* Gradient text animation */
  @keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
  
  .bg-gradient-to-r.bg-clip-text {
    background-size: 200% 200%;
    animation: gradient 3s ease-in-out infinite;
  }
  
  /* Hover effects */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }
  
  /* Responsive grid improvements */
  @media (max-width: 640px) {
    .grid-cols-2.md\:grid-cols-3.lg\:grid-cols-5 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  
  @media (min-width: 768px) and (max-width: 1023px) {
    .grid-cols-2.md\:grid-cols-3.lg\:grid-cols-5 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  
  /* Smooth transitions */
  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Card hover effects */
  .group:hover {
    transform: translateY(-4px);
  }

  /* Loading animation */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-in {
    animation: fadeInUp 0.6s ease-out forwards;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Add smooth scroll behavior
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });

    // Add loading states for article cards
    const articleCards = document.querySelectorAll('.group');
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });

    articleCards.forEach(card => {
      observer.observe(card);
    });

    // Search functionality (if you want to add it later)
    const searchInput = document.querySelector('#search-input') as HTMLInputElement;
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        const target = e.target as HTMLInputElement;
        if (target) {
          const query = target.value.toLowerCase();
          // Implement search logic here
        }
      });
    }
  });
</script>