---
// src/pages/blog/categories/[category].astro - COMPLETE FIXED VERSION
import Layout from "../../../layouts/Layout.astro";
import ArticleCard from "../../../components/blog/ArticleCard.astro";
import Button from "../../../components/ui/Button.astro";
import { getCollection } from "astro:content";
import { SITE } from "../../../config/site";
import type { CollectionEntry } from "astro:content";

type BlogPost = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const allPosts = await getCollection("blog", ({ data }) => !data.draft);

  // Get unique categories (use actual category names, not slugified)
  const categories: string[] = [
    ...new Set(allPosts.map((post: BlogPost) => post.data.category)),
  ].filter((cat): cat is string => Boolean(cat));

  return categories.map((category: string) => ({
    params: {
      category: category
        .toLowerCase()
        .replace(/\s+/g, "-")
        .replace(/[^\w-]+/g, ""),
    },
    props: {
      categoryName: category,
      posts: allPosts.filter(
        (post: BlogPost) => post.data.category === category
      ),
    },
  }));
}

// Properly type the props
interface Props {
  categoryName: string;
  posts: BlogPost[];
}

const { categoryName, posts }: Props = Astro.props;

// Format post data for display with proper typing - FIXED to return 'date' instead of 'pubDate'
const formatPost = (post: BlogPost) => {
  let authorData: {
    name: string;
    avatar?: string;
    bio?: string;
    role?: string;
  };

  if (typeof post.data.author === "string") {
    authorData = {
      name: post.data.author,
      avatar: post.data.authorAvatar,
      bio: post.data.authorBio,
      role: post.data.authorRole,
    };
  } else if (
    typeof post.data.author === "object" &&
    post.data.author !== null
  ) {
    authorData = {
      name: (post.data.author as any).name || "Unknown Author",
      avatar: (post.data.author as any).avatar || post.data.authorAvatar,
      bio: (post.data.author as any).bio || post.data.authorBio,
      role: (post.data.author as any).role || post.data.authorRole,
    };
  } else {
    authorData = {
      name: "Unknown Author",
      avatar: post.data.authorAvatar,
      bio: post.data.authorBio,
      role: post.data.authorRole,
    };
  }

  return {
    title: post.data.title,
    excerpt: post.data.excerpt,
    date: post.data.pubDate.toLocaleDateString("en-US", {
      // ✅ FIXED: Using 'date' instead of 'pubDate'
      year: "numeric",
      month: "long",
      day: "numeric",
    }),
    readTime: post.data.readTime || "5 min read",
    slug: post.slug,
    image: post.data.image,
    tags: post.data.tags || [],
    category: post.data.category,
    author: authorData,
    audioUrl: post.data.audioUrl,
    featured: post.data.featured,
    trending: post.data.trending,
  };
};

// Safely convert categoryName to lowercase
const safeCategoryName =
  typeof categoryName === "string" ? categoryName.toLowerCase() : "unknown";
---

<Layout
  title={`${categoryName} Articles | ${SITE.name}`}
  description={`Explore our ${safeCategoryName} articles. Deep insights and practical knowledge for builders and innovators.`}
>
  <!-- Category Header -->
  <section
    class="py-16 px-4 sm:px-6 bg-gradient-to-br from-zinc-50 to-white dark:from-zinc-900 dark:to-zinc-800"
  >
    <div class="max-w-6xl mx-auto text-center">
      <div
        class="inline-flex items-center gap-2 px-4 py-2 bg-zinc-100 dark:bg-zinc-800 rounded-sm border border-zinc-200 dark:border-zinc-700 mb-6"
      >
        <div
          class="w-3 h-3 rounded-sm bg-gradient-to-r from-blue-500 to-purple-500 animate-pulse"
        >
        </div>
        <span
          class="text-sm font-bold uppercase tracking-wider text-zinc-700 dark:text-zinc-300"
        >
          CATEGORY
        </span>
      </div>

      <h1
        class="text-4xl lg:text-6xl font-bold text-zinc-900 dark:text-zinc-100 mb-6 font-space-grotesk uppercase tracking-wide"
      >
        {categoryName}
      </h1>

      <p
        class="text-xl text-zinc-600 dark:text-zinc-400 leading-relaxed max-w-3xl mx-auto mb-8"
      >
        {posts.length}
        {posts.length === 1 ? "article" : "articles"} in this category
      </p>

      <div class="flex justify-center">
        <Button
          variant="outline"
          href="/blog"
          className="uppercase tracking-wide"
        >
          ← Back to All Articles
        </Button>
      </div>
    </div>
  </section>

  <!-- Articles Grid -->
  <section class="py-16 px-4 sm:px-6">
    <div class="max-w-6xl mx-auto">
      {
        posts.length > 0 ? (
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {posts.map((post: BlogPost) => (
              <ArticleCard {...formatPost(post)} />
            ))}
          </div>
        ) : (
          <div class="text-center py-16">
            <i class="fas fa-file-alt text-6xl text-zinc-300 dark:text-zinc-600 mb-4" />
            <h3 class="text-2xl font-bold text-zinc-900 dark:text-zinc-100 mb-4 uppercase tracking-wide">
              No Articles Yet
            </h3>
            <p class="text-zinc-600 dark:text-zinc-400 mb-8">
              We're working on creating amazing content for this category. Check
              back soon!
            </p>
            <Button
              href="/blog"
              variant="primary"
              className="uppercase tracking-wide"
            >
              Explore Other Articles
            </Button>
          </div>
        )
      }
    </div>
  </section>
</Layout>
