---
// src/pages/blog/categories/[category].astro
import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/ui/Button.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const categories = await getCollection("categories");
  return categories.map((category) => ({
    params: { category: category.slug },
    props: { categoryData: category },
  }));
}

const { categoryData } = Astro.props;
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Filter posts by category name (since category is stored as string in blog posts)
const categoryPosts = allPosts
  .filter(
    (post) =>
      post.data.category.toLowerCase() === categoryData.data.name.toLowerCase()
  )
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
---

<Layout
  title={`${categoryData.data.name} | TinkByte Blog`}
  description={categoryData.data.description}
>
  <!-- Category Hero -->
  <section
    class="py-16 px-4 sm:px-6 bg-gradient-to-br from-zinc-50 to-white dark:from-zinc-900 dark:to-zinc-800"
  >
    <div class="max-w-4xl mx-auto text-center">
      <div
        class="inline-flex items-center gap-2 px-4 py-2 bg-zinc-100 dark:bg-zinc-800 rounded-full border border-zinc-200 dark:border-zinc-700 mb-6"
      >
        <div
          class={`w-3 h-3 rounded-full ${
            categoryData.data.color === "purple"
              ? "bg-purple-500"
              : categoryData.data.color === "green"
                ? "bg-green-500"
                : categoryData.data.color === "blue"
                  ? "bg-blue-500"
                  : categoryData.data.color === "cyan"
                    ? "bg-cyan-500"
                    : categoryData.data.color === "orange"
                      ? "bg-orange-500"
                      : "bg-red-500"
          }`}
        >
        </div>
        <span
          class="text-sm font-bold uppercase tracking-wider text-zinc-700 dark:text-zinc-300"
        >
          CATEGORY
        </span>
      </div>

      <h1
        class="text-4xl lg:text-5xl font-bold text-zinc-900 dark:text-zinc-100 mb-6 font-space-grotesk uppercase tracking-wide"
      >
        {categoryData.data.name}
      </h1>

      <p
        class="text-xl text-zinc-600 dark:text-zinc-400 leading-relaxed max-w-3xl mx-auto mb-8"
      >
        {categoryData.data.description}
      </p>

      <div class="flex justify-center gap-8 text-center">
        <div>
          <div class="text-3xl font-bold text-zinc-900 dark:text-zinc-100">
            {categoryPosts.length}
          </div>
          <div
            class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
          >
            ARTICLES
          </div>
        </div>
        <div>
          <div class="text-3xl font-bold text-zinc-900 dark:text-zinc-100">
            {categoryPosts.filter((post) => post.data.featured).length}
          </div>
          <div
            class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
          >
            FEATURED
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Articles Grid -->
  <section class="py-16 px-4 sm:px-6">
    <div class="max-w-6xl mx-auto">
      {
        categoryPosts.length > 0 ? (
          <>
            <div class="flex items-center justify-between mb-12">
              <div>
                <h2 class="text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-4 font-space-grotesk uppercase tracking-wide">
                  LATEST IN {categoryData.data.name.toUpperCase()}
                </h2>
                <p class="text-lg text-zinc-600 dark:text-zinc-400">
                  {categoryPosts.length} articles â€¢ Updated regularly
                </p>
              </div>
              <Button
                variant="outline"
                href="/blog"
                className="group uppercase tracking-wide"
              >
                <span class="flex items-center gap-1">
                  ALL ARTICLES
                  <i class="fas fa-arrow-right text-sm transition-transform duration-300 group-hover:translate-x-1" />
                </span>
              </Button>
            </div>

            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {categoryPosts.map((post) => (
                <article class="group bg-white dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700 overflow-hidden hover:shadow-lg transition-all duration-300">
                  {post.data.image && (
                    <div class="aspect-video overflow-hidden">
                      <Image
                        src={post.data.image}
                        alt={post.data.imageAlt || post.data.title}
                        width={400}
                        height={225}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                        loading="lazy"
                      />
                    </div>
                  )}

                  <div class="p-6">
                    <div class="mb-3">
                      <span class="inline-block px-3 py-1 bg-zinc-100 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 text-xs font-bold rounded-full uppercase tracking-wider">
                        {post.data.category}
                      </span>
                      {post.data.featured && (
                        <span class="ml-2 inline-block px-2 py-1 bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 text-xs font-bold rounded uppercase tracking-wider">
                          FEATURED
                        </span>
                      )}
                    </div>

                    <h3 class="text-lg font-semibold text-zinc-900 dark:text-zinc-100 mb-2 group-hover:text-zinc-700 dark:group-hover:text-zinc-300 transition-colors">
                      <a href={`/blog/${post.slug}`} class="hover:underline">
                        {post.data.title}
                      </a>
                    </h3>

                    <p class="text-sm text-zinc-600 dark:text-zinc-400 mb-4 line-clamp-2">
                      {post.data.excerpt}
                    </p>

                    <div class="flex flex-wrap gap-2 mb-4">
                      {post.data.tags &&
                        post.data.tags
                          .slice(0, 2)
                          .map((tag) => (
                            <span class="px-2 py-1 bg-zinc-50 dark:bg-zinc-700 text-zinc-600 dark:text-zinc-400 text-xs rounded uppercase tracking-wide">
                              #{tag}
                            </span>
                          ))}
                    </div>

                    <div class="flex items-center justify-between text-xs text-zinc-500 dark:text-zinc-400 uppercase tracking-wide">
                      <span>{post.data.pubDate.toLocaleDateString()}</span>
                      <span>{post.data.readTime || "5 min read"}</span>
                    </div>

                    {post.data.audioUrl && (
                      <div class="mt-3 flex items-center gap-2 text-xs text-zinc-500 dark:text-zinc-400">
                        <i class="fas fa-headphones" />
                        <span class="uppercase tracking-wide">
                          AUDIO AVAILABLE
                        </span>
                      </div>
                    )}
                  </div>
                </article>
              ))}
            </div>
          </>
        ) : (
          <div class="text-center py-16">
            <i class="fas fa-folder-open text-6xl text-zinc-300 dark:text-zinc-600 mb-4" />
            <h2 class="text-2xl font-bold text-zinc-900 dark:text-zinc-100 mb-4 uppercase tracking-wide">
              NO ARTICLES YET
            </h2>
            <p class="text-zinc-600 dark:text-zinc-400 mb-8">
              We're working on content for this category. Check back soon!
            </p>
            <Button
              href="/blog"
              variant="primary"
              className="uppercase tracking-wide"
            >
              BROWSE ALL ARTICLES
            </Button>
          </div>
        )
      }
    </div>
  </section>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
