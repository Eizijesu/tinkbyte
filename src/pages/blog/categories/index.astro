---
// src/pages/blog/categories/index.astro - Fixed with Proper Tailwind Grid
import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/ui/Button.astro";
import { getCollection } from "astro:content";

// Get all posts directly
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Get the allTopics data from TinaCMS (same as your all-topics page)
let allTopicsData, pageData, topicsData;

try {
  allTopicsData = await getCollection("allTopics");
  pageData = allTopicsData[0]?.data;
  topicsData = pageData?.topics;
} catch (error) {
  console.warn("Could not load allTopics from CMS:", error);
}

// Use the same fallback as your all-topics page if TinaCMS data isn't available
const fallbackTopics = [
  {
    name: "Build Thinking",
    href: "/blog/categories/build-thinking",
    description: "Mental models, product intuition, systems mindset",
    audience: "Builders, designers, engineers",
  },
  {
    name: "Learning by Doing",
    href: "/blog/categories/learning-by-doing",
    description: "Practical experiments, hands-on growth",
    audience: "Self-learners, teams, tinkerers",
  },
  {
    name: "Product Lessons",
    href: "/blog/categories/product-lessons",
    description: "Real build stories, what worked/didn't",
    audience: "Product leads, founders",
  },
  {
    name: "Startup Insight",
    href: "/blog/categories/startup-insight",
    description: "Early-stage execution, traction, team dynamics",
    audience: "Startup founders, operators",
  },
  {
    name: "Product Strategy",
    href: "/blog/categories/product-strategy",
    description: "Positioning, roadmap thinking, growth decisions",
    audience: "Product strategists, growth leads",
  },
  {
    name: "AI Evolution",
    href: "/blog/categories/ai-evolution",
    description: "Practical AI implementation, ethical considerations",
    audience: "Technical founders, AI builders",
  },
  {
    name: "Developer Tools",
    href: "/blog/categories/developer-tools",
    description: "Toolchains and infrastructure choices",
    audience: "Developers, CTOs, tech leads",
  },
  {
    name: "Research Bites",
    href: "/blog/categories/research-bites",
    description: "Data-driven insights made practical",
    audience: "Product thinkers, researchers",
  },
  {
    name: "Fail / Iterate / Ship",
    href: "/blog/categories/fail-iterate-ship",
    description: "Process-focused iteration and reflection",
    audience: "Product teams, early founders",
  },
  {
    name: "Global Perspective",
    href: "/blog/categories/global-perspective",
    description: "Stories from emerging markets",
    audience: "Global builders",
  },
  {
    name: "Community Innovation",
    href: "/blog/categories/community-innovation",
    description: "How communities build and grow",
    audience: "Community managers",
  },
  {
    name: "Tech Culture",
    href: "/blog/categories/tech-culture",
    description: "Human and ethical layers of tech",
    audience: "Designers, DEI leaders",
  },
  {
    name: "System Thinking",
    href: "/blog/categories/system-thinking",
    description: "How complex systems connect",
    audience: "System designers",
  },
  {
    name: "The Interface",
    href: "/blog/categories/the-interface",
    description: "UX decisions that shape behavior",
    audience: "Designers, product leads",
  },
  {
    name: "Build Loop",
    href: "/blog/categories/build-loop",
    description: "Fail, iterate, ship stories",
    audience: "Learning from failure",
  },
  {
    name: "Career Stacks",
    href: "/blog/categories/career-stacks",
    description: "Roles, skills, transitions, growth strategies",
    audience: "Students, professionals, career changers",
  },
  {
    name: "Future Stacks",
    href: "/blog/categories/future-stacks",
    description: "Emerging tech: AI, AR/VR, Quantum, Web3, Robotics",
    audience: "Explorers, trend-watchers, technical minds",
  },
  {
    name: "Creator Economy",
    href: "/blog/categories/creator-economy",
    description: "Tools, trends, case studies",
    audience: "Indie creators, digital workers",
  },
  {
    name: "Business Models",
    href: "/blog/categories/business-models-monetization",
    description: "Revenue strategies, pricing, monetization",
    audience: "Founders, product marketers",
  },
  {
    name: "Consumer Behavior",
    href: "/blog/categories/consumer-behavior-attention",
    description: "Audience shifts, demand patterns, psychology",
    audience: "Growth leads, analysts, brand teams",
  },
  {
    name: "Market Maps",
    href: "/blog/categories/ecosystem-shifts-market-maps",
    description: "Competitive changes, sector movements, market signals",
    audience: "Investors, researchers, strategists",
  },
  {
    name: "People Systems",
    href: "/blog/categories/people-systems",
    description: "Team building, communication frameworks, organizational design",
    audience: "Team leads, founders, managers",
  },
];

// Use CMS data if available, otherwise use fallback (same logic as all-topics page)
const finalTopicsData = topicsData || fallbackTopics;

// Helper function to get category slug from href
const getCategorySlug = (topic: any): string => {
  if (topic.href) {
    return topic.href.split('/').pop() || '';
  }
  // Fallback: convert name to slug
  return topic.name.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]+/g, '');
};

// Helper function to assign colors and icons
const getCategoryMeta = (topicName: string) => {
  const metaMap: Record<string, { color: string; icon: string; featured: boolean }> = {
    "build thinking": { color: "blue", icon: "fas fa-hammer", featured: true },
    "learning by doing": { color: "purple", icon: "fas fa-book", featured: true },
    "product lessons": { color: "green", icon: "fas fa-lightbulb", featured: true },
    "startup insight": { color: "red", icon: "fas fa-rocket", featured: false },
    "product strategy": { color: "indigo", icon: "fas fa-chess", featured: true },
    "ai evolution": { color: "violet", icon: "fas fa-brain", featured: true },
    "developer tools": { color: "emerald", icon: "fas fa-tools", featured: false },
    "research bites": { color: "pink", icon: "fas fa-chart-line", featured: false },
    "global perspective": { color: "cyan", icon: "fas fa-globe", featured: false },
    "community innovation": { color: "green", icon: "fas fa-users", featured: false },
    "tech culture": { color: "pink", icon: "fas fa-users-cog", featured: false },
    "system thinking": { color: "emerald", icon: "fas fa-sitemap", featured: false },
    "the interface": { color: "blue", icon: "fas fa-desktop", featured: false },
    "build loop": { color: "orange", icon: "fas fa-sync-alt", featured: false },
    "fail / iterate / ship": { color: "orange", icon: "fas fa-sync-alt", featured: true },
    "career stacks": { color: "red", icon: "fas fa-briefcase", featured: false },
    "future stacks": { color: "violet", icon: "fas fa-rocket", featured: false },
    "creator economy": { color: "pink", icon: "fas fa-paint-brush", featured: false },
    "business models": { color: "indigo", icon: "fas fa-dollar-sign", featured: false },
    "consumer behavior": { color: "cyan", icon: "fas fa-eye", featured: false },
    "market maps": { color: "emerald", icon: "fas fa-map", featured: false },
    "people systems": { color: "orange", icon: "fas fa-network-wired", featured: false },
  };
  
  const key = topicName.toLowerCase();
  return metaMap[key] || { color: "blue", icon: "fas fa-tag", featured: false };
};

// Create enhanced categories from TinaCMS data
const enhancedCategories = finalTopicsData.map((topic: any) => {
  const slug = getCategorySlug(topic);
  const meta = getCategoryMeta(topic.name);
  
  // Count posts for this category
  const categoryPosts = allPosts.filter(
    (post) => post.data.category === slug
  );

  const latestPost = categoryPosts
    .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())[0];

  return {
    slug: slug,
    data: {
      name: topic.name,
      description: topic.description,
      color: meta.color,
      icon: meta.icon,
      featured: meta.featured,
      audience: topic.audience || "Builders and innovators",
    },
    postCount: categoryPosts.length,
    featuredCount: categoryPosts.filter(post => post.data.featured).length,
    latestPost: latestPost || null,
    lastUpdated: latestPost ? latestPost.data.pubDate : null
  };
}).sort((a: any, b: any) => {
  // Sort by featured first, then by post count
  if (a.data.featured !== b.data.featured) {
    return b.data.featured ? 1 : -1;
  }
  return b.postCount - a.postCount;
});

const totalArticles = allPosts.length;
const totalCategories = enhancedCategories.length;
const featuredCategories = enhancedCategories.filter((cat: any) => cat.data.featured);

// Simple date formatting function
const formatDate = (date: Date, options?: { month?: 'short' | 'long', day?: 'numeric' }) => {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: options?.month || "long",
    day: options?.day || "numeric",
  });
};

const pageTitle = "Categories | TinkByte Blog";
const pageDescription = `Explore ${totalCategories} categories with ${totalArticles} articles - from AI Evolution to Product Strategy, discover content that matches your interests.`;
---

<Layout title={pageTitle} description={pageDescription}>
  <!-- Enhanced Categories Hero -->
  <section class="relative py-12 lg:py-16 overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 opacity-10"></div>
    <div class="absolute inset-0 bg-[url('/images/pattern.svg')] opacity-5"></div>

    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-4xl mx-auto text-center">
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-zinc-800/80 backdrop-blur-sm border border-zinc-200 dark:border-zinc-700 mb-6">
          <div class="w-3 h-3 bg-purple-500 rounded-full animate-pulse"></div>
          <span class="text-sm font-bold uppercase tracking-wider text-zinc-700 dark:text-zinc-300">
            EXPLORE BY TOPIC
          </span>
        </div>

        <h1 class="text-4xl lg:text-6xl font-bold text-zinc-900 dark:text-white mb-6">
          Browse
          <span class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            Categories
          </span>
        </h1>

        <p class="text-xl lg:text-2xl text-zinc-600 dark:text-zinc-300 leading-relaxed max-w-3xl mx-auto mb-12">
          Find the topics that matter most in tech. From cutting-edge AI developments to strategic product insights.
        </p>

        <div class="flex justify-center gap-8 text-center">
          <div class="category-stat">
            <div class="stat-number">{totalCategories}</div>
            <div class="stat-label">CATEGORIES</div>
          </div>
          <div class="category-stat">
            <div class="stat-number">{totalArticles}</div>
            <div class="stat-label">TOTAL ARTICLES</div>
          </div>
          {featuredCategories.length > 0 && (
            <div class="category-stat">
              <div class="stat-number">{featuredCategories.length}</div>
              <div class="stat-label">FEATURED</div>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <main class="categories-page" data-theme-aware="true">
    <div class="max-w-7xl mx-auto px-4 py-16">
      
      <!-- Featured Categories Section -->
      {featuredCategories.length > 0 && (
        <section class="mb-20">
          <h2 class="text-2xl font-bold text-zinc-900 dark:text-white mb-8 uppercase tracking-wide flex items-center">
            <i class="fas fa-star mr-3 text-yellow-500"></i>
            Featured Categories
          </h2>
          <!-- FIXED: Using proper Tailwind grid -->
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {featuredCategories.slice(0, 3).map((category: any, index: number) => (
              <div class="newsletter-card" data-newsletter={category.slug}>
                <div class="card-content">
                  <div class="card-header">
                    <div class="category-indicator" data-color={category.data.color}></div>
                    <div class="card-frequency">FEATURED</div>
                  </div>
                  <h3 class="card-title">
                    <a href={`/blog/categories/${category.slug}`}>
                      {category.data.name}
                    </a>
                  </h3>
                  <p class="card-description">{category.data.description}</p>
                  <div class="card-meta">
                    <span class="card-audience">
                      {category.postCount} articles • For {category.data.audience}
                    </span>
                    {category.lastUpdated && (
                      <span class="card-audience">
                        Updated {formatDate(category.lastUpdated, { month: 'short', day: 'numeric' })}
                      </span>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      )}

      <!-- All Categories Section -->
      <section>
        <div class="flex justify-between items-start mb-8">
          <div>
            <h2 class="text-2xl font-bold text-zinc-900 dark:text-white mb-4 uppercase tracking-wide flex items-center">
              <i class="fas fa-th-large mr-3 text-blue-600"></i>
              All Categories
            </h2>
            <p class="text-lg text-zinc-600 dark:text-zinc-300">Choose your area of interest and explore curated content</p>
          </div>
          <Button
            variant="outline"
            href="/blog"
            className="group action-button"
          >
            <span class="flex items-center gap-2">
              ALL ARTICLES
              <i class="fas fa-arrow-right text-sm transition-transform duration-300 group-hover:translate-x-1"></i>
            </span>
          </Button>
        </div>

        <!-- FIXED: Using proper Tailwind grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {enhancedCategories.map((category: any, index: number) => (
            <article class="newsletter-card" data-category={category.slug}>
              <div class="card-content">
                <!-- Category Header -->
                <div class="card-header">
                  <div class="category-indicator" data-color={category.data.color}></div>
                  <div class="card-frequency">
                    {category.data.featured ? "FEATURED" : "CATEGORY"}
                  </div>
                </div>

                <h3 class="card-title">
                  <a href={`/blog/categories/${category.slug}`}>
                    {category.data.name}
                  </a>
                </h3>

                <p class="card-description">{category.data.description}</p>
                
                <div class="card-meta">
                  <span class="card-audience">
                    For {category.data.audience}
                  </span>
                </div>

                <!-- Category Stats -->
                <div class="category-stats">
                  <div class="stat-box">
                    <div class="stat-number">{category.postCount}</div>
                    <div class="stat-label">ARTICLES</div>
                  </div>
                  <div class="stat-box">
                    <div class="stat-number">{category.featuredCount}</div>
                    <div class="stat-label">FEATURED</div>
                  </div>
                </div>

                <!-- Latest Article Preview -->
                {category.latestPost && (
                  <div class="latest-article">
                    <div class="latest-label">LATEST ARTICLE</div>
                    <a 
                      href={`/blog/${category.latestPost.slug}`}
                      class="latest-title"
                    >
                      {category.latestPost.data.title}
                    </a>
                    <div class="latest-date">
                      {formatDate(category.latestPost.data.pubDate)}
                    </div>
                  </div>
                )}

                <!-- Action Button -->
                <div class="card-action">
                  <a href={`/blog/categories/${category.slug}`} class="explore-button">
                    <span class="button-text">EXPLORE {category.data.name.toUpperCase()}</span>
                    <i class="fas fa-arrow-right button-icon"></i>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>

        <!-- Page Navigation -->
        <div class="text-center mt-8">
          <a href="/all-topics" class="nav-link">
            <i class="fas fa-th-large"></i>
            View as Topics
          </a>
        </div>

        <!-- Empty State -->
        {enhancedCategories.length === 0 && (
          <div class="empty-state">
            <div class="empty-icon">
              <i class="fas fa-tags"></i>
            </div>
            <h3 class="empty-title">NO CATEGORIES YET</h3>
            <p class="empty-description">
              Categories will appear here once you start publishing content.
            </p>
            <Button
              href="/blog"
              variant="primary"
              className="empty-action"
            >
              BROWSE ALL ARTICLES
            </Button>
          </div>
        )}
      </section>
    </div>
  </main>

  <!-- Newsletter CTA Section -->
  <section class="py-16 px-4 sm:px-6 bg-zinc-50 dark:bg-zinc-900/50">
    <div class="max-w-4xl mx-auto text-center">
      <h2 class="text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-4">
        Stay Updated
      </h2>
      <p class="text-lg text-zinc-600 dark:text-zinc-400 mb-8">
        Get the latest insights delivered directly to your inbox. Join our community of forward-thinking professionals.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <Button
          variant="primary"
          href="/newsletter"
          className="cta-button"
        >
          SUBSCRIBE TO NEWSLETTER
        </Button>
        <Button
          variant="outline"
          href="/rss.xml"
          className="cta-button"
        >
          RSS FEED
        </Button>
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Categories Page - Using Newsletter Card Styles with Tailwind Grid */
  .categories-page {
    font-family: "Space Grotesk", sans-serif;
    background-color: white;
    color: rgb(17 24 39);
    min-height: 100vh;
  }

  :global(.dark) .categories-page {
    background-color: rgb(15 23 42);
    color: rgb(248 250 252);
  }

  /* Hero Section Stats */
  .category-stat {
    text-align: center;
    padding: 1rem;
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 800;
    color: rgb(17 24 39);
    line-height: 1;
    margin-bottom: 0.5rem;
  }

  :global(.dark) .stat-number {
    color: rgb(248 250 252);
  }

  .stat-label {
    font-size: 0.75rem;
    font-weight: 700;
    color: rgb(55 65 81);
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  :global(.dark) .stat-label {
    color: rgb(226 232 240);
  }

  /* Newsletter Card Styles (Same as working 404 page) */
  .newsletter-card {
    padding: 1.25rem;
    background: white;
    border: 2px solid rgb(229 231 235);
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  :global(.dark) .newsletter-card {
    background: rgb(30 41 59);
    border-color: rgb(51 65 85);
  }

  .newsletter-card:hover {
    border-color: #243788;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  :global(.dark) .newsletter-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  /* Card Content */
  .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .card-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .card-frequency {
    padding: 0.25rem 0.75rem;
    font-size: 0.6875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    background: rgb(248 250 252);
    color: rgb(55 65 81);
    border: 1px solid rgb(229 231 235);
  }

  :global(.dark) .card-frequency {
    background: rgb(30 41 59);
    color: rgb(226 232 240);
    border-color: rgb(51 65 85);
  }

  .card-title {
    font-size: 1rem;
    font-weight: 700;
    color: rgb(17 24 39);
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  :global(.dark) .card-title {
    color: rgb(248 250 252);
  }

  .card-title a {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .card-title a:hover {
    color: #243788;
  }

  :global(.dark) .card-title a:hover {
    color: rgb(96 165 250);
  }

  .card-description {
    font-size: 0.875rem;
    color: rgb(55 65 81);
    line-height: 1.3;
    margin-bottom: 0.5rem;
    flex-grow: 1;
  }

  :global(.dark) .card-description {
    color: rgb(226 232 240);
  }

  .card-meta {
    margin-bottom: 1rem;
  }

  .card-audience {
    font-size: 0.75rem;
    color: rgb(107 114 128);
    font-style: italic;
    word-wrap: break-word;
    hyphens: auto;
    line-height: 1.2;
    display: block;
    margin-bottom: 0.25rem;
  }

  :global(.dark) .card-audience {
    color: rgb(148 163 184);
  }

  /* Category Indicators */
  .category-indicator {
    width: 12px;
    height: 12px;
    border-radius: 2px;
    flex-shrink: 0;
  }

  .category-indicator[data-color="purple"] { background: #8B5CF6; }
  .category-indicator[data-color="blue"] { background: #243788; }
  .category-indicator[data-color="green"] { background: #10B981; }
  .category-indicator[data-color="orange"] { background: #F59E0B; }
  .category-indicator[data-color="red"] { background: #EF4444; }
  .category-indicator[data-color="cyan"] { background: #06B6D4; }
  .category-indicator[data-color="pink"] { background: #EC4899; }
  .category-indicator[data-color="indigo"] { background: #6366F1; }
  .category-indicator[data-color="violet"] { background: #8B5CF6; }
  .category-indicator[data-color="emerald"] { background: #10B981; }

  /* Category Stats */
  .category-stats {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .stat-box {
    text-align: center;
    padding: 1rem;
    background: rgb(248 250 252);
    border: 1px solid rgb(229 231 235);
  }

  :global(.dark) .stat-box {
    background: rgb(30 41 59);
    border-color: rgb(51 65 85);
  }

  .stat-box .stat-number {
    font-size: 1.5rem;
    font-weight: 800;
    color: rgb(17 24 39);
    line-height: 1;
    margin-bottom: 0.25rem;
  }

  :global(.dark) .stat-box .stat-number {
    color: rgb(248 250 252);
  }

  .stat-box .stat-label {
    font-size: 0.625rem;
    font-weight: 700;
    color: rgb(107 114 128);
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  :global(.dark) .stat-box .stat-label {
    color: rgb(148 163 184);
  }

  /* Latest Article */
  .latest-article {
    padding: 1rem;
    background: rgb(248 250 252);
    border: 1px solid rgb(229 231 235);
    margin-bottom: 1.5rem;
  }

  :global(.dark) .latest-article {
    background: rgb(30 41 59);
    border-color: rgb(51 65 85);
  }

  .latest-label {
    font-size: 0.625rem;
    font-weight: 700;
    color: rgb(107 114 128);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-bottom: 0.5rem;
  }

  :global(.dark) .latest-label {
    color: rgb(148 163 184);
  }

  .latest-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: rgb(17 24 39);
    text-decoration: none;
    line-height: 1.3;
    display: block;
    margin-bottom: 0.5rem;
    transition: color 0.3s ease;
  }

  :global(.dark) .latest-title {
    color: rgb(248 250 252);
  }

  .latest-title:hover {
    color: #243788;
  }

  :global(.dark) .latest-title:hover {
    color: rgb(96 165 250);
  }

  .latest-date {
    font-size: 0.75rem;
    color: rgb(107 114 128);
  }

  :global(.dark) .latest-date {
    color: rgb(148 163 184);
  }

  /* Explore Button */
  .explore-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    padding: 1rem;
    background: transparent;
    color: #243788;
    border: 2px solid #243788;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    text-decoration: none;
    transition: all 0.3s ease;
    font-family: inherit;
    margin-top: auto;
  }

  .explore-button:hover {
    background: #243788;
    color: white;
  }

  :global(.dark) .explore-button {
    color: rgb(96 165 250);
    border-color: rgb(96 165 250);
  }

  :global(.dark) .explore-button:hover {
    background: rgb(96 165 250);
    color: rgb(15 23 42);
  }

  .button-icon {
    transition: transform 0.3s ease;
  }

  .explore-button:hover .button-icon {
    transform: translateX(4px);
  }

  /* Navigation Link */
  .nav-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border: 2px solid rgb(229 231 235);
    background: transparent;
    color: rgb(55 65 81);
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
    text-decoration: none;
  }

  :global(.dark) .nav-link {
    border-color: rgb(51 65 85);
    color: rgb(226 232 240);
  }

  .nav-link:hover {
    border-color: #243788;
    color: #243788;
  }

  :global(.dark) .nav-link:hover {
    border-color: rgb(96 165 250);
    color: rgb(96 165 250);
  }

  /* Action Buttons */
  .action-button {
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 700;
  }

  .cta-button {
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 700;
  }

  /* Empty State */
  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
  }

  .empty-icon {
    font-size: 4rem;
    color: rgb(107 114 128);
    margin-bottom: 1.5rem;
  }

  :global(.dark) .empty-icon {
    color: rgb(148 163 184);
  }

  .empty-title {
    font-size: 1.5rem;
    font-weight: 800;
    color: rgb(17 24 39);
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  :global(.dark) .empty-title {
    color: rgb(248 250 252);
  }

  .empty-description {
    font-size: 1rem;
    color: rgb(55 65 81);
    margin-bottom: 2rem;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
  }

  :global(.dark) .empty-description {
    color: rgb(226 232 240);
  }

  /* Gradient text animation */
  @keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .bg-gradient-to-r.bg-clip-text {
    background-size: 200% 200%;
    animation: gradient 3s ease-in-out infinite;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Make newsletter cards clickable (same as newsletter page)
    const newsletterCards = document.querySelectorAll(".newsletter-card");

    newsletterCards.forEach((card) => {
      card.addEventListener("click", (e) => {
        const target = e.target as HTMLElement;
        if (target.tagName === "A") return;

        const link = card.querySelector("a");
        if (link) {
          window.location.href = link.href;
        }
      });
    });

    // Enhanced category card interactions
    newsletterCards.forEach((card, index) => {
      const element = card as HTMLElement;
      
      // Enhanced hover effects
      card.addEventListener('mouseenter', () => {
        element.style.transform = 'translateY(-4px) scale(1.02)';
      });
      
      card.addEventListener('mouseleave', () => {
        element.style.transform = 'translateY(0) scale(1)';
      });
    });

    // Smooth scroll for category links
    const categoryLinks = document.querySelectorAll('a[href^="/blog/categories/"]');
    
    categoryLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        // Add loading state
        const card = link.closest('.newsletter-card');
        if (card) {
          const element = card as HTMLElement;
          element.style.opacity = '0.7';
          element.style.transform = 'scale(0.98)';
        }
      });
    });

    // Analytics tracking
    function trackCategoryInteraction(action: string, category: string) {
      const windowWithGtag = window as any;
      if (typeof windowWithGtag.gtag !== 'undefined') {
        windowWithGtag.gtag('event', 'category_interaction', {
          action: action,
          category: category,
          timestamp: Date.now()
        });
      }
    }

    // Track category clicks
    categoryLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        const categoryName = link.textContent?.trim() || 'Unknown';
        trackCategoryInteraction('click', categoryName);
      });
    });
  });
</script>