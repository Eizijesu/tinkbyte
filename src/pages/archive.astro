---
// src/pages/archive.astro - Enhanced with proper author handling
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

// Get all posts from TinaCMS
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Sort by date (newest first)
const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

// Group by year
const postsByYear = sortedPosts.reduce(
  (acc, post) => {
    const year = post.data.pubDate.getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, typeof sortedPosts>
);

const years = Object.keys(postsByYear)
  .map(Number)
  .sort((a, b) => b - a);

// Get categories for filtering
const allCategories = [
  ...new Set(allPosts.map((post) => post.data.category).filter(Boolean)),
];

// Helper function to format category display name
const formatCategoryName = (category: string) => {
  return category.replace(/-/g, " ").replace(/\b\w/g, (l) => l.toUpperCase());
};

// Helper function to get author name with proper fallback
const getAuthorName = (post: any) => {
  return post.data.authorInfo?.name || post.data.author || "TinkByte Team";
};

// Statistics
const totalPosts = allPosts.length;
const totalAudioPosts = allPosts.filter((post) => post.data.audioUrl).length;
const totalFeatured = allPosts.filter((post) => post.data.featured).length;
---

<Layout
  title="Archive | TinkByte - Complete Article Collection"
  description="Browse all articles by year and category. Explore our complete collection of tech insights and product development guides."
>
  <!-- Enhanced Archive Header -->
  <section class="relative py-16 lg:py-24 overflow-hidden">
    <div
      class="absolute inset-0 bg-gradient-to-r from-zinc-600 via-gray-600 to-slate-600 opacity-10"
    >
    </div>
    <div class="absolute inset-0 bg-[url('/images/pattern.svg')] opacity-5">
    </div>

    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-4xl mx-auto text-center">
        <h1
          class="text-4xl lg:text-6xl font-bold text-zinc-900 dark:text-white mb-6"
        >
          Article
          <span
            class="bg-gradient-to-r from-zinc-600 to-gray-600 bg-clip-text text-transparent"
          >
            Archive
          </span>
        </h1>

        <p
          class="text-xl lg:text-2xl text-zinc-600 dark:text-zinc-300 leading-relaxed max-w-3xl mx-auto mb-12"
        >
          Browse our complete collection of {totalPosts} articles organized by publication
          year. Every piece of content we've published since we started.
        </p>

        <!-- Enhanced Statistics Grid -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-2xl mx-auto">
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {totalPosts}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Total Articles
            </div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {years.length}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Years
            </div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {totalAudioPosts}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Audio Posts
            </div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-zinc-900 dark:text-white mb-1">
              {totalFeatured}
            </div>
            <div
              class="text-sm text-zinc-500 dark:text-zinc-400 uppercase tracking-wider"
            >
              Featured
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Filter Section -->
  <section class="py-8 px-4 border-b border-zinc-200 dark:border-zinc-700">
    <div class="container mx-auto">
      <div class="max-w-4xl mx-auto">
        <div class="flex flex-wrap gap-2 justify-center">
          <button
            class="filter-btn active px-4 py-2 text-sm font-medium rounded-sm border border-zinc-300 dark:border-zinc-600 hover:border-blue-500 transition-colors"
            data-filter="all"
          >
            All Articles ({totalPosts})
          </button>
          {
            allCategories.map((category) => {
              const count = allPosts.filter(
                (post) => post.data.category === category
              ).length;
              return (
                <button
                  class="filter-btn px-4 py-2 text-sm font-medium rounded-sm border border-zinc-300 dark:border-zinc-600 hover:border-blue-500 transition-colors"
                  data-filter={category}
                >
                  {formatCategoryName(category)} ({count})
                </button>
              );
            })
          }
          <button
            class="filter-btn px-4 py-2 text-sm font-medium rounded-sm border border-zinc-300 dark:border-zinc-600 hover:border-blue-500 transition-colors"
            data-filter="audio"
          >
            <i class="fas fa-headphones mr-1"></i>
            Audio ({totalAudioPosts})
          </button>
          <button
            class="filter-btn px-4 py-2 text-sm font-medium rounded-sm border border-zinc-300 dark:border-zinc-600 hover:border-blue-500 transition-colors"
            data-filter="featured"
          >
            <i class="fas fa-star mr-1"></i>
            Featured ({totalFeatured})
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Archive by Year -->
  <section class="py-16 px-4 sm:px-6">
    <div class="container mx-auto">
      <div class="max-w-4xl mx-auto">
        {
          years.map((year) => (
            <div class="year-section mb-12" data-year={year}>
              <h2 class="text-3xl font-bold text-zinc-900 dark:text-white mb-8 border-b-2 border-zinc-200 dark:border-zinc-700 pb-4">
                {year}
                <span class="text-lg font-normal text-zinc-500 dark:text-zinc-400 ml-2">
                  ({postsByYear[year].length} articles)
                </span>
              </h2>

              <div class="space-y-6">
                {postsByYear[year].map((post) => (
                  <article
                    class="post-item group p-6 bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-sm hover:border-zinc-300 dark:hover:border-zinc-600 hover:shadow-lg transition-all duration-200"
                    data-category={post.data.category}
                    data-audio={post.data.audioUrl ? "true" : "false"}
                    data-featured={post.data.featured ? "true" : "false"}
                  >
                    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
                      <div class="flex-1">
                        <div class="flex items-center gap-3 mb-3 flex-wrap">
                          <span class="text-xs font-semibold px-3 py-1 bg-zinc-100 dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 rounded uppercase tracking-wide">
                            {formatCategoryName(post.data.category)}
                          </span>
                          <time class="text-sm text-zinc-500 dark:text-zinc-400">
                            {post.data.pubDate.toLocaleDateString("en-US", {
                              month: "long",
                              day: "numeric",
                            })}
                          </time>
                          {post.data.featured && (
                            <span class="text-xs font-semibold px-2 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 rounded uppercase tracking-wide">
                              <i class="fas fa-star mr-1" />
                              Featured
                            </span>
                          )}
                          {post.data.audioUrl && (
                            <span class="text-xs font-semibold px-2 py-1 bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 rounded uppercase tracking-wide">
                              <i class="fas fa-headphones mr-1" />
                              Audio
                            </span>
                          )}
                          {post.data.trending && (
                            <span class="text-xs font-semibold px-2 py-1 bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-300 rounded uppercase tracking-wide">
                              <i class="fas fa-fire mr-1" />
                              Trending
                            </span>
                          )}
                        </div>

                        <h3 class="text-lg font-semibold text-zinc-900 dark:text-white group-hover:text-zinc-700 dark:group-hover:text-zinc-300 transition-colors mb-2">
                          <a
                            href={`/blog/${post.slug}`}
                            class="hover:underline"
                          >
                            {post.data.title}
                          </a>
                        </h3>

                        <p class="text-sm text-zinc-600 dark:text-zinc-400 line-clamp-2 leading-relaxed mb-3">
                          {post.data.excerpt}
                        </p>

                        <div class="flex items-center gap-4 text-sm text-zinc-500 dark:text-zinc-400 flex-wrap">
                          <span class="flex items-center gap-1">
                            <i class="fas fa-user" />
                            By {getAuthorName(post)}
                          </span>
                          <span class="flex items-center gap-1">
                            <i class="fas fa-clock" />
                            {post.data.readTime || "5 min read"}
                          </span>
                          {post.data.tags && post.data.tags.length > 0 && (
                            <div class="flex items-center gap-1">
                              <i class="fas fa-tags" />
                              <span>
                                {post.data.tags.slice(0, 2).join(", ")}
                              </span>
                              {post.data.tags.length > 2 && (
                                <span class="text-zinc-400">
                                  +{post.data.tags.length - 2} more
                                </span>
                              )}
                            </div>
                          )}
                        </div>
                      </div>

                      {post.data.image && (
                        <div class="lg:w-32 lg:h-24 w-full h-32 flex-shrink-0">
                          <img
                            src={post.data.image}
                            alt={post.data.imageAlt || post.data.title}
                            class="w-full h-full object-cover rounded border border-zinc-200 dark:border-zinc-700"
                            loading="lazy"
                          />
                        </div>
                      )}
                    </div>
                  </article>
                ))}
              </div>
            </div>
          ))
        }

        <!-- Empty State -->
        {
          allPosts.length === 0 && (
            <div class="text-center py-16">
              <div class="w-24 h-24 bg-zinc-100 dark:bg-zinc-800 rounded-sm flex items-center justify-center mx-auto mb-8">
                <i class="fas fa-archive text-3xl text-zinc-400" />
              </div>
              <h2 class="text-2xl font-bold text-zinc-900 dark:text-white mb-4">
                No Articles Yet
              </h2>
              <p class="text-zinc-600 dark:text-zinc-400 mb-8">
                We're working on bringing you great content. Check back soon!
              </p>
              <a
                href="/"
                class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-sm hover:bg-blue-700 transition-colors"
              >
                <i class="fas fa-home mr-2" />
                Back to Home
              </a>
            </div>
          )
        }
      </div>
    </div>
  </section>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .bg-gradient-to-r.bg-clip-text {
    background-size: 200% 200%;
    animation: gradient 3s ease-in-out infinite;
  }

  .filter-btn.active {
    background-color: rgb(59 130 246);
    color: white;
    border-color: rgb(59 130 246);
  }

  .filter-btn:hover {
    border-color: rgb(59 130 246);
  }

  .post-item.hidden {
    display: none;
  }

  .year-section.hidden {
    display: none;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const filterButtons = document.querySelectorAll(".filter-btn");
    const postItems = document.querySelectorAll(".post-item");
    const yearSections = document.querySelectorAll(".year-section");

    filterButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const filter = button.getAttribute("data-filter");

        // Update active button
        filterButtons.forEach((btn) => btn.classList.remove("active"));
        button.classList.add("active");

        // Filter posts
        postItems.forEach((post) => {
          const category = post.getAttribute("data-category");
          const hasAudio = post.getAttribute("data-audio") === "true";
          const isFeatured = post.getAttribute("data-featured") === "true";

          let shouldShow = false;

          switch (filter) {
            case "all":
              shouldShow = true;
              break;
            case "audio":
              shouldShow = hasAudio;
              break;
            case "featured":
              shouldShow = isFeatured;
              break;
            default:
              shouldShow = category === filter;
          }

          if (shouldShow) {
            post.classList.remove("hidden");
          } else {
            post.classList.add("hidden");
          }
        });

        // Show/hide year sections based on visible posts
        yearSections.forEach((yearSection) => {
          const visiblePosts = yearSection.querySelectorAll(
            ".post-item:not(.hidden)"
          );
          if (visiblePosts.length > 0) {
            yearSection.classList.remove("hidden");
          } else {
            yearSection.classList.add("hidden");
          }
        });
      });
    });

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
      anchor.addEventListener("click", function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute("href"));
        if (target) {
          target.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });
        }
      });
    });
  });
</script>
