---
// src/pages/profile/premium.astro - MOBILE-FIRST RESPONSIVE
import ProfileLayout from "../../layouts/ProfileLayout.astro";
---

<ProfileLayout
  title="Premium Membership | TinkByte"
  description="Upgrade to TinkByte Premium for exclusive content and features"
>
  <div class="premium-page">
    <!-- Current Status -->
    <div class="status-section" id="premium-status">
      <div class="loading-state">
        <div class="loading-spinner"></div>
        <p>Loading membership status...</p>
      </div>
    </div>

    <!-- Premium Features -->
    <div class="section">
      <h2 class="section-title">
        <i class="fas fa-crown"></i>
        Premium Features
      </h2>

      <div class="features-grid">
        <div class="feature-item">
          <div class="feature-icon">
            <i class="fas fa-lock-open"></i>
          </div>
          <div class="feature-content">
            <h3 class="feature-name">Exclusive Content</h3>
            <p class="feature-description">
              Premium articles and deep-dive analyses
            </p>
          </div>
        </div>

        <div class="feature-item">
          <div class="feature-icon">
            <i class="fas fa-rocket"></i>
          </div>
          <div class="feature-content">
            <h3 class="feature-name">Early Access</h3>
            <p class="feature-description">Be the first to try new features</p>
          </div>
        </div>

        <div class="feature-item">
          <div class="feature-icon">
            <i class="fas fa-ban"></i>
          </div>
          <div class="feature-content">
            <h3 class="feature-name">Ad-Free Experience</h3>
            <p class="feature-description">Distraction-free reading</p>
          </div>
        </div>

        <div class="feature-item">
          <div class="feature-icon">
            <i class="fas fa-headset"></i>
          </div>
          <div class="feature-content">
            <h3 class="feature-name">Priority Support</h3>
            <p class="feature-description">Faster response times</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Pricing Plans -->
    <div class="section" id="pricing-section">
      <h2 class="section-title">
        <i class="fas fa-credit-card"></i>
        Choose Your Plan
      </h2>

      <div class="pricing-container">
        <div class="pricing-card">
          <div class="plan-header">
            <h3 class="plan-name">Monthly</h3>
            <div class="plan-price">
              <span class="currency">$</span>
              <span class="amount">5</span>
              <span class="period">/month</span>
            </div>
          </div>

          <div class="plan-features">
            <div class="feature-check">
              <i class="fas fa-check"></i>
              <span>All premium features</span>
            </div>
            <div class="feature-check">
              <i class="fas fa-check"></i>
              <span>Cancel anytime</span>
            </div>
          </div>

          <button type="button" class="plan-button" data-plan="monthly">
            <i class="fas fa-credit-card"></i>
            Start Monthly Plan
          </button>
        </div>

        <div class="pricing-card popular">
          <div class="popular-badge">
            <i class="fas fa-star"></i>
            Most Popular
          </div>

          <div class="plan-header">
            <h3 class="plan-name">Annual</h3>
            <div class="plan-price">
              <span class="currency">$</span>
              <span class="amount">49</span>
              <span class="period">/year</span>
            </div>
            <div class="plan-savings">Save $11 per year</div>
          </div>

          <div class="plan-features">
            <div class="feature-check">
              <i class="fas fa-check"></i>
              <span>All premium features</span>
            </div>
            <div class="feature-check">
              <i class="fas fa-check"></i>
              <span>2 months free</span>
            </div>
          </div>

          <button type="button" class="plan-button primary" data-plan="annual">
            <i class="fas fa-crown"></i>
            Start Annual Plan
          </button>
        </div>
      </div>
    </div>
  </div>
</ProfileLayout>

<style is:global>
  /* Mobile-First Premium Page Styles */
  .premium-page {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }

  .section {
    background: white;
    border: 2px solid #e2e8f0;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    border-radius: 0;
  }

  html.dark .section {
    background: #1e293b;
    border-color: #334155;
  }

  .section-title {
    font-size: 1rem;
    font-weight: 700;
    color: #1e293b;
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  html.dark .section-title {
    color: #f1f5f9;
  }

  /* Status Section - Mobile First */
  .status-section {
    background: white;
    border: 2px solid #e2e8f0;
    padding: 1.5rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    border-radius: 0;
  }

  html.dark .status-section {
    background: #1e293b;
    border-color: #334155;
  }

  .status-premium {
    background: linear-gradient(135deg, #243788 0%, #1e2d6b 100%);
    color: white;
    border-color: #243788;
  }

  html.dark .status-premium {
    background: linear-gradient(135deg, #b4bce1 0%, #94a3b8 100%);
    color: #0f172a;
    border-color: #b4bce1;
  }

  .status-icon {
    width: 48px;
    height: 48px;
    background: #64748b;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.25rem;
    border-radius: 0;
  }

  .status-premium .status-icon {
    background: rgba(255, 255, 255, 0.2);
    color: white;
  }

  html.dark .status-premium .status-icon {
    background: rgba(15, 23, 42, 0.2);
    color: #0f172a;
  }

  .status-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .status-description {
    margin: 0;
    opacity: 0.9;
    font-size: 0.875rem;
    max-width: 400px;
    line-height: 1.4;
  }

  .loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    color: #64748b;
    font-size: 0.875rem;
  }

  html.dark .loading-state {
    color: #94a3b8;
  }

  /* SQUARE SPINNER - Mobile First */
  .loading-spinner {
    width: 24px;
    height: 24px;
    border: 2px solid #e2e8f0;
    border-top: 2px solid #243788;
    border-radius: 0; /* SQUARE */
    animation: spin 1s linear infinite;
  }

  html.dark .loading-spinner {
    border-color: #334155;
    border-top-color: #b4bce1;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  /* Features Grid - Mobile First */
  .features-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .feature-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: #f8fafc;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    text-align: center;
    border-radius: 0;
  }

  .feature-item:hover {
    border-color: #243788;
    transform: translateY(-2px);
  }

  html.dark .feature-item {
    background: #0f172a;
    border-color: #334155;
  }

  html.dark .feature-item:hover {
    border-color: #b4bce1;
  }

  .feature-icon {
    width: 48px;
    height: 48px;
    background: #243788;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.125rem;
    flex-shrink: 0;
    border-radius: 0;
  }

  html.dark .feature-icon {
    background: #b4bce1;
    color: #0f172a;
  }

  .feature-content {
    flex: 1;
  }

  .feature-name {
    font-size: 0.875rem;
    font-weight: 600;
    color: #1e293b;
    margin: 0 0 0.5rem 0;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  html.dark .feature-name {
    color: #f1f5f9;
  }

  .feature-description {
    font-size: 0.8125rem;
    color: #64748b;
    margin: 0;
    line-height: 1.4;
  }

  html.dark .feature-description {
    color: #94a3b8;
  }

  /* Pricing Container - Mobile First */
  .pricing-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .pricing-card {
    background: #f8fafc;
    border: 2px solid #e2e8f0;
    padding: 1.5rem;
    text-align: center;
    position: relative;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    border-radius: 0;
  }

  html.dark .pricing-card {
    background: #0f172a;
    border-color: #334155;
  }

  .pricing-card:hover {
    transform: translateY(-2px);
    border-color: #243788;
  }

  html.dark .pricing-card:hover {
    border-color: #b4bce1;
  }

  .pricing-card.popular {
    border-color: #243788;
    background: rgba(36, 55, 136, 0.05);
    transform: none; /* No scale on mobile */
  }

  html.dark .pricing-card.popular {
    border-color: #b4bce1;
    background: rgba(180, 188, 225, 0.05);
  }

  .popular-badge {
    position: absolute;
    top: -0.75rem;
    left: 50%;
    transform: translateX(-50%);
    background: #243788;
    color: white;
    padding: 0.5rem 1rem;
    font-size: 0.75rem;
    font-weight: 700;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border-radius: 0;
  }

  html.dark .popular-badge {
    background: #b4bce1;
    color: #0f172a;
  }

  .plan-header {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .plan-name {
    font-size: 1rem;
    font-weight: 700;
    color: #1e293b;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  html.dark .plan-name {
    color: #f1f5f9;
  }

  .plan-price {
    display: flex;
    align-items: baseline;
    justify-content: center;
    gap: 0.25rem;
  }

  .currency {
    font-size: 1rem;
    font-weight: 600;
    color: #243788;
  }

  html.dark .currency {
    color: #b4bce1;
  }

  .amount {
    font-size: 2.5rem;
    font-weight: 800;
    color: #1e293b;
    line-height: 1;
  }

  html.dark .amount {
    color: #f1f5f9;
  }

  .period {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 500;
  }

  html.dark .period {
    color: #94a3b8;
  }

  .plan-savings {
    font-size: 0.75rem;
    color: #10b981;
    font-weight: 600;
    background: rgba(16, 185, 129, 0.1);
    padding: 0.375rem 0.75rem;
    display: inline-block;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border-radius: 0;
  }

  .plan-features {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex: 1;
  }

  .feature-check {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    font-size: 0.875rem;
    color: #64748b;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    font-weight: 600;
  }

  html.dark .feature-check {
    color: #94a3b8;
  }

  .feature-check i {
    color: #10b981;
    font-size: 0.875rem;
    width: 16px;
    flex-shrink: 0;
  }

  .plan-button {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 1rem;
    background: transparent;
    color: #243788;
    border: 2px solid #243788;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    border-radius: 0;
    min-height: 48px; /* Touch-friendly */
  }

  .plan-button:hover {
    background: #243788;
    color: white;
    transform: translateY(-2px);
  }

  .plan-button.primary {
    background: #243788;
    color: white;
  }

  .plan-button.primary:hover {
    background: #1e2d6b;
    transform: translateY(-2px);
  }

  .plan-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  html.dark .plan-button {
    color: #b4bce1;
    border-color: #b4bce1;
  }

  html.dark .plan-button:hover {
    background: #b4bce1;
    color: #0f172a;
  }

  html.dark .plan-button.primary {
    background: #b4bce1;
    color: #0f172a;
  }

  html.dark .plan-button.primary:hover {
    background: #94a3b8;
  }

  /* Tablet Styles (768px and up) */
  @media (min-width: 768px) {
    .premium-page {
      padding: 1.5rem;
      gap: 1.5rem;
    }

    .section {
      padding: 1.5rem;
      gap: 1.5rem;
    }

    .section-title {
      font-size: 1.125rem;
    }

    .status-section {
      padding: 2rem;
    }

    .status-icon {
      width: 60px;
      height: 60px;
      font-size: 1.5rem;
    }

    .status-title {
      font-size: 1.5rem;
    }

    /* Features Grid - 2 columns on tablet */
    .features-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1.5rem;
    }

    .feature-item {
      flex-direction: row;
      text-align: left;
      align-items: flex-start;
    }

    /* Pricing - Side by side on tablet */
    .pricing-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
      max-width: 800px;
      margin: 0 auto;
    }

    .pricing-card.popular {
      transform: scale(1.02);
    }

    .plan-price {
      gap: 0.5rem;
    }

    .amount {
      font-size: 3rem;
    }

    .currency {
      font-size: 1.25rem;
    }

    .feature-check {
      justify-content: flex-start;
    }
  }

  /* Desktop Styles (1024px and up) */
  @media (min-width: 1024px) {
    .premium-page {
      padding: 2rem;
      gap: 2rem;
    }

    .section {
      padding: 2rem;
      gap: 2rem;
    }

    .section-title {
      font-size: 1.25rem;
    }

    /* Features Grid - 4 columns on desktop */
    .features-grid {
      grid-template-columns: repeat(4, 1fr);
    }

    .pricing-card.popular {
      transform: scale(1.05);
    }

    .pricing-card:hover {
      transform: translateY(-4px);
    }

    .pricing-card.popular:hover {
      transform: scale(1.05) translateY(-4px);
    }
  }

  /* Large Desktop (1200px and up) */
  @media (min-width: 1200px) {
    .features-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .feature-item {
      padding: 2rem;
    }
  }
</style>

<script>
  import { authManager } from "../../lib/auth.js";

  class PremiumPageManager {
    private currentUser: any = null;
    private subscription: any = null;
    private initialized = false;

    constructor() {
      this.init();
    }

    async init() {
      if (this.initialized) return;

      try {
        console.log("🚀 Premium: Starting initialization...");
        await this.loadPremiumStatus();
        this.setupEventListeners();
        this.initialized = true;
        console.log("✅ Premium: Initialization complete");
      } catch (error) {
        console.error("❌ Premium: Initialization failed:", error);
        this.updateStatusSection();
      }
    }

    async loadPremiumStatus() {
      try {
        // Initialize auth manager
        await authManager.initialize();

        // Check authentication
        this.currentUser = authManager.getUser();

        if (!this.currentUser) {
          console.log("❌ Premium: Not authenticated, redirecting...");
          window.location.href = "/auth/signin";
          return;
        }

        console.log("✅ Premium: User authenticated:", this.currentUser.email);

        // Load subscription status (placeholder for now)
        this.subscription = null; // TODO: Load actual subscription from database
        this.updateStatusSection();

        // Load any additional background data
        await this.loadBackgroundData();
      } catch (error) {
        console.error("❌ Premium: Error loading status:", error);
        this.updateStatusSection();
      }
    }

    async loadBackgroundData() {
      try {
        // TODO: Load actual subscription data from your database
        // For now, we'll simulate it
        console.log("📊 Premium: Loading background data...");

        // Example: Check if user has premium subscription
        // const { data: subscription } = await supabase
        //   .from('subscriptions')
        //   .select('*')
        //   .eq('user_id', this.currentUser.id)
        //   .eq('status', 'active')
        //   .single();

        this.subscription = null; // No premium subscription found
        this.updateStatusSection();
      } catch (error) {
        console.error("❌ Premium: Error loading background data:", error);
      }
    }

    updateStatusSection() {
      const statusSection = document.getElementById(
        "premium-status"
      ) as HTMLElement;
      if (!statusSection) return;

      if (this.subscription) {
        // User has premium subscription
        statusSection.className = "status-section status-premium";
        statusSection.innerHTML = `
          <div class="status-icon">
            <i class="fas fa-crown"></i>
          </div>
          <h2 class="status-title">Premium Active</h2>
          <p class="status-description">
            Your premium membership is active
          </p>
        `;

        // Hide pricing section since user already has premium
        const pricingSection = document.getElementById("pricing-section");
        if (pricingSection) {
          pricingSection.style.display = "none";
        }
      } else {
        // User is on free plan
        statusSection.className = "status-section";
        statusSection.innerHTML = `
          <div class="status-icon">
            <i class="fas fa-user"></i>
          </div>
          <h2 class="status-title">Free Member</h2>
          <p class="status-description">
            Upgrade to Premium for exclusive content and features
          </p>
        `;

        // Show pricing section
        const pricingSection = document.getElementById("pricing-section");
        if (pricingSection) {
          pricingSection.style.display = "block";
        }
      }
    }

    setupEventListeners() {
      const planButtons = document.querySelectorAll(
        ".plan-button[data-plan]"
      ) as NodeListOf<HTMLButtonElement>;
      planButtons.forEach((button) => {
        button.addEventListener("click", (event) =>
          this.handlePlanSelection(event)
        );
      });
    }

    async handlePlanSelection(event: Event) {
      const button = event.currentTarget as HTMLButtonElement;
      const plan = button.getAttribute("data-plan");

      if (!this.currentUser) {
        this.showToast("Please sign in to subscribe", "error");
        return;
      }

      console.log("💳 Premium: Plan selection:", plan);

      const originalContent = button.innerHTML;
      button.disabled = true;
      button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';

      try {
        // TODO: Integrate with your payment processor (Stripe, etc.)
        // For now, we'll simulate the process
        await new Promise((resolve) => setTimeout(resolve, 2000));

        // Simulate successful payment
        this.showToast("Payment integration coming soon!", "success");

        // TODO: After successful payment, update subscription status
        // this.subscription = { plan, status: 'active' };
        // this.updateStatusSection();
      } catch (error) {
        console.error("❌ Premium: Subscription error:", error);
        this.showToast("Failed to process subscription", "error");
      } finally {
        button.disabled = false;
        button.innerHTML = originalContent;
      }
    }

    showToast(message: string, type: "success" | "error" = "success") {
      const toast = document.createElement("div");
      toast.className = `toast ${type}`;
      toast.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 1.5rem;
        background: ${type === "success" ? "#10b981" : "#ef4444"};
        color: white;
        font-weight: 600;
        font-size: 0.875rem;
        z-index: 10000;
        opacity: 0;
        transform: translateX(100%);
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        border-radius: 0;
      `;

      toast.innerHTML = `
        <i class="fas fa-${type === "success" ? "check-circle" : "exclamation-triangle"}"></i>
        ${message}
      `;

      document.body.appendChild(toast);

      // Show toast
      setTimeout(() => {
        toast.style.opacity = "1";
        toast.style.transform = "translateX(0)";
      }, 100);

      // Hide toast after delay
      setTimeout(() => {
        toast.style.opacity = "0";
        toast.style.transform = "translateX(100%)";
        setTimeout(() => toast.remove(), 300);
      }, 3000);
    }

    // Public method to refresh status
    async refreshStatus() {
      await this.loadPremiumStatus();
    }
  }

  // Initialize when DOM is ready
  document.addEventListener("DOMContentLoaded", () => {
    new PremiumPageManager();
  });
</script>
