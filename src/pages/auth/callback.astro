---
// src/pages/auth/callback.astro
import Layout from "../../layouts/Layout.astro";
---

<Layout
  title="Authentication Callback | TinkByte"
  description="Processing your authentication request..."
>
  <div class="callback-container">
    <div class="callback-content">
      <div class="square-spinner-large"></div>
      <h1>Processing Authentication</h1>
      <p>Please wait while we complete your sign in...</p>
    </div>
  </div>
</Layout>

<style>
  .callback-container {
    min-height: 100vh;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
  }

  :global(.dark) .callback-container {
    background: linear-gradient(
      135deg,
      rgb(15, 23, 42) 0%,
      rgb(30, 41, 59) 100%
    );
  }

  .callback-content {
    text-align: center;
    max-width: 400px;
  }

  .square-spinner-large {
    width: 48px;
    height: 48px;
    border: 3px solid rgba(36, 55, 136, 0.2);
    border-top: 3px solid #243788;
    background: transparent;
    margin: 0 auto 2rem;
    animation: square-spin 1s linear infinite;
  }

  @keyframes square-spin {
    0% {
      transform: rotate(0deg);
    }
    25% {
      transform: rotate(90deg);
    }
    50% {
      transform: rotate(180deg);
    }
    75% {
      transform: rotate(270deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  :global(.dark) .square-spinner-large {
    border-color: rgba(180, 188, 225, 0.2);
    border-top-color: #b4bce1;
  }

  h1 {
    font-size: 1.5rem;
    font-weight: 700;
    color: rgb(15, 23, 42);
    margin-bottom: 1rem;
  }

  :global(.dark) h1 {
    color: rgb(248, 250, 252);
  }

  p {
    color: #64748b;
    font-size: 1rem;
    margin: 0;
  }

  :global(.dark) p {
    color: rgb(148, 163, 184);
  }
</style>

<script>
  import { authManager } from "../../lib/auth.js";

  document.addEventListener("DOMContentLoaded", async () => {
    console.log("ðŸ”„ Callback: Processing authentication...");

    try {
      // Initialize auth manager
      await authManager.initialize();

      // Wait a moment for auth state to settle
      await new Promise((resolve) => setTimeout(resolve, 2000));

      // Check if user is authenticated
      const isAuthenticated = await authManager.isAuthenticated();
      const user = authManager.getUser();

      if (isAuthenticated && user) {
        console.log("ðŸ”„ Callback: User authenticated, redirecting...");

        // Check if user needs to set password (first time login)
        const profile = authManager.getProfile();
        if (!profile) {
          // New user, redirect to password setup
          window.location.href = "/profile?setup=password";
        } else {
          // Existing user, redirect to profile
          window.location.href = "/profile";
        }
      } else {
        console.log(
          "ðŸ”„ Callback: No authentication found, redirecting to signin"
        );
        window.location.href = "/auth/signin";
      }
    } catch (error) {
      console.error("ðŸ”„ Callback: Error processing authentication:", error);
      window.location.href = "/auth/signin?error=callback_failed";
    }
  });
</script>
